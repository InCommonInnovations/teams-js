{"version":3,"file":"MicrosoftTeams.min.js","mappings":"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","sources":["webpack://microsoftTeams/webpack/universalModuleDefinition","webpack://microsoftTeams/../../node_modules/base64-js/index.js","webpack://microsoftTeams/../../node_modules/buffer/index.js","webpack://microsoftTeams/../../node_modules/debug/src/browser.js","webpack://microsoftTeams/../../node_modules/debug/src/common.js","webpack://microsoftTeams/../../node_modules/ieee754/index.js","webpack://microsoftTeams/../../node_modules/ms/index.js","webpack://microsoftTeams/webpack/bootstrap","webpack://microsoftTeams/webpack/runtime/create fake namespace object","webpack://microsoftTeams/webpack/runtime/define property getters","webpack://microsoftTeams/webpack/runtime/hasOwnProperty shorthand","webpack://microsoftTeams/webpack/runtime/make namespace object","webpack://microsoftTeams/./src/public/interfaces.ts","webpack://microsoftTeams/./src/public/constants.ts","webpack://microsoftTeams/./src/internal/utils.ts","webpack://microsoftTeams/./src/internal/uuidObject.ts","webpack://microsoftTeams/./src/internal/telemetry.ts","webpack://microsoftTeams/./src/internal/constants.ts","webpack://microsoftTeams/./src/internal/globalVars.ts","webpack://microsoftTeams/./src/public/runtime.ts","webpack://microsoftTeams/./src/public/version.ts","webpack://microsoftTeams/./src/internal/internalAPIs.ts","webpack://microsoftTeams/./src/internal/typeCheckUtilities.ts","webpack://microsoftTeams/./src/internal/validOrigins.ts","webpack://microsoftTeams/./src/internal/appIdValidation.ts","webpack://microsoftTeams/./src/public/appId.ts","webpack://microsoftTeams/./src/private/messageChannels.ts","webpack://microsoftTeams/./src/public/authentication.ts","webpack://microsoftTeams/./src/public/dialog.ts","webpack://microsoftTeams/./src/public/menus.ts","webpack://microsoftTeams/./src/public/app.ts","webpack://microsoftTeams/./src/public/pages.ts","webpack://microsoftTeams/./src/internal/handlers.ts","webpack://microsoftTeams/./src/internal/messageObjects.ts","webpack://microsoftTeams/./src/internal/nestedAppAuthUtils.ts","webpack://microsoftTeams/./src/internal/communication.ts","webpack://microsoftTeams/./src/private/logs.ts","webpack://microsoftTeams/./src/private/interfaces.ts","webpack://microsoftTeams/./src/private/privateAPIs.ts","webpack://microsoftTeams/./src/private/conversations.ts","webpack://microsoftTeams/./src/private/copilot.ts","webpack://microsoftTeams/./src/private/externalAppAuthentication.ts","webpack://microsoftTeams/./src/private/externalAppAuthenticationForCEA.ts","webpack://microsoftTeams/./src/private/externalAppCardActions.ts","webpack://microsoftTeams/./src/private/externalAppCardActionsForCEA.ts","webpack://microsoftTeams/./src/private/externalAppCommands.ts","webpack://microsoftTeams/./src/private/files.ts","webpack://microsoftTeams/./src/private/meetingRoom.ts","webpack://microsoftTeams/./src/private/notifications.ts","webpack://microsoftTeams/./src/private/otherAppStateChange.ts","webpack://microsoftTeams/./src/private/remoteCamera.ts","webpack://microsoftTeams/./src/private/appEntity.ts","webpack://microsoftTeams/./src/private/teams.ts","webpack://microsoftTeams/./src/internal/videoFrameTick.ts","webpack://microsoftTeams/./src/internal/videoPerformanceStatistics.ts","webpack://microsoftTeams/./src/internal/videoPerformanceMonitor.ts","webpack://microsoftTeams/./src/public/videoEffects.ts","webpack://microsoftTeams/./src/internal/videoEffectsUtils.ts","webpack://microsoftTeams/./src/private/videoEffectsEx.ts","webpack://microsoftTeams/./src/private/hostEntity.ts","webpack://microsoftTeams/./src/internal/emailAddressValidation.ts","webpack://microsoftTeams/./src/public/emailAddress.ts","webpack://microsoftTeams/./src/internal/deepLinkConstants.ts","webpack://microsoftTeams/./src/internal/deepLinkUtilities.ts","webpack://microsoftTeams/./src/public/appInstallDialog.ts","webpack://microsoftTeams/./src/public/media.ts","webpack://microsoftTeams/./src/internal/mediaUtil.ts","webpack://microsoftTeams/./src/public/barCode.ts","webpack://microsoftTeams/./src/public/chat.ts","webpack://microsoftTeams/./src/public/clipboard.ts","webpack://microsoftTeams/./src/public/nestedAppAuth.ts","webpack://microsoftTeams/./src/public/geoLocation.ts","webpack://microsoftTeams/./src/public/adaptiveCards.ts","webpack://microsoftTeams/./src/public/appWindow.ts","webpack://microsoftTeams/./src/public/secondaryBrowser.ts","webpack://microsoftTeams/./src/public/location.ts","webpack://microsoftTeams/./src/public/meeting.ts","webpack://microsoftTeams/./src/public/monetization.ts","webpack://microsoftTeams/./src/public/calendar.ts","webpack://microsoftTeams/./src/public/mail.ts","webpack://microsoftTeams/./src/public/teamsAPIs.ts","webpack://microsoftTeams/./src/public/people.ts","webpack://microsoftTeams/./src/internal/profileUtil.ts","webpack://microsoftTeams/./src/public/profile.ts","webpack://microsoftTeams/./src/public/search.ts","webpack://microsoftTeams/./src/public/sharing.ts","webpack://microsoftTeams/./src/public/stageView.ts","webpack://microsoftTeams/./src/public/visualMedia.ts","webpack://microsoftTeams/./src/public/webStorage.ts","webpack://microsoftTeams/./src/public/call.ts","webpack://microsoftTeams/./src/public/appInitialization.ts","webpack://microsoftTeams/./src/public/thirdPartyCloudStorage.ts","webpack://microsoftTeams/./src/public/publicAPIs.ts","webpack://microsoftTeams/./src/public/navigation.ts","webpack://microsoftTeams/./src/public/settings.ts","webpack://microsoftTeams/./src/public/tasks.ts","webpack://microsoftTeams/./src/public/liveShareHost.ts","webpack://microsoftTeams/./src/internal/marketplaceUtils.ts","webpack://microsoftTeams/./src/public/marketplace.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"microsoftTeams\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microsoftTeams\"] = factory();\n\telse\n\t\troot[\"microsoftTeams\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable @typescript-eslint/no-explicit-any*/\n\nimport { ChannelType, DialogDimension, HostClientType, HostName, TeamType, UserTeamRole } from './constants';\nimport { FrameContexts } from './constants';\n\n/**\n * Represents information about tabs for an app\n */\nexport interface TabInformation {\n  /** Represents the tabs associated with a Microsoft Teams app */\n  teamTabs: TabInstance[];\n}\n\n/**\n * Represents information about a tab instance\n */\nexport interface TabInstance {\n  /**\n   * The name of the tab\n   */\n  tabName: string;\n\n  /**\n   * @internal\n   * Limited to Microsoft-internal use\n   * @protected\n   */\n  internalTabInstanceId?: string;\n\n  /**\n   * Last viewed time of this tab. null means unknown\n   */\n  lastViewUnixEpochTime?: string;\n\n  /**\n   * The developer-defined unique ID for the entity this content points to.\n   */\n  entityId?: string;\n\n  /**\n   * The Microsoft Teams ID for the channel with which the content is associated.\n   */\n  channelId?: string;\n\n  /**\n   * The name for the channel with which the content is associated.\n   */\n  channelName?: string;\n\n  /**\n   * Is this tab in a favorite channel?\n   */\n  channelIsFavorite?: boolean;\n\n  /**\n   * The Microsoft Teams ID for the team with which the content is associated.\n   */\n  teamId?: string;\n\n  /**\n   * The name for the team with which the content is associated.\n   */\n  teamName?: string;\n\n  /**\n   * Is this tab in a favorite team?\n   */\n  teamIsFavorite?: boolean;\n\n  /**\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * Content URL of this tab\n   */\n  url?: string;\n\n  /**\n   * Website URL of this tab\n   */\n  websiteUrl?: string;\n\n  /**\n   * AppId of this tab\n   */\n  appId?: string;\n\n  /**\n   * Order of this tab. Order is 1-indexed.\n   */\n  order?: number;\n}\n\n/**\n * Indicates information about the tab instance for filtering purposes.\n */\nexport interface TabInstanceParameters {\n  /**\n   * Flag allowing to select favorite channels only\n   */\n  favoriteChannelsOnly?: boolean;\n\n  /**\n   * Flag allowing to select favorite teams only\n   */\n  favoriteTeamsOnly?: boolean;\n}\n\n/**\n * Represents Team Information\n */\nexport interface TeamInformation {\n  /**\n   * Id of the team\n   */\n  teamId: string;\n\n  /**\n   * Team display name\n   */\n  teamName: string;\n\n  /**\n   * Team description\n   */\n  teamDescription?: string;\n\n  /**\n   * Thumbnail Uri\n   */\n  thumbnailUri?: string;\n\n  /**\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * Role of current user in the team\n   */\n  userTeamRole?: UserTeamRole;\n\n  /**\n   * The type of the team.\n   */\n  teamType?: TeamType;\n\n  /**\n   * The locked status of the team\n   */\n  isTeamLocked?: boolean;\n\n  /**\n   * The archived status of the team\n   */\n  isTeamArchived?: boolean;\n}\n\n/**\n * Represents OS locale info used for formatting date and time data\n */\nexport interface LocaleInfo {\n  /** Represents the user's platform on which the app is running. */\n  platform: HostClientType.android | HostClientType.ios | HostClientType.macos | 'windows';\n  /**\n   * Represents the regional format used by the user's locale.\n   * @example `en-us`.\n   */\n  regionalFormat: string;\n  /**\n   * Displays date values, as specified by the short date format MM/DD/YYYY in user's regional settings.\n   * @example 4/21/2023 or 4-21-2023\n   */\n  shortDate: string;\n  /**\n   * Displays only date values, as specified by the Long Date format in user's regional settings.\n   * @example Friday, April 21, 2023\n   */\n  longDate: string;\n  /**\n   * A string representing the short time format used by the user's locale.\n   * @example 10:10\n   */\n  shortTime: string;\n  /**\n   * A string representing the long time format used by the user's locale.\n   * @example 10:10:42 AM\n   */\n  longTime: string;\n}\n\n/**\n * Allowed user file open preferences\n */\nexport enum FileOpenPreference {\n  /** Indicates that the user should be prompted to open the file in inline. */\n  Inline = 'inline',\n  /** Indicates that the user should be prompted to open the file in the native desktop application associated with the file type. */\n  Desktop = 'desktop',\n  /** Indicates that the user should be prompted to open the file in a web browser. */\n  Web = 'web',\n}\n\n/**\n * Types of Action Objects\n *\n * @beta\n */\nexport enum ActionObjectType {\n  /** Represents content within a Microsoft 365 application. */\n  M365Content = 'm365content',\n}\n\n/**\n * Data pertaining to object(s) the action is being performed on\n *\n * @param T The type of action being implemented\n *\n * @beta\n */\nexport interface BaseActionObject<T extends ActionObjectType> {\n  /** Represents action type. */\n  type: T;\n}\n\n/**\n * Stores information needed to represent content stored in OneDrive or Sharepoint\n *\n * @beta\n */\nexport interface M365ContentAction extends BaseActionObject<ActionObjectType.M365Content> {\n  /**\n   * Only office content IDs are passed to the app. Apps should use these ids\n   * to query the Microsoft graph for more details.\n   */\n  itemId: string;\n  /** Represents an optional secondary identifier for an action in a Microsoft 365 content item. */\n  secondaryId?: SecondaryId;\n}\n\n/**\n * Contains additional IDs of the content that the action is triggered from. Maps to ids used in the Graph.\n *\n * @beta\n */\nexport interface SecondaryId {\n  /** Name of the secondary id that should be used. */\n  name: SecondaryM365ContentIdName;\n  /** The secondary id value that can be used to retrieve M365 content. */\n  value: string;\n}\n\n/**\n * These correspond with field names in the MSGraph.\n * See [commonly accessed resources](https://learn.microsoft.com/graph/api/resources/onedrive?view=graph-rest-1.0#commonly-accessed-resources).\n * @beta\n */\nexport enum SecondaryM365ContentIdName {\n  /** OneDrive ID */\n  DriveId = 'driveId',\n  /** Teams Group ID */\n  GroupId = 'groupId',\n  /** SharePoint ID */\n  SiteId = 'siteId',\n  /** User ID */\n  UserId = 'userId',\n}\n\n/**\n * Information about an Action.\n *\n * @remarks\n * This contains Id of the action, and the information about the object that triggered the action.\n * @beta\n */\nexport interface ActionInfo {\n  /**\n   * Id of the action. Maps to the action id supplied inside the manifest\n   */\n  actionId: string;\n  /**\n   * Array of corresponding action objects\n   */\n  actionObjects: BaseActionObject<ActionObjectType>[];\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use the {@link app.Context} interface and its updated properties instead.\n *\n * @remarks\n * For more details about the updated {@link app.Context} interface, visit the\n * [Teams JavaScript client SDK](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/using-teams-client-sdk#updates-to-the-context-interface)\n * overview article.\n *\n * Represents the structure of the received context message.\n */\nexport interface Context {\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link ActionInfo | app.Context.actionInfo} instead\n   *\n   * Common information applicable to all content actions\n   */\n  actionInfo?: ActionInfo;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.groupId | app.Context.team.groupId} instead\n   *\n   * The Office 365 group ID for the team with which the content is associated.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  groupId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.internalId | app.Context.team.internalId} instead\n   *\n   * The Microsoft Teams ID for the team with which the content is associated.\n   */\n  teamId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.displayName | app.Context.team.displayName} instead\n   *\n   * The name for the team with which the content is associated.\n   */\n  teamName?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.id | app.Context.channel.id} instead\n   *\n   * The Microsoft Teams ID for the channel with which the content is associated.\n   */\n  channelId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.displayName | app.Context.channel.displayName} instead\n   *\n   * The name for the channel with which the content is associated.\n   */\n  channelName?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.membershipType | app.Context.channel.membershipType} instead\n   *\n   * The type of the channel with which the content is associated.\n   */\n  channelType?: ChannelType;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.id | app.Context.page.id} instead\n   *\n   * The developer-defined unique ID for the entity this content points to.\n   */\n  entityId: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.subPageId | app.Context.page.subPageId} instead\n   *\n   * The developer-defined unique ID for the sub-entity this content points to.\n   * This field should be used to restore to a specific state within an entity,\n   * such as scrolling to or activating a specific piece of content.\n   */\n  subEntityId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.locale | app.Context.app.locale} instead\n   *\n   * The current locale that the user has configured for the app formatted as\n   * languageId-countryId (for example, en-us).\n   */\n  locale: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.osLocaleInfo | app.Context.app.osLocaleInfo} instead\n   *\n   * More detailed locale info from the user's OS if available. Can be used together with\n   * the @microsoft/globe NPM package to ensure your app respects the user's OS date and\n   * time format configuration\n   */\n  osLocaleInfo?: LocaleInfo;\n\n  /**\n   * @deprecated\n   *\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.loginHint | app.Context.user.loginHint} or\n   * {@link app.UserInfo.userPrincipalName | app.Context.user.userPrincipalName} instead.\n   * The UPN of the current user.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  upn?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TenantInfo.id | app.Context.user.tenant.id} instead\n   *\n   * The Microsoft Entra tenant ID of the current user.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  tid?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.theme | app.Context.app.theme} instead\n   *\n   * The current UI theme.\n   */\n  theme?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.isFullScreen | app.Context.page.isFullScreen} instead\n   *\n   * Indication whether the tab is in full-screen mode.\n   */\n  isFullScreen?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.type | app.Context.team.type} instead\n   *\n   * The type of the team.\n   */\n  teamType?: TeamType;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.teamSiteUrl | app.Context.sharePointSite.teamSiteUrl} instead\n   *\n   * The root SharePoint site associated with the team.\n   */\n  teamSiteUrl?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.teamSiteDomain | app.Context.sharePointSite.teamSiteDomain} instead\n   *\n   * The domain of the root SharePoint site associated with the team.\n   */\n  teamSiteDomain?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.teamSitePath | app.Context.sharePointSite.teamSitePath} instead\n   *\n   * The relative path to the SharePoint site associated with the team.\n   */\n  teamSitePath?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.ownerTenantId | app.Context.channel.ownerTenantId} instead\n   *\n   * The tenant ID of the host team.\n   */\n  hostTeamTenantId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.ownerGroupId | app.Context.channel.ownerGroupId} instead\n   *\n   * The Microsoft Entra group ID of the host team.\n   */\n  hostTeamGroupId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.relativeUrl | app.Context.channel.relativeUrl} instead\n   *\n   * The relative path to the SharePoint folder associated with the channel.\n   */\n  channelRelativeUrl?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppHostInfo.sessionId | app.Context.app.host.sessionId} instead\n   *\n   * Unique ID for the current Teams session for use in correlating telemetry data.\n   */\n  sessionId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.userRole | app.Context.team.userRole} instead\n   *\n   * The user's role in the team.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to the user's role, and never as proof of her role.\n   */\n  userTeamRole?: UserTeamRole;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChatInfo.id | app.Context.chat.id} instead\n   *\n   * The Microsoft Teams ID for the chat with which the content is associated.\n   */\n  chatId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.loginHint | app.Context.user.loginHint} instead\n   *\n   * A value suitable for use as a login_hint when authenticating with Microsoft Entra ID.\n   * Because a malicious party can run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  loginHint?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.userPrincipalName | app.Context.user.userPrincipalName} instead\n   *\n   * The UPN of the current user. This may be an externally-authenticated UPN (e.g., guest users).\n   * Because a malicious party run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  userPrincipalName?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.id | app.Context.user.id} instead\n   *\n   * The Microsoft Entra object ID of the current user.\n   * Because a malicious party run your content in a browser, this value should\n   * be used only as a hint as to who the user is and never as proof of identity.\n   * This field is available only when the identity permission is requested in the manifest.\n   */\n  userObjectId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.isArchived | app.Context.team.isArchived} instead\n   *\n   * Indicates whether team is archived.\n   * Apps should use this as a signal to prevent any changes to content associated with archived teams.\n   */\n  isTeamArchived?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppHostInfo.name | app.Context.app.host.name} instead\n   *\n   * The name of the host client. Possible values are: Office, Orange, Outlook, Teams\n   */\n  hostName?: HostName;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppHostInfo.clientType | app.Context.app.host.clientType} instead\n   *\n   * The type of the host client. Possible values are : android, ios, web, desktop, rigel(deprecated, use teamsRoomsWindows instead),\n   * surfaceHub, teamsRoomsWindows, teamsRoomsAndroid, teamsPhones, teamsDisplays\n   */\n  hostClientType?: HostClientType;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.frameContext | app.Context.page.frameContext} instead\n   *\n   * The context where tab url is loaded (content, task, setting, remove, sidePanel)\n   */\n  frameContext?: FrameContexts;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.Context | app.Context.sharepoint} instead\n   *\n   * SharePoint context. This is only available when hosted in SharePoint.\n   */\n  sharepoint?: any;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TenantInfo.teamsSku | app.Context.tenant.teamsSku} instead\n   *\n   * The type of license for the current users tenant.\n   */\n  tenantSKU?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.licenseType | app.Context.user.licenseType} instead\n   *\n   * The license type for the current user.\n   */\n  userLicenseType?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.parentMessageId | app.Context.app.parentMessageId} instead\n   *\n   * The ID of the parent message from which this task module was launched.\n   * This is only available in task modules launched from bot cards.\n   */\n  parentMessageId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppHostInfo.ringId | app.Context.app.host.ringId} instead\n   *\n   * Current ring ID\n   */\n  ringId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.sessionId | app.Context.app.sessionId} instead\n   *\n   * Unique ID for the current session for use in correlating telemetry data. A session corresponds to the lifecycle of an app. A new session begins upon the creation of a webview (on Teams mobile) or iframe (in Teams desktop) hosting the app, and ends when it is destroyed.\n   */\n  appSessionId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.appLaunchId | app.Context.app.appLaunchId} instead\n   *\n   * ID for the current visible app which is different for across cached sessions. Used for correlating telemetry data``\n   */\n  appLaunchId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.isCallingAllowed | app.Context.user.isCallingAllowed} instead\n   *\n   * Represents whether calling is allowed for the current logged in User\n   */\n  isCallingAllowed?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.isPSTNCallingAllowed | app.Context.user.isPSTNCallingAllowed} instead\n   *\n   * Represents whether PSTN calling is allowed for the current logged in User\n   */\n  isPSTNCallingAllowed?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.MeetingInfo.id | app.Context.meeting.id} instead\n   *\n   * Meeting Id used by tab when running in meeting context\n   */\n  meetingId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ChannelInfo.defaultOneNoteSectionId | app.Context.channel.defaultOneNoteSectionId} instead\n   *\n   * The OneNote section ID that is linked to the channel.\n   */\n  defaultOneNoteSectionId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.isMultiWindow | app.Context.page.isMultiWindow} instead\n   *\n   * Indication whether the tab is in a pop out window\n   */\n  isMultiWindow?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.isBackgroundLoad | app.Context.page.isBackgroundLoad} instead\n   *\n   * Indication whether the tab is being loaded in the background\n   */\n  isBackgroundLoad?: boolean;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.iconPositionVertical | app.Context.app.iconPositionVertical} instead\n   *\n   * Personal app icon y coordinate position\n   */\n  appIconPosition?: number;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.PageInfo.sourceOrigin | app.Context.page.sourceOrigin} instead\n   *\n   * Source origin from where the tab is opened\n   */\n  sourceOrigin?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.userClickTime | app.Context.app.userClickTime} instead\n   *\n   * Time when the user clicked on the tab\n   */\n  userClickTime?: number;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.TeamInfo.templateId | app.Context.team.templateId} instead\n   *\n   * Team Template ID if there was a Team Template associated with the creation of the team.\n   */\n  teamTemplateId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.AppInfo.userFileOpenPreference | app.Context.app.userFileOpenPreference} instead\n   *\n   * Where the user prefers the file to be opened from by default during file open\n   */\n  userFileOpenPreference?: FileOpenPreference;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.UserInfo.displayName | app.Context.user.displayName} instead\n   *\n   * The address book name of the current user.\n   */\n  userDisplayName?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.teamSiteId | app.Context.sharePointSite.teamSiteId} instead\n   *\n   * Teamsite ID, aka sharepoint site id.\n   */\n  teamSiteId?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.mySiteDomain | app.Context.sharePointSite.mySiteDomain} instead\n   *\n   * The SharePoint my site domain associated with the user.\n   */\n  mySiteDomain?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.SharePointSiteInfo.mySitePath | app.Context.sharePointSite.mySitePath} instead\n   *\n   * The SharePoint relative path to the current users mysite\n   */\n  mySitePath?: string;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.Context.dialogParameters} instead\n   *\n   * When `processActionCommand` activates a dialog, this dialog should automatically fill in some fields with information. This information comes from M365 and is given to `processActionCommand` as `extractedParameters`.\n   * App developers need to use these `extractedParameters` in their dialog.\n   * They help pre-fill the dialog with necessary information (`dialogParameters`) along with other details.\n   */\n  dialogParameters?: Record<string, string>;\n}\n\n/** Represents the parameters used to share a deep link. */\nexport interface ShareDeepLinkParameters {\n  /**\n   * The developer-defined unique ID for the sub-page to which this deep link points in the current page.\n   * This field should be used to restore to a specific state within a page, such as scrolling to or activating a specific piece of content.\n   */\n  subPageId: string;\n\n  /**\n   * The label for the sub-page that should be displayed when the deep link is rendered in a client.\n   */\n  subPageLabel: string;\n\n  /**\n   * The fallback URL to which to navigate the user if the client cannot render the page.\n   * This URL should lead directly to the sub-entity.\n   */\n  subPageWebUrl?: string;\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link ShareDeepLinkParameters} instead.\n */\nexport interface DeepLinkParameters {\n  /**\n   * The developer-defined unique ID for the sub-entity to which this deep link points in the current entity.\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\n   */\n  subEntityId: string;\n\n  /**\n   * The label for the sub-entity that should be displayed when the deep link is rendered in a client.\n   */\n  subEntityLabel: string;\n\n  /**\n   * The fallback URL to which to navigate the user if the client cannot render the page.\n   * This URL should lead directly to the sub-entity.\n   */\n  subEntityWebUrl?: string;\n}\n\n/**\n * @hidden\n * Shared Dialog Properties\n */\nexport interface BaseDialogInfo {\n  /**\n   * The requested size of the dialog\n   */\n  size: DialogSize;\n\n  /**\n   * Title of the dialog module.\n   */\n  title?: string;\n}\n\n/**\n * Data structure to describe dialog information needed to open an Adaptive Card-based dialog.\n */\nexport interface AdaptiveCardDialogInfo extends BaseDialogInfo {\n  /**\n   * JSON defining an Adaptive Card.\n   */\n  card: string;\n}\n\n/**\n * Data structure to describe dialog information needed to open a bot-based Adaptive Card-based dialog.\n */\nexport interface BotAdaptiveCardDialogInfo extends AdaptiveCardDialogInfo {\n  /**\n   * Specifies a bot ID to send the result of the user's interaction with the dialog module.\n   * The bot will receive a task/complete invoke event with a JSON object\n   * in the event payload.\n   */\n  completionBotId: string;\n}\n\n/**\n * Data structure to represent the size of a dialog\n */\nexport interface DialogSize {\n  /**\n   * The requested height of the webview/iframe.\n   */\n  height: DialogDimension | number;\n\n  /**\n   * The requested width of the webview/iframe.\n   */\n  width: DialogDimension | number;\n}\n\n/**\n * Data structure to describe dialog information needed to open a url-based dialog.\n */\nexport interface UrlDialogInfo extends BaseDialogInfo {\n  /**\n   * The url to be rendered in the webview/iframe.\n   *\n   * @remarks\n   * The domain of the url must match at least one of the\n   * valid domains specified in the [validDomains block](https://learn.microsoft.com/microsoftteams/platform/resources/schema/manifest-schema#validdomains) of the app manifest\n   */\n  url: string;\n\n  /**\n   * If client doesnt support the URL, the URL that needs to be opened in the browser.\n   */\n  fallbackUrl?: string;\n}\n\n/**\n * Data structure to describe dialog information needed to open a bot based dialog.\n */\nexport interface BotUrlDialogInfo extends UrlDialogInfo {\n  /**\n   * Specifies a bot ID to send the result of the user's interaction with the task module.\n   * The bot will receive a task/complete invoke event with a JSON object\n   * in the event payload.\n   */\n  completionBotId: string;\n}\n\n/**\n * Data structure to describe dialog information\n */\nexport interface DialogInfo {\n  /**\n   * The url to be rendered in the webview/iframe.\n   *\n   * @remarks\n   * The domain of the url must match at least one of the\n   * valid domains specified in the validDomains block of the manifest\n   */\n  url?: string;\n\n  /**\n   * JSON defining an adaptive card.\n   */\n  card?: string;\n\n  /**\n   * The requested height of the webview/iframe.\n   */\n  height?: DialogDimension | number;\n\n  /**\n   * The requested width of the webview/iframe.\n   */\n  width?: DialogDimension | number;\n\n  /**\n   * Title of the task module.\n   */\n  title?: string;\n\n  /**\n   * If client doesnt support the URL, the URL that needs to be opened in the browser.\n   */\n  fallbackUrl?: string;\n\n  /**\n   * Specifies a bot ID to send the result of the user's interaction with the task module.\n   * If specified, the bot will receive a task/complete invoke event with a JSON object\n   * in the event payload.\n   */\n  completionBotId?: string;\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link DialogInfo} instead.\n */\nexport type TaskInfo = DialogInfo;\n\n/**\n * @beta\n * Data structure to be used with the {@link app.lifecycle.registerOnResumeHandler app.lifecycle.registerOnResumeHandler(handler: (context: ResumeContext) => void): void} to pass the context to the app.\n */\nexport interface ResumeContext {\n  /**\n   * The entity that is requested to be loaded\n   */\n  entityId: string;\n\n  /**\n   * The content URL that is requested to be loaded\n   */\n  contentUrl: URL;\n}\n\n/**\n * @deprecated\n * As of 2.14.1, please use {@link ResumeContext} instead.\n */\nexport interface LoadContext {\n  /**\n   * The entity that is requested to be loaded\n   */\n  entityId: string;\n\n  /**\n   * The content URL that is requested to be loaded\n   */\n  contentUrl: string;\n}\n\n/** Represents information about a frame within a tab or dialog module. */\nexport interface FrameInfo {\n  /**\n   * The current URL that needs to be used in the iframe if the tab is reloaded\n   */\n  contentUrl: string;\n\n  /**\n   * The current URL that needs to be used for opening the website when the user clicks on 'Go to website'\n   */\n  websiteUrl: string;\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link FrameInfo} instead.\n */\nexport type FrameContext = FrameInfo;\n\n/** Represents an error that occurs during the execution of an app or integration. */\nexport interface SdkError {\n  /**\n  error code\n  */\n  errorCode: ErrorCode;\n  /**\n  Optional description for the error. This may contain useful information for web-app developers.\n  This string will not be localized and is not for end-user consumption. \n  App should not depend on the string content. The exact value may change. This is only for debugging purposes.\n  */\n  message?: string;\n}\n\nexport function isSdkError(err: unknown): err is SdkError {\n  return (err as SdkError)?.errorCode !== undefined;\n}\n\n/** Error codes used to identify different types of errors that can occur while developing apps. */\nexport enum ErrorCode {\n  /**\n   * API not supported in the current platform.\n   */\n  NOT_SUPPORTED_ON_PLATFORM = 100,\n  /**\n   * Internal error encountered while performing the required operation.\n   */\n  INTERNAL_ERROR = 500,\n  /**\n   * API is not supported in the current context\n   */\n  NOT_SUPPORTED_IN_CURRENT_CONTEXT = 501,\n  /**\n  Permissions denied by user\n  */\n  PERMISSION_DENIED = 1000,\n  /**\n   * Network issue\n   */\n  NETWORK_ERROR = 2000,\n  /**\n   * Underlying hardware doesn't support the capability\n   */\n  NO_HW_SUPPORT = 3000,\n  /**\n   * One or more arguments are invalid\n   */\n  INVALID_ARGUMENTS = 4000,\n  /**\n   * User is not authorized for this operation\n   */\n  UNAUTHORIZED_USER_OPERATION = 5000,\n  /**\n   * Could not complete the operation due to insufficient resources\n   */\n  INSUFFICIENT_RESOURCES = 6000,\n  /**\n   * Platform throttled the request because of API was invoked too frequently\n   */\n  THROTTLE = 7000,\n  /**\n   * User aborted the operation\n   */\n  USER_ABORT = 8000,\n  /**\n   * Could not complete the operation in the given time interval\n   */\n  OPERATION_TIMED_OUT = 8001,\n  /**\n   * Platform code is old and doesn't implement this API\n   */\n  OLD_PLATFORM = 9000,\n  /**\n   * The file specified was not found on the given location\n   */\n  FILE_NOT_FOUND = 404,\n  /**\n   * The return value is too big and has exceeded our size boundries\n   */\n  SIZE_EXCEEDED = 10000,\n}\n\n/** @hidden */\nexport enum DevicePermission {\n  GeoLocation = 'geolocation',\n  Media = 'media',\n}\n\n/** @hidden */\nexport interface HostVersionsInfo {\n  adaptiveCardSchemaVersion?: AdaptiveCardVersion;\n  appEligibilityInformation?: AppEligibilityInformation;\n}\n\n/**\n * Represents the major and minor versions of the Adaptive Card schema in the current host\n */\nexport interface AdaptiveCardVersion {\n  /** Represents the major version number. */\n  majorVersion: number;\n  /** Represents the minor version number. */\n  minorVersion: number;\n}\n\n/**\n * @hidden\n * Eligibility Information for the app user.\n *\n * @beta\n */\nexport interface AppEligibilityInformation {\n  /**\n   * Describes the user’s age group, which can have implications on which product they are able to use.\n   */\n  ageGroup: LegalAgeGroupClassification | null;\n  /**\n   * Describes the user’s chat experience based on their eligible licenses & their tenant’s eligible licenses.\n   * A user will be in at most one cohort.\n   */\n  cohort: Cohort | null;\n  /**\n   * Indicates that the user is eligible for Microsoft Entra ID Authenticated Copilot experience.\n   */\n  isCopilotEligible: boolean;\n  /**\n   * Implementation may change to be based on tenant-home region rather than IP.\n   */\n  isCopilotEnabledRegion: boolean;\n  /**\n   * Indicates if the tenant admin has opted the user out of Copilot.\n   */\n  isOptedOutByAdmin: boolean;\n  /**\n   * Education Eligibility Information for the app user\n   */\n  userClassification: UserClassification | null;\n}\n\n/**\n * @hidden\n *\n * @beta\n */\nexport interface UserClassificationWithEduType {\n  /**\n   * For EDU tenants only. Indicates if the tenant is higher ed or K12.\n   */\n  eduType: EduType;\n  /**\n   * Describes additional traits of the user that contribute to FRE experience, etc.\n   */\n  persona: Persona.Faculty | Persona.Student;\n}\n\n/**\n * @hidden\n *\n * @beta\n */\nexport interface UserClassificationWithOtherType {\n  persona: Persona.Other;\n}\n\n/**\n * @hidden\n *\n * @beta\n */\nexport type UserClassification = UserClassificationWithEduType | UserClassificationWithOtherType;\n\n/**\n * @hidden\n *\n * @beta\n */\nexport enum Cohort {\n  BCAIS = 'bcais',\n  BCWAF = 'bcwaf',\n  BCWBF = 'bcwbf',\n}\n\n/**\n * @hidden\n *\n * @beta\n */\nexport enum Persona {\n  /**\n   * User has a faculty license\n   */\n  Faculty = 'faculty',\n  /**\n   * User has a student license\n   */\n  Student = 'student',\n  /**\n   * When user is not a faculty or student\n   */\n  Other = 'other',\n}\n\n/**\n * @hidden\n *\n * @beta\n */\n// https://learn.microsoft.com/en-us/graph/api/resources/user?view=graph-rest-1.0#legalagegroupclassification-values\nexport enum LegalAgeGroupClassification {\n  /**\n   * The user is considered an adult based on the age-related regulations of their country or region.\n   */\n  Adult = 'adult',\n  /**\n   * The user is a minor but is from a country or region that has no age-related regulations.\n   */\n  MinorNoParentalConsentRequired = 'minorNoParentalConsentRequired',\n  /**\n   * Reserved for future use\n   */\n  MinorWithoutParentalConsent = 'minorWithoutParentalConsent',\n  /**\n   * The user is considered a minor based on the age-related regulations of their country or region, and the administrator\n   * of the account obtained appropriate consent from a parent or guardian.\n   */\n  MinorWithParentalConsent = 'minorWithParentalConsent',\n  /**\n   * The user is from a country or region that has additional age-related regulations, such as the United States,\n   * United Kingdom, European Union, or South Korea, and the user's age is between a minor and an adult age\n   * (as stipulated based on country or region). Generally, this means that teenagers are considered as notAdult in regulated countries.\n   */\n  NonAdult = 'nonAdult',\n}\n\n/**\n * @hidden\n *\n * @beta\n */\nexport enum EduType {\n  /**\n   * User is from a tenant labeled as “HigherEd”\n   */\n  HigherEducation = 'higherEducation',\n  /**\n   * User is from a tenant labeled as “K12”\n   */\n  K12 = 'k12',\n  /**\n   * User is from a tenant labeled as “Others” (e.g. research institutions)\n   */\n  Other = 'other',\n}\n\n/**\n * Currently supported Mime type\n */\nexport enum ClipboardSupportedMimeType {\n  TextPlain = 'text/plain',\n  TextHtml = 'text/html',\n  ImagePNG = 'image/png',\n  ImageJPEG = 'image/jpeg',\n}\n\n/**\n * Clipboard write parameters\n */\nexport interface ClipboardParams {\n  /** Mime Type of data to be copied to Clipboard */\n  mimeType: ClipboardSupportedMimeType;\n  /** Blob content in Base64 string format */\n  content: string;\n}\n","/** HostClientType represents the different client platforms on which host can be run. */\nexport enum HostClientType {\n  /** Represents the desktop client of host, which is installed on a user's computer and runs as a standalone application. */\n  desktop = 'desktop',\n  /** Represents the web-based client of host, which runs in a web browser. */\n  web = 'web',\n  /** Represents the Android mobile client of host, which runs on Android devices such as smartphones and tablets. */\n  android = 'android',\n  /** Represents the iOS mobile client of host, which runs on iOS devices such as iPhones. */\n  ios = 'ios',\n  /** Represents the iPadOS client of host, which runs on iOS devices such as iPads. */\n  ipados = 'ipados',\n  /** The host is running on a macOS client, which runs on devices such as MacBooks. */\n  macos = 'macos',\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link teamsRoomsWindows} instead.\n   */\n  rigel = 'rigel',\n  /** Represents the client of host, which runs on surface hub devices. */\n  surfaceHub = 'surfaceHub',\n  /** Represents the client of host, which runs on Teams Rooms on Windows devices. More information on Microsoft Teams Rooms on Windows can be found [Microsoft Teams Rooms (Windows)](https://support.microsoft.com/office/microsoft-teams-rooms-windows-help-e667f40e-5aab-40c1-bd68-611fe0002ba2)*/\n  teamsRoomsWindows = 'teamsRoomsWindows',\n  /** Represents the client of host, which runs on Teams Rooms on Android devices. More information on Microsoft Teams Rooms on Android can be found [Microsoft Teams Rooms (Android)].(https://support.microsoft.com/office/get-started-with-teams-rooms-on-android-68517298-d513-46be-8d6d-d41db5e6b4b2)*/\n  teamsRoomsAndroid = 'teamsRoomsAndroid',\n  /** Represents the client of host, which runs on Teams phones. More information can be found [Microsoft Teams Phones](https://support.microsoft.com/office/get-started-with-teams-phones-694ca17d-3ecf-40ca-b45e-d21b2c442412) */\n  teamsPhones = 'teamsPhones',\n  /** Represents the client of host, which runs on Teams displays devices. More information can be found [Microsoft Teams Displays](https://support.microsoft.com/office/get-started-with-teams-displays-ff299825-7f13-4528-96c2-1d3437e6d4e6) */\n  teamsDisplays = 'teamsDisplays',\n}\n\n/** HostName indicates the possible hosts for your application. */\nexport enum HostName {\n  /**\n   * Office.com and Office Windows App\n   */\n  office = 'Office',\n\n  /**\n   * For \"desktop\" specifically, this refers to the new, pre-release version of Outlook for Windows.\n   * Also used on other platforms that map to a single Outlook client.\n   */\n  outlook = 'Outlook',\n\n  /**\n   * Outlook for Windows: the classic, native, desktop client\n   */\n  outlookWin32 = 'OutlookWin32',\n\n  /**\n   * Microsoft-internal test Host\n   */\n  orange = 'Orange',\n\n  /**\n   * Microsoft connected workplace platform\n   */\n  places = 'Places',\n\n  /**\n   * Teams\n   */\n  teams = 'Teams',\n\n  /**\n   * Modern Teams\n   */\n  teamsModern = 'TeamsModern',\n}\n\n/**\n * FrameContexts provides information about the context in which the app is running within the host.\n * Developers can use FrameContexts to determine how their app should behave in different contexts,\n * and can use the information provided by the context to adapt the app to the user's needs.\n *\n * @example\n * If your app is running in the \"settings\" context, you should be displaying your apps configuration page.\n * If the app is running in the content context, the developer may want to display information relevant to\n * the content the user is currently viewing.\n */\nexport enum FrameContexts {\n  /**\n   * App's frame context from where settings page can be accessed.\n   * See [how to create a configuration page.]( https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/create-tab-pages/configuration-page?tabs=teamsjs-v2)\n   */\n  settings = 'settings',\n  /** The default context for the app where all the content of the app is displayed. */\n  content = 'content',\n  /** Frame context used when app is running in the authentication window launched by calling {@link authentication.authenticate} */\n  authentication = 'authentication',\n  /** The page shown when the user uninstalls the app. */\n  remove = 'remove',\n  /** A task module is a pop-up window that can be used to display a form, a dialog, or other interactive content within the host. */\n  task = 'task',\n  /** The side panel is a persistent panel that is displayed on the right side of the host and can be used to display content or UI that is relevant to the current page or tab. */\n  sidePanel = 'sidePanel',\n  /** The stage is a large area that is displayed at the center of the host and can be used to display content or UI that requires a lot of space, such as a video player or a document editor. */\n  stage = 'stage',\n  /** App's frame context from where meetingStage can be accessed in a meeting session, which is the primary area where video and presentation content is displayed during a meeting. */\n  meetingStage = 'meetingStage',\n}\n\n/**\n * Indicates the team type, currently used to distinguish between different team\n * types in Office 365 for Education (team types 1, 2, 3, and 4).\n */\nexport enum TeamType {\n  /** Represents a standard or classic team in host that is designed for ongoing collaboration and communication among a group of people. */\n  Standard = 0,\n  /**  Represents an educational team in host that is designed for classroom collaboration and communication among students and teachers. */\n  Edu = 1,\n  /** Represents a class team in host that is designed for classroom collaboration and communication among students and teachers in a structured environment. */\n  Class = 2,\n  /** Represents a professional learning community (PLC) team in host that is designed for educators to collaborate and share resources and best practices. */\n  Plc = 3,\n  /** Represents a staff team in host that is designed for staff collaboration and communication among staff members.*/\n  Staff = 4,\n}\n\n/**\n * Indicates the various types of roles of a user in a team.\n */\nexport enum UserTeamRole {\n  /** Represents that the user is an owner or administrator of the team. */\n  Admin = 0,\n  /** Represents that the user is a standard member of the team. */\n  User = 1,\n  /** Represents that the user does not have any role in the team. */\n  Guest = 2,\n}\n\n/**\n * Dialog module dimension enum\n */\nexport enum DialogDimension {\n  /** Represents a large-sized dialog box, which is typically used for displaying large amounts of content or complex workflows that require more space. */\n  Large = 'large',\n  /** Represents a medium-sized dialog box, which is typically used for displaying moderate amounts of content or workflows that require less space. */\n  Medium = 'medium',\n  /** Represents a small-sized dialog box, which is typically used for displaying simple messages or workflows that require minimal space.*/\n  Small = 'small',\n}\n\nimport { AdaptiveCardVersion, ErrorCode, SdkError } from './interfaces';\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link DialogDimension} instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport import TaskModuleDimension = DialogDimension;\nimport { HostVersionsInfo } from './interfaces';\n\n/**\n * The type of the channel with which the content is associated.\n */\nexport enum ChannelType {\n  /** The default channel type. Type of channel is used for general collaboration and communication within a team. */\n  Regular = 'Regular',\n  /** Type of channel is used for sensitive or confidential communication within a team and is only accessible to members of the channel. */\n  Private = 'Private',\n  /** Type of channel is used for collaboration between multiple teams or groups and is accessible to members of all the teams or groups. */\n  Shared = 'Shared',\n}\n\n/** An error object indicating that the requested operation or feature is not supported on the current platform or device.\n * @typedef {Object} SdkError\n */\nexport const errorNotSupportedOnPlatform: SdkError = {\n  errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM,\n};\n\n/**\n * @hidden\n *\n * Minimum Adaptive Card version supported by the host.\n */\nexport const minAdaptiveCardVersion: AdaptiveCardVersion = { majorVersion: 1, minorVersion: 5 };\n\n/**\n * @hidden\n *\n * Adaptive Card version supported by the Teams v1 client.\n */\nexport const teamsMinAdaptiveCardVersion: HostVersionsInfo = {\n  adaptiveCardSchemaVersion: { majorVersion: 1, minorVersion: 5 },\n};\n\n/**\n * @hidden\n * An error object indicates that the image count from visualMedia.image API is invalid.\n *\n * @beta\n */\nexport const errorInvalidCount = new Error('Invalid input count: Must supply a valid image count (limit of 10).');\n/**\n * @hidden\n * An error object indicates that the response from the visualMedia.image API is invalid.\n *\n * @beta\n */\nexport const errorInvalidResponse = new Error(\n  'Invalid response: Received more images than the specified max limit in the response.',\n);\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Buffer } from 'buffer';\n\nimport { minAdaptiveCardVersion } from '../public/constants';\nimport { AdaptiveCardVersion, SdkError } from '../public/interfaces';\nimport { pages } from '../public/pages';\n\nfunction generateUUID(): string {\n  const hexDigits = '0123456789abcdef';\n  let uuid = '';\n\n  for (let i = 0; i < 36; i++) {\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid += '-';\n    } else if (i === 14) {\n      uuid += '4'; // The version number (4 means random UUID)\n    } else if (i === 19) {\n      uuid += hexDigits.substr((Math.random() * 4) | (0 + 8), 1); // The variant part\n    } else {\n      uuid += hexDigits[Math.floor(Math.random() * 16)];\n    }\n  }\n  return uuid;\n}\n\nfunction isValidUUID(uuid): boolean {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function getGenericOnCompleteHandler(errorMessage?: string): (success: boolean, reason?: string) => void {\n  return (success: boolean, reason: string): void => {\n    if (!success) {\n      throw new Error(errorMessage ? errorMessage : reason);\n    }\n  };\n}\n\n/**\n * @hidden\n * Compares SDK versions.\n *\n * @param v1 - first version\n * @param v2 - second version\n * @returns NaN in case inputs are not in right format\n *         -1 if v1 < v2\n *          1 if v1 > v2\n *          0 otherwise\n * @example\n *    compareSDKVersions('1.2', '1.2.0') returns 0\n *    compareSDKVersions('1.2a', '1.2b') returns NaN\n *    compareSDKVersions('1.2', '1.3') returns -1\n *    compareSDKVersions('2.0', '1.3.2') returns 1\n *    compareSDKVersions('2.0', 2.0) returns NaN\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function compareSDKVersions(v1: string, v2: string): number {\n  if (typeof v1 !== 'string' || typeof v2 !== 'string') {\n    return NaN;\n  }\n\n  const v1parts = v1.split('.');\n  const v2parts = v2.split('.');\n\n  function isValidPart(x: string): boolean {\n    // input has to have one or more digits\n    // For ex - returns true for '11', false for '1a1', false for 'a', false for '2b'\n    return /^\\d+$/.test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  // Make length of both parts equal\n  while (v1parts.length < v2parts.length) {\n    v1parts.push('0');\n  }\n  while (v2parts.length < v1parts.length) {\n    v2parts.push('0');\n  }\n\n  for (let i = 0; i < v1parts.length; ++i) {\n    if (Number(v1parts[i]) == Number(v2parts[i])) {\n      continue;\n    } else if (Number(v1parts[i]) > Number(v2parts[i])) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @hidden\n * Generates a GUID\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function generateGUID(): string {\n  return generateUUID();\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function deepFreeze<T extends object>(obj: T): T {\n  Object.keys(obj).forEach((prop) => {\n    if (obj[prop] === null || obj[prop] === undefined) {\n      return;\n    }\n    if (typeof obj[prop] === 'object') {\n      deepFreeze(obj[prop]);\n    }\n  });\n  return Object.freeze(obj);\n}\n\n/**\n * @hidden\n * The following type definitions will be used in the\n * utility functions below, which help in transforming the\n * promises to support callbacks for backward compatibility\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport type ErrorResultCallback<T> = (err?: SdkError, result?: T) => void;\nexport type ErrorResultNullCallback<T> = (err: SdkError | null, result: T | null) => void;\nexport type ErrorBooleanResultCallback = (err?: SdkError, result?: boolean) => void;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InputFunction<T> = (...args: any[]) => Promise<T>;\nexport type ResultCallback<T> = (result?: T) => void;\nexport type SdkErrorCallback = ResultCallback<SdkError | null>;\n\n/**\n * This utility function is used when the result of the promise is same as the result in the callback.\n * @param funcHelper\n * @param callback\n * @param args\n * @returns\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function callCallbackWithErrorOrResultFromPromiseAndReturnPromise<T>(\n  funcHelper: InputFunction<T>,\n  callback?: ErrorResultCallback<T>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ...args: any[]\n): Promise<T> {\n  const p = funcHelper(...args);\n  p.then((result: T) => {\n    if (callback) {\n      callback(undefined, result);\n    }\n  }).catch((e: SdkError) => {\n    if (callback) {\n      callback(e);\n    }\n  });\n  return p;\n}\n\n/**\n * This utility function is used when the return type of the promise is usually void and\n * the result in the callback is a boolean type (true for success and false for error)\n * @param funcHelper\n * @param callback\n * @param args\n * @returns\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function callCallbackWithErrorOrBooleanFromPromiseAndReturnPromise<T>(\n  funcHelper: InputFunction<T>,\n  callback?: ErrorBooleanResultCallback,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ...args: any[]\n): Promise<T> {\n  const p = funcHelper(...args);\n  p.then(() => {\n    if (callback) {\n      callback(undefined, true);\n    }\n  }).catch((e: SdkError) => {\n    if (callback) {\n      callback(e, false);\n    }\n  });\n  return p;\n}\n\n/**\n * This utility function is called when the callback has only Error/SdkError as the primary argument.\n * @param funcHelper\n * @param callback\n * @param args\n * @returns\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function callCallbackWithSdkErrorFromPromiseAndReturnPromise<T>(\n  funcHelper: InputFunction<T>,\n  callback?: SdkErrorCallback,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ...args: any[]\n): Promise<T> {\n  const p = funcHelper(...args);\n  p.then(() => {\n    if (callback) {\n      callback(null);\n    }\n  }).catch((e: SdkError) => {\n    if (callback) {\n      callback(e);\n    }\n  });\n  return p;\n}\n\n/**\n * This utility function is used when the result of the promise is same as the result in the callback.\n * @param funcHelper\n * @param callback\n * @param args\n * @returns\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise<T>(\n  funcHelper: InputFunction<T>,\n  callback?: ErrorResultNullCallback<T>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ...args: any[]\n): Promise<T> {\n  const p = funcHelper(...args);\n  p.then((result: T) => {\n    if (callback) {\n      callback(null, result);\n    }\n  }).catch((e: SdkError) => {\n    if (callback) {\n      callback(e, null);\n    }\n  });\n  return p;\n}\n\n/**\n * A helper function to add a timeout to an asynchronous operation.\n *\n * @param action Action to wrap the timeout around\n * @param timeoutInMs Timeout period in milliseconds\n * @param timeoutError Error to reject the promise with if timeout elapses before the action completed\n * @returns A promise which resolves to the result of provided action or rejects with a provided timeout error\n * if the initial action didn't complete within provided timeout.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function runWithTimeout<TResult, TError>(\n  action: () => Promise<TResult>,\n  timeoutInMs: number,\n  timeoutError: TError,\n): Promise<TResult> {\n  return new Promise((resolve, reject) => {\n    const timeoutHandle = setTimeout(reject, timeoutInMs, timeoutError);\n    action()\n      .then((result) => {\n        clearTimeout(timeoutHandle);\n        resolve(result);\n      })\n      .catch((error) => {\n        clearTimeout(timeoutHandle);\n        reject(error);\n      });\n  });\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function createTeamsAppLink(params: pages.AppNavigationParameters): string {\n  const url = new URL(\n    'https://teams.microsoft.com/l/entity/' +\n      encodeURIComponent(params.appId.toString()) +\n      '/' +\n      encodeURIComponent(params.pageId),\n  );\n\n  if (params.webUrl) {\n    url.searchParams.append('webUrl', params.webUrl.toString());\n  }\n  if (params.chatId || params.channelId || params.subPageId) {\n    url.searchParams.append(\n      'context',\n      JSON.stringify({ chatId: params.chatId, channelId: params.channelId, subEntityId: params.subPageId }),\n    );\n  }\n  return url.toString();\n}\n\n/**\n * @hidden\n * Checks if the Adaptive Card schema version is supported by the host.\n * @param hostAdaptiveCardSchemaVersion Host's supported Adaptive Card version in the runtime.\n *\n * @returns true if the Adaptive Card Version is not supported and false if it is supported.\n */\nexport function isHostAdaptiveCardSchemaVersionUnsupported(\n  hostAdaptiveCardSchemaVersion: AdaptiveCardVersion,\n): boolean {\n  const versionCheck = compareSDKVersions(\n    `${hostAdaptiveCardSchemaVersion.majorVersion}.${hostAdaptiveCardSchemaVersion.minorVersion}`,\n    `${minAdaptiveCardVersion.majorVersion}.${minAdaptiveCardVersion.minorVersion}`,\n  );\n  if (versionCheck >= 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n/**\n * @hidden\n * Checks if a URL is a HTTPS protocol based URL.\n * @param url URL to be validated.\n *\n * @returns true if the URL is an https URL.\n */\nexport function isValidHttpsURL(url: URL): boolean {\n  return url.protocol === 'https:';\n}\n\n/**\n * Convert base64 string to blob\n * @param base64Data string respresenting the content\n * @param contentType Mimetype\n * @returns Promise\n */\nexport function base64ToBlob(mimeType: string, base64String: string): Promise<Blob> {\n  return new Promise<Blob>((resolve, reject) => {\n    if (!mimeType) {\n      reject('MimeType cannot be null or empty.');\n    }\n    if (!base64String) {\n      reject('Base64 string cannot be null or empty.');\n    }\n    /**\n     * For images we need to convert binary data to image to achieve that:\n     *   1. A new Uint8Array is created with a length equal to the length of byteCharacters.\n     *      The byteCharacters is a string representing the base64 data decoded using atob.\n     *   2. Then loop iterates over each character in the byteCharacters string and assigns the\n     *      corresponding character code to the corresponding index in the byteArray. The purpose\n     *      of this loop is to convert the base64 string to a binary representation, as the Blob\n     *      constructor expects binary data.\n     */\n    if (mimeType.startsWith('image/')) {\n      const byteCharacters = atob(base64String);\n      const byteArray = new Uint8Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteArray[i] = byteCharacters.charCodeAt(i);\n      }\n      resolve(new Blob([byteArray], { type: mimeType }));\n    }\n    const byteCharacters = Buffer.from(base64String, 'base64').toString();\n    resolve(new Blob([byteCharacters], { type: mimeType }));\n  });\n}\n\n/**\n * Converts blob to base64 string.\n * @param blob Blob to convert to base64 string.\n */\nexport function getBase64StringFromBlob(blob: Blob): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    if (blob.size === 0) {\n      reject(new Error('Blob cannot be empty.'));\n    }\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (reader.result) {\n        resolve(reader.result.toString().split(',')[1]);\n      } else {\n        reject(new Error('Failed to read the blob'));\n      }\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n/**\n *  Returns an SSR safe reference to the window object\n * @returns Window object reference\n */\n\nexport function ssrSafeWindow(): Window {\n  if (!inServerSideRenderingEnvironment()) {\n    return window;\n  } else {\n    // This should NEVER actually be written.\n    // If you EVER see this error in ANY log file, something has gone horribly wrong and a bug needs to be filed.\n    throw new Error('window object undefined at SSR check');\n  }\n}\n\n/**\n * Checks if running in a Server Side Environment\n * @returns True if running in a Server Side Environment\n */\nexport function inServerSideRenderingEnvironment(): boolean {\n  return typeof window === 'undefined';\n}\n\n/**\n * @param id The id to validate\n * @param errorToThrow Customized error to throw if the id is not valid\n *\n * @throws Error if id is not valid\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateId(id: string, errorToThrow?: Error): void {\n  if (hasScriptTags(id) || !isIdLengthValid(id) || !isOpaque(id)) {\n    throw errorToThrow || new Error('id is not valid.');\n  }\n}\n\nexport function validateUrl(url: URL, errorToThrow?: Error): void {\n  const urlString = url.toString().toLocaleLowerCase();\n  if (hasScriptTags(urlString)) {\n    throw errorToThrow || new Error('Invalid Url');\n  }\n  if (urlString.length > 2048) {\n    throw errorToThrow || new Error('Url exceeds the maximum size of 2048 characters');\n  }\n  if (!isValidHttpsURL(url)) {\n    throw errorToThrow || new Error('Url should be a valid https url');\n  }\n}\n\n/**\n * This function takes in a string that represents a full or relative path and returns a\n * fully qualified URL object.\n *\n * Currently this is accomplished by assigning the input string to an a tag and then retrieving\n * the a tag's href value. A side effect of doing this is that the string becomes a fully qualified\n * URL. This is probably not how I would choose to do this, but in order to not unintentionally\n * break something I've preseved the functionality here and just isolated the code to make it\n * easier to mock.\n *\n * @example\n *    `fullyQualifyUrlString('https://example.com')` returns `new URL('https://example.com')`\n *    `fullyQualifyUrlString('helloWorld')` returns `new URL('https://example.com/helloWorld')`\n *    `fullyQualifyUrlString('hello%20World')` returns `new URL('https://example.com/hello%20World')`\n *\n * @param fullOrRelativePath A string representing a full or relative URL.\n * @returns A fully qualified URL representing the input string.\n */\nexport function fullyQualifyUrlString(fullOrRelativePath: string): URL {\n  const link = document.createElement('a');\n  link.href = fullOrRelativePath;\n  return new URL(link.href);\n}\n\n/**\n * Detects if there are any script tags in a given string, even if they are Uri encoded or encoded as HTML entities.\n * @param input string to test for script tags\n * @returns true if the input string contains a script tag, false otherwise\n */\nexport function hasScriptTags(input: string): boolean {\n  const openingScriptTagRegex = /<script[^>]*>|&lt;script[^&]*&gt;|%3Cscript[^%]*%3E/gi;\n  const closingScriptTagRegex = /<\\/script[^>]*>|&lt;\\/script[^&]*&gt;|%3C\\/script[^%]*%3E/gi;\n\n  const openingOrClosingScriptTagRegex = new RegExp(\n    `${openingScriptTagRegex.source}|${closingScriptTagRegex.source}`,\n    'gi',\n  );\n  return openingOrClosingScriptTagRegex.test(input);\n}\n\nfunction isIdLengthValid(id: string): boolean {\n  return id.length < 256 && id.length > 4;\n}\n\nfunction isOpaque(id: string): boolean {\n  for (let i = 0; i < id.length; i++) {\n    const charCode = id.charCodeAt(i);\n    if (charCode < 32 || charCode > 126) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param id The ID to validate against the UUID format\n * @throws Error if ID is not a valid UUID\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateUuid(id: string | undefined | null): void {\n  if (!id) {\n    throw new Error('id must not be empty');\n  }\n  if (isValidUUID(id) === false) {\n    throw new Error('id must be a valid UUID');\n  }\n}\n","import { generateGUID, validateUuid } from './utils';\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * UUID object\n */\nexport class UUID {\n  public constructor(private readonly uuid: string = generateGUID()) {\n    validateUuid(uuid);\n  }\n\n  public toString(): string {\n    return this.uuid;\n  }\n}\n","import { debug as registerLogger, Debugger } from 'debug';\n\nimport { UUID } from './uuidObject';\n\n// Each teamsjs instance gets a unique identifier that will be prepended to every log statement\nexport const teamsJsInstanceIdentifier = new UUID();\n\n// Every log statement will get prepended with the teamsJsInstanceIdentifier and a timestamp\nconst originalFormatArgsFunction = registerLogger.formatArgs;\nregisterLogger.formatArgs = function (args) {\n  args[0] = `(${new Date().toISOString()}): ${args[0]} [${teamsJsInstanceIdentifier.toString()}]`;\n  originalFormatArgsFunction.call(this, args);\n};\n\nconst topLevelLogger = registerLogger('teamsJs');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * Returns a logger for a given namespace, within the pre-defined top-level teamsJs namespace\n */\nexport function getLogger(namespace: string): Debugger {\n  return topLevelLogger.extend(namespace);\n}\n\n/**\n * @hidden\n * Creates a string tag for labeling apiVersionTag, which is used for API function call to create message request\n * sent to host(s).\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function getApiVersionTag(apiVersionNumber: ApiVersionNumber, functionName: ApiName): string {\n  return `${apiVersionNumber}_${functionName}`;\n}\n\n/**\n * @hidden\n * Check if apiVersionTag developer sends follows the pattern starting with a lowercase 'v', then\n * followed by one or more digits, then concatenated with underscore and some characters to indicate api name.\n * For example, 'v2_app.getContext'. If yes, return true. Otherwise, return false.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isFollowingApiVersionTagFormat(apiVersionTag: string): boolean {\n  const pattern = /^v\\d+_[\\w.]+$/;\n  return pattern.test(apiVersionTag);\n}\n\n/**\n * Use enum to set or update API version number\n * v3 will be used for next beta version of APIs if they have used v2\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const enum ApiVersionNumber {\n  V_1 = 'v1',\n  V_2 = 'v2',\n  V_3 = 'v3',\n}\n\nexport const enum ApiName {\n  App_GetContext = 'app.getContext',\n  App_Initialize = 'app.initialize',\n  App_NotifyAppLoaded = 'app.notifyAppLoaded',\n  App_NotifyExpectedFailure = 'app.notifyExpectedFailure',\n  App_NotifyFailure = 'app.notifyFailure',\n  App_NotifySuccess = 'app.notifySuccess',\n  App_OpenLink = 'app.openLink',\n  App_RegisterOnThemeChangeHandler = 'app.registerOnThemeChangeHandler',\n  AppInitialization_NotifyAppLoaded = 'appInitialization.notifyAppLoaded',\n  AppInitialization_NotifyExpectedFailure = 'appInitialization.notifyExpectedFailure',\n  AppInitialization_NotifyFailure = 'appInitialization.notifyFailure',\n  AppInitialization_NotifySuccess = 'appInitialization.notifySuccess',\n  AppEntity_SelectAppEntity = 'appEntity.selectAppEntity',\n  AppInstallDialog_OpenAppInstallDialog = 'appInstallDialog.openAppInstallDialog',\n  AppWindow_ChildAppWindow_AddEventListener = 'appWindow.childAppWindow.addEventListener',\n  AppWindow_ChildAppWindow_PostMessage = 'appWindow.childAppWindow.postMessage',\n  AppWindow_ParentAppWindow_AddEventListener = 'appWindow.parentAppWindow.addEventListener',\n  AppWindow_ParentAppWindow_PostMessage = 'appWindow.parentAppWindow.postMessage',\n  Authentication_AuthenticationWindow_RegisterInitializeHandler = 'authentication.authenticationWindow.registerInitializeHandler',\n  Authentication_AuthenticationWindow_RegisterNavigateCrossDomainHandler = 'authentication.authenticationWindow.registerNavigateCrossDomainHandler',\n  Authentication_Authenticate = 'authentication.authenticate',\n  Authentication_GetAuthToken = 'authentication.getAuthToken',\n  Authentication_GetUser = 'authentication.getUser',\n  Authentication_NotifyFailure = 'authentication.notifyFailure',\n  Authentication_NotifySuccess = 'authentication.notifySuccess',\n  Authentication_RegisterAuthenticateFailureHandler = 'authentication.registerAuthenticateFailureHandler',\n  Authentication_RegisterAuthenticateSuccessHandler = 'authentication.registerAuthenticateSuccessHandler',\n  BarCode_HasPermission = 'barCode.hasPermission',\n  BarCode_RequestPermission = 'barCode.requestPermission',\n  BarCode_ScanBarCode = 'barCode.scanBarCode',\n  Calendar_ComposeMeeting = 'calendar.composeMeeting',\n  Calendar_OpenCalendarItem = 'calendar.openCalendarItem',\n  Meeting_JoinMeeting = 'meeting.joinMeeting',\n  Call_StartCall = 'call.startCall',\n  Chat_OpenChat = 'chat.openChat',\n  Chat_OpenGroupChat = 'chat.openGroupChat',\n  Clipboard_Read = 'clipboard.read',\n  Clipboard_Write = 'clipboard.write',\n  Conversations_CloseConversation = 'conversations.closeConversation',\n  Conversations_GetChatMember = 'conversations.getChatMember',\n  Conversations_OpenConversation = 'conversations.openConversation',\n  Conversations_RegisterCloseConversationHandler = 'conversations.registerCloseConversationHandler',\n  Conversations_RegisterStartConversationHandler = 'conversations.registerStartConversationHandler',\n  Dialog_AdaptiveCard_Bot_Open = 'dialog.adaptiveCard.bot.open',\n  Dialog_AdaptiveCard_Open = 'dialog.adaptiveCard.open',\n  Dialog_RegisterMessageForChildHandler = 'dialog.registerMessageForChildHandler',\n  Dialog_Update_Resize = 'dialog.update.resize',\n  Dialog_Url_Bot_Open = 'dialog.url.bot.open',\n  Dialog_Url_Bot_RegisterMessageForParentHandler = 'dialog.url.bot.registerMessageForParentHandler',\n  Dialog_Url_Open = 'dialog.url.open',\n  Dialog_Url_RegisterMessageForParentHandler = 'dialog.url.registerMessageForParentHandler',\n  Dialog_Url_Submit = 'dialog.url.submit',\n  Dialog_Url_ParentCommunication_RegisterMessageForChildHandler = 'dialog.url.parentCommunication.registerMessageForChildHandler',\n  Dialog_Url_ParentCommunication_SendMessageToParentFromDialog = 'dialog.url.parentCommunication.sendMessageToParentFromDialog',\n  Dialog_Url_ParentCommunication_SendMessageToDialog = 'dialog.url.parentCommunication.sendMessageToDialog',\n  ExternalAppAuthentication_AuthenticateAndResendRequest = 'externalAppAuthentication.authenticateAndResendRequest',\n  ExternalAppAuthentication_AuthenticateWithSSO = 'externalAppAuthentication.authenticateWithSSO',\n  ExternalAppAuthentication_AuthenticateWithSSOAndResendRequest = 'externalAppAuthentication.authenticateWithSSOAndResendRequest',\n  ExternalAppAuthentication_AuthenticateWithOauth2 = 'externalAppAuthentication.authenticateWithOauth2',\n  ExternalAppAuthentication_AuthenticateWithPowerPlatformConnectorPlugins = 'externalAppAuthentication.authenticateWithPowerPlatformConnectorPlugins',\n  ExternalAppAuthenticationForCEA_AuthenticateWithOauth = 'externalAppAuthenticationForCEA.authenticateWithOauth',\n  ExternalAppAuthenticationForCEA_AuthenticateWithSSO = 'externalAppAuthenticationForCEA.authenticateWithSSO',\n  ExternalAppAuthenticationForCEA_AuthenticateAndResendRequest = 'externalAppAuthenticationForCEA.authenticateAndResendRequest',\n  ExternalAppAuthenticationForCEA_AuthenticateWithSSOAndResendRequest = 'externalAppAuthenticationForCEA.authenticateWithSSOAndResendRequest',\n  ExternalAppCardActions_ProcessActionOpenUrl = 'externalAppCardActions.processActionOpenUrl',\n  ExternalAppCardActions_ProcessActionSubmit = 'externalAppCardActions.processActionSubmit',\n  ExternalAppCardActionsForCEA_ProcessActionOpenUrl = 'externalAppCardActionsForCEA.processActionOpenUrl',\n  ExternalAppCardActionsForCEA_ProcessActionSubmit = 'externalAppCardActionsForCEA.processActionSubmit',\n  ExternalAppCommands_ProcessActionCommands = 'externalAppCommands.processActionCommand',\n  Files_AddCloudStorageFolder = 'files.addCloudStorageFolder',\n  Files_AddCloudStorageProvider = 'files.addCloudStorageProvider',\n  Files_AddCloudStorageProviderFile = 'files.addCloudStorageProviderFile',\n  Files_CopyMoveFiles = 'files.copyMoveFiles',\n  Files_DeleteCloudStorageFolder = 'files.deleteCloudStorageFolder',\n  Files_DeleteCloudStorageProviderFile = 'files.deleteCloudStorageProviderFile',\n  Files_DownloadCloudStorageProviderFile = 'files.downloadCloudStorageProviderFile',\n  Files_GetCloudStorageFolderContents = 'files.getCloudStorageFolderContents',\n  Files_GetCloudStorageFolders = 'files.getCloudStorageFolders',\n  Files_GetExternalProviders = 'files.getExternalProviders',\n  Files_GetFileDownloads = 'files.getFileDownloads',\n  Files_OpenCloudStorageFile = 'files.openCloudStorageFile',\n  Files_OpenDownloadFolder = 'files.openDownloadFolder',\n  Files_RegisterCloudStorageProviderContentChangeHandler = 'files.registerCloudStorageProviderContentChangeHandler',\n  Files_RegisterCloudStorageProviderListChangeHandler = 'files.registerCloudStorageProviderListChangeHandler',\n  Files_RemoveCloudStorageProvider = 'files.removeCloudStorageProvider',\n  Files_RenameCloudStorageProviderFile = 'files.renameCloudStorageProviderFile',\n  Files_UploadCloudStorageProviderFile = 'files.uploadCloudStorageProviderFile',\n  GeoLocation_GetCurrentLocation = 'geoLocation.getCurrentLocation',\n  GeoLocation_HasPermission = 'geoLocation.hasPermission',\n  GeoLocation_Map_ChooseLocation = 'geoLocation.map.chooseLocation',\n  GeoLocation_RequestPermission = 'geoLocation.requestPermission',\n  GeoLocation_ShowLocation = 'geoLocation.showLocation',\n  HandleBeforeUnload = 'handleBeforeUnload',\n  HostEntity_Tab_addAndConfigureApp = 'hostEntity.tab.addAndConfigure',\n  HostEntity_Tab_reconfigure = 'hostEntity.tab.reconfigure',\n  HostEntity_Tab_rename = 'hostEntity.tab.rename',\n  HostEntity_Tab_remove = 'hostEntity.tab.remove',\n  HostEntity_Tab_getAll = 'hostEntity.tab.getAll',\n  Interactive_GetClientInfo = 'interactive.getClientInfo',\n  Interactive_GetClientRoles = 'interactive.getClientRoles',\n  Interactive_GetFluidContainerId = 'interactive.getFluidContainerId',\n  Interactive_GetFluidTenantInfo = 'interactive.getFluidTenantInfo',\n  Interactive_GetFluidToken = 'interactive.getFluidToken',\n  Interactive_GetNtpTime = 'interactive.getNtpTime',\n  Interactive_RegisterClientId = 'interactive.registerClientId',\n  Interactive_SetFluidContainerId = 'interactive.setFluidContainerId',\n  Location_GetLocation = 'location.getLocation',\n  Location_ShowLocation = 'location.showLocation',\n  Logs_Receive = 'log.receive',\n  Logs_RegisterLogRequestHandler = 'log.request',\n  Mail_ComposeMail = 'mail.composeMail',\n  Mail_OpenMailItem = 'mail.openMailItem',\n  Marketplace_AddOrUpdateCartItems = 'marketplace.addOrUpdateCartItems',\n  Marketplace_GetCart = 'marketplace.getCart',\n  Marketplace_RemoveCardItems = 'marketplace.removeCartItems',\n  Marketplace_UpdateCartStatus = 'marketplace.updateCartStatus',\n  Media_CaptureImage = 'media.captureImage',\n  Media_Controller = 'media.controller',\n  Media_GetMedia = 'media.getMedia',\n  Media_HasPermission = 'media.hasPermission',\n  Media_RegisterGetMediaRequestHandler = 'media.registerGetMediaRequestHandler',\n  Media_RequestPermission = 'media.requestPermission',\n  Media_ScanBarCode = 'media.scanBarCode',\n  Media_SelectMedia = 'media.selectMedia',\n  Media_ViewImages = 'media.viewImages',\n  Meeting_AppShareButton_SetOptions = 'meeting.appShareButton.setOptions',\n  Meeting_GetAppContentStageSharingCapabilities = 'meeting.getAppContentStageSharingCapabilities',\n  Meeting_GetAppContentStageSharingState = 'meeting.getAppContentStageSharingState',\n  Meeting_GetAuthenticationTokenForAnonymousUser = 'meeting.getAuthenticationTokenForAnonymousUser',\n  Meeting_GetIncomingClientAudioState = 'meeting.getIncomingClientAudioState',\n  Meeting_GetLiveStreamState = 'meeting.getLiveStreamState',\n  Meeting_GetMeetingDetails = 'meeting.getMeetingDetails',\n  Meeting_GetMeetingDetailsVerbose = 'meeting.getMeetingDetailsVerbose',\n  Meeting_RegisterAudioDeviceSelectionChangedHandler = 'meeting.registerAudioDeviceSelectionChangedHandler',\n  Meeting_RegisterLiveStreamChangedHandler = 'meeting.registerLiveStreamChangedHandler',\n  Meeting_RegisterMeetingReactionReceivedHandler = 'meeting.registerMeetingReactionReceivedHandler',\n  Meeting_RegisterMicStateChangeHandler = 'meeting.registerMicStateChangeHandler',\n  Meeting_RegisterRaiseHandStateChangedHandler = 'meeting.registerRaiseHandStateChangedHandler',\n  Meeting_RegisterSpeakingStateChangeHandler = 'meeting.registerSpeakingStateChangeHandler',\n  Meeting_RequestAppAudioHandling = 'meeting.requestAppAudioHandling',\n  Meeting_RequestStartLiveStreaming = 'meeting.requestStartLiveStreaming',\n  Meeting_RequestStopLiveStreaming = 'meeting.requestStopLiveStreaming',\n  Meeting_SetMicStateWithReason = 'meeting.setMicStateWithReason',\n  Meeting_ShareAppContentToStage = 'meeting.shareAppContentToStage',\n  Meeting_StopSharingAppContentToStage = 'meeting.stopSharingAppContentToStage',\n  Meeting_ToggleIncomingClientAudio = 'meeting.toggleIncomingClientAudio',\n  MeetingRoom_GetPairedMeetingRoomInfo = 'meetingRoom.getPairedMeetingRoomInfo',\n  MeetingRoom_RegisterMeetingRoomCapabilitiesUpdateHandler = 'meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler',\n  MeetingRoom_RegisterMeetingRoomStatesUpdateHandler = 'meetingRoom.registerMeetingRoomStatesUpdateHandler',\n  MeetingRoom_SendCommandToPairedMeetingRoom = 'meetingRoom.sendCommandToPairedMeetingRoom',\n  Menus_HandleActionMenuItemPress = 'menus.handleActionMenuItemPress',\n  Menus_HandleNavBarMenuItemPress = 'menus.handleNavBarMenuItemPress',\n  Menus_HandleViewConfigItemPress = 'menus.handleViewConfigItemPress',\n  Menus_RegisterActionMenuItemPressHandler = 'menus.registerActionMenuItemPressHandler',\n  Menus_RegisterNavBarMenuItemPressHandler = 'menus.registerNavBarMenuItemPressHandler',\n  Menus_RegisterSetModuleViewHandler = 'menus.registerSetModuleViewHandler',\n  Menus_SetNavBarMenu = 'menus.setNavBarMenu',\n  Menus_SetUpViews = 'menus.setUpViews',\n  Menus_ShowActionMenu = 'menus.showActionMenu',\n  MessageChannels_Telemetry_GetTelemetryPort = 'messageChannels.telemetry.getTelemetryPort',\n  MessageChannels_DataLayer_GetDataLayerPort = 'messageChannels.dataLayer.getDataLayerPort',\n  Monetization_OpenPurchaseExperience = 'monetization.openPurchaseExperience',\n  Navigation_NavigateBack = 'navigation.navigateBack',\n  Navigation_NavigateCrossDomain = 'navigation.navigateCrossDomain',\n  Navigation_NavigateToTab = 'navigation.navigateToTab',\n  Navigation_ReturnFocus = 'navigation.returnFocus',\n  Notifications_ShowNotification = 'notifications.showNotification',\n  OtherAppStateChange_Install = 'otherApp.install',\n  OtherAppStateChange_UnregisterInstall = 'otherApp.unregisterInstall',\n  Pages_AppButton_OnClick = 'pages.appButton.onClick',\n  Pages_AppButton_OnHoverEnter = 'pages.appButton.onHoverEnter',\n  Pages_AppButton_OnHoverLeave = 'pages.appButton.onHoverLeave',\n  Pages_BackStack_NavigateBack = 'pages.backStack.navigateBack',\n  Pages_BackStack_RegisterBackButtonHandler = 'pages.backStack.registerBackButtonHandler',\n  Pages_BackStack_RegisterBackButtonPressHandler = 'pages.backStack.registerBackButtonPressHandler',\n  Pages_Config_RegisterChangeConfigHandler = 'pages.config.registerChangeConfigHandler',\n  Pages_Config_RegisterOnRemoveHandler = 'pages.config.registerOnRemoveHandler',\n  Pages_Config_RegisterOnSaveHandler = 'pages.config.registerOnSaveHandler',\n  Pages_Config_RegisterSettingsRemoveHandler = 'pages.config.registerSettingsRemoveHandler',\n  Pages_Config_RegisterSettingsSaveHandler = 'pages.config.registerSettingsSaveHandler',\n  Pages_Config_SetConfig = 'pages.config.setConfig',\n  Pages_Config_SetValidityState = 'pages.config.setValidityState',\n  Pages_CurrentApp_NavigateTo = 'pages.currentApp.navigateTo',\n  Pages_CurrentApp_NavigateToDefaultPage = 'pages.currentApp.navigateToDefaultPage',\n  Pages_InitializeWithFrameContext = 'pages.initializeWithFrameContext',\n  Pages_FullTrust_EnterFullscreen = 'pages.fullTrust.enterFullscreen',\n  Pages_FullTrust_ExitFullscreen = 'pages.fullTrust.exitFullscreen',\n  Pages_GetConfig = 'pages.getConfig.',\n  Pages_NavigateCrossDomain = 'pages.navigateCrossDomain',\n  Pages_NavigateToApp = 'pages.navigateToApp',\n  Pages_RegisterFocusEnterHandler = 'pages.registerFocusEnterHandler',\n  Pages_RegisterFullScreenHandler = 'pages.registerFullScreenHandler',\n  Pages_RemoveEvent_NotifyFailure = 'pages.removeEvent.notifyFailure',\n  Pages_RemoveEvent_NotifySuccess = 'pages.removeEvent.notifySuccess',\n  Pages_ReturnFocus = 'pages.returnFocus',\n  Pages_SaveEvent_NotifyFailure = 'pages.saveEvent.notifyFailure',\n  Pages_SaveEvent_NotifySuccess = 'pages.saveEvent.notifySuccess',\n  Pages_SetCurrentFrame = 'pages.setCurrentFrame',\n  Pages_ShareDeepLink = 'pages.shareDeepLink',\n  Pages_Tabs_GetMruTabInstances = 'pages.tabs.getMruTabInstances',\n  Pages_Tabs_GetTabInstances = 'pages.tabs.getTabInstances',\n  Pages_Tabs_NavigateToTab = 'pages.tabs.navigateToTab',\n  People_SelectPeople = 'people.selectPeople',\n  PrivateAPIs_OpenFilePreview = 'openFilePreview',\n  PrivateAPIs_RegisterCustomHandler = 'registerCustomHandler',\n  PrivateAPIs_RegisterUserSettingsChangeHandler = 'registerUserSettingsChangeHandler',\n  PrivateAPIs_SendCustomMessage = 'sendCustomMessage',\n  PrivateAPIs_UploadCustomApp = 'uploadCustomApp',\n  Profile_ShowProfile = 'profile.showProfile',\n  PublicAPIs_ExecuteDeepLink = 'executeDeepLink',\n  PublicAPIs_GetContext = 'getContext',\n  PublicAPIs_GetMruTabInstances = 'getMruTabInstances',\n  PublicAPIs_GetTabInstances = 'getTabInstances',\n  PublicAPIs_Initialize = 'initialize',\n  PublicAPIs_InitializeWithFrameContext = 'initializeWithFrameContext',\n  PublicAPIs_RegisterAppButtonClickHandler = 'registerAppButtonClickHandler',\n  PublicAPIs_RegisterAppButtonHoverEnterHandler = 'registerAppButtonHoverEnterHandler',\n  PublicAPIs_RegisterAppButtonHoverLeaveHandler = 'registerAppButtonHoverLeaveHandler',\n  PublicAPIs_RegisterBackButtonHandler = 'registerBackButtonHandler',\n  PublicAPIs_RegisterBeforeUnloadHandler = 'registerBeforeUnloadHandler',\n  PublicAPIs_RegisterChangeSettingsHandler = 'registerChangeSettingsHandler',\n  PublicAPIs_RegisterFocusEnterHandler = 'registerFocusEnterHandler',\n  PublicAPIs_RegisterFullScreenHandler = 'registerFullScreenHandler',\n  PublicAPIs_RegisterOnLoadHandler = 'registerOnLoadHandler',\n  PublicAPIs_RegisterOnThemeChangeHandlerHelper = 'registerOnThemeChangeHandlerHelper',\n  PublicAPIs_SetFrameContext = 'setFrameContext',\n  PublicAPIs_ShareDeepLink = 'shareDeepLink',\n  RegisterBeforeSuspendOrTerminateHandler = 'registerBeforeSuspendOrTerminateHandler',\n  RegisterHandler = 'registerHandler',\n  RegisterOnResumeHandler = 'registerOnResumeHandler',\n  RegisterOnThemeChangeHandler = 'registerOnThemeChangeHandler',\n  RemoteCamera_GetCapableParticipants = 'remoteCamera.getCapableParticipants',\n  RemoteCamera_RegisterOnCapableParticipantsChangeHandler = 'remoteCamera.registerOnCapableParticipantsChangeHandler',\n  RemoteCamera_RegisterOnDeviceStateChangeHandler = 'remoteCamera.registerOnDeviceStateChangeHandler',\n  RemoteCamera_RegisterOnErrorHandler = 'remoteCamera.registerOnErrorHandler',\n  RemoteCamera_RegisterOnSessionStatusChangeHandler = 'remoteCamera.registerOnSessionStatusChangeHandler',\n  RemoteCamera_RequestControl = 'remoteCamera.requestControl',\n  RemoteCamera_SendControlCommand = 'remoteCamera.sendControlCommand',\n  RemoteCamera_TerminateSession = 'remoteCamera.terminateSession',\n  Search_CloseSearch = 'search.closeSearch',\n  Search_RegisterOnChangeHandler = 'search.registerOnChangeHandler',\n  Search_RegisterOnClosedHandler = 'search.registerOnClosedHandler',\n  Search_RegisterOnExecutedHandler = 'search.registerOnExecutedHandler',\n  Search_UnregisterHandlers = 'search.unregisterHandlers',\n  SecondaryBrowser_OpenUrl = 'secondaryBrowser.openUrl',\n  Settings_GetSettings = 'settings.getSettings',\n  Settings_RegisterOnRemoveHandler = 'settings.registerOnRemoveHandler',\n  Settings_RegisterOnSaveHandler = 'settings.registerOnSaveHandler',\n  Settings_Remove_Failure = 'settings.remove.failure',\n  Settings_Remove_Success = 'settings.remove.success',\n  Settings_Save_Failure = 'settings.save.failure',\n  Settings_Save_Success = 'settings.save.success',\n  Settings_SetSettings = 'settings.setSettings',\n  Settings_SetValidityState = 'settings.setValidityState',\n  Sharing_History_GetContent = 'sharing.history.getContent',\n  Sharing_ShareWebContent = 'sharing.shareWebContent',\n  StageView_Open = 'stageView.open',\n  StageView_Self_Close = 'stageView.self.close',\n  Tasks_StartTask = 'tasks.startTask',\n  Tasks_SubmitTask = 'tasks.submitTask',\n  Tasks_UpdateTask = 'tasks.updateTask',\n  Teams_FullTrust_GetConfigSetting = 'teams.fullTrust.getConfigSetting',\n  Teams_FullTrust_JoinedTeams_GetUserJoinedTeams = 'teams.fullTrust.joinedTeams.getUserJoinedTeams',\n  Teams_GetTeamChannels = 'teams.getTeamChannels',\n  Teams_RefreshSiteUrl = 'teams.refreshSiteUrl',\n  TeamsAPIs_RegisterBeforeUnloadHandler = 'teamsAPIs_registerBeforeUnloadHandler',\n  TeamsAPIs_RegisterOnLoadHandler = 'teamsAPIs_registerOnLoadHandler',\n  ThirdPartyCloudStorage_GetDragAndDropFiles = 'thirdPartyCloudStorage.getDragAndDropFiles',\n  VideoEffects_MediaStream_RegisterForVideoFrame = 'videoEffects.mediaStream.registerForVideoFrame',\n  VideoEffects_NotifySelectedVideoEffectChanged = 'videoEffects.notifySelectedVideoEffectChanged',\n  VideoEffects_NotifyError = 'videoEffects.notifyError',\n  VideoEffects_NotifyVideoFrameProcessed = 'videoEffects.notifyVideoFrameProcessed',\n  VideoEffects_RegisterEffectParameterChangeHandler = 'videoEffects.registerEffectParameterChangeHandler',\n  VideoEffects_RegisterForVideoEffect = 'videoEffects.registerForVideoEffect',\n  VideoEffects_RegisterForVideoFrame = 'videoEffects.registerForVideoFrame',\n  VideoEffects_RegisterSetFrameProcessTimeLimitHandler = 'videoEffects.setFrameProcessTimeLimitHandler',\n  VideoEffects_RegisterStartVideoExtensibilityVideoStreamHandler = 'videoEffects.startVideoExtensibilityVideoStreamHandler',\n  VideoEffects_RegisterForVideoBufferHandler = 'videoEffects.registerForVideoBufferHandler',\n  VideoEffectsEx_MediaStream_RegisterForVideoFrame = 'videoEffectsEX.mediaStream.registerForVideoFrame',\n  VideoEffectsEx_NotifyError = 'videoEffectsEx.notifyError',\n  VideoEffectsEx_NotifySelectedVideoEffectChanged = 'videoEffectsEx.notifySelectedVideoEffectChanged',\n  VideoEffectsEx_NotifyVideoFrameProcessed = 'videoEffectsEx.notifyVideoFrameProcessed',\n  VideoEffectsEx_RegisterEffectParameterChangeHandler = 'videoEffectsEx.registerEffectParamterChangeHandler',\n  VideoEffectsEx_RegisterForVideoEffect = 'videoEffectsEx.registerForVideoEffect',\n  VideoEffectsEx_RegisterForVideoFrame = 'videoEffectsEx.registerForVideoFrame',\n  VideoEffectsEx_RegisterNewVideoFrameHandler = 'videoEffectsEx.registerNewVideoFrameHandler',\n  VideoEffectsEx_RegisterSetFrameProcessTimeLimitHandler = 'videoEffectsEX.registerSetFrameProcessTimeLimitHandler',\n  VideoEffectsEx_RegisterStartVideoExtensibilityVideoStreamHandler = 'videoEffectsEX.registerStartVideoExtensibilityVideoStreamHandler',\n  VideoEffectsEx_UpdatePersonalizedEffects = 'videoEffectsEx.updatePersonalizedEffects',\n  VideoEffectsUtils_EffectFailure = 'videoEffectsUtils.effectFailure',\n  VideoEffectsUtils_ReportVideoEffectChanged = 'videoEffectsUtils.reportVideoEffectChanged',\n  VideoEffectsUtils_TransformerWithMetadata_Constructor = 'videoEffectsUtils.transformerWithMetadata.constructor',\n  VideoPerformanceMonitor_Constructor = 'videoPerformanceMonitor.performanceDataGenerated',\n  VideoPerformanceMonitor_ReportFrameProcessed = 'videoPerformanceMonitor.reportFrameProcessed',\n  VideoPerformanceMonitor_ReportTextureStreamAcquired = 'videoPerformanceMonitor.reportTextureStreamAcquired',\n  VideoPerformanceMonitor_StartMonitorSlowFrameProcessing = 'videoPerformanceMonitor.startMonitorSlowFrameProcessing',\n  VisualMedia_HasPermission = 'visualMedia.hasPermission',\n  VisualMedia_Image_CaptureImages = 'visualMedia.image.captureImages',\n  VisualMedia_Image_RetrieveImages = 'visualMedia.image.retrieveImages',\n  VisualMedia_RequestPermission = 'visualMedia.requestPermission',\n  WebStorage_IsWebStorageClearedOnUserLogOut = 'webStorage.isWebStorageClearedOnUserLogOut',\n}\n","import * as validOriginsJSON from '../artifactsForCDN/validDomains.json';\n\n/**\n * @hidden\n * The client version when all SDK APIs started to check platform compatibility for the APIs was 1.6.0.\n * Modified to 2.0.1 which is hightest till now so that if any client doesn't pass version in initialize function, it will be set to highest.\n * Mobile clients are passing versions, hence will be applicable to web and desktop clients only.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const defaultSDKVersionForCompatCheck = '2.0.1';\n\n/**\n * @hidden\n * This is the client version when selectMedia API - VideoAndImage is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const videoAndImageMediaAPISupportVersion = '2.0.2';\n\n/**\n * @hidden\n * This is the client version when selectMedia API - Video with non-full screen mode is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const nonFullScreenVideoModeAPISupportVersion = '2.0.3';\n\n/**\n * @hidden\n * This is the client version when selectMedia API - ImageOutputFormats is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const imageOutputFormatsAPISupportVersion = '2.0.4';\n\n/**\n * @hidden\n * Minimum required client supported version for {@link getUserJoinedTeams} to be supported on {@link HostClientType.android}\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const getUserJoinedTeamsSupportedAndroidClientVersion = '2.0.1';\n\n/**\n * @hidden\n * This is the client version when location APIs (getLocation and showLocation) are supported.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const locationAPIsRequiredVersion = '1.9.0';\n\n/**\n * @hidden\n * This is the client version when permisisons are supported\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const permissionsAPIsRequiredVersion = '2.0.1';\n\n/**\n * @hidden\n * This is the client version when people picker API is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const peoplePickerRequiredVersion = '2.0.0';\n\n/**\n * @hidden\n * This is the client version when captureImage API is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const captureImageMobileSupportVersion = '1.7.0';\n\n/**\n * @hidden\n * This is the client version when media APIs are supported on all three platforms ios, android and web.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const mediaAPISupportVersion = '1.8.0';\n\n/**\n * @hidden\n * This is the client version when getMedia API is supported via Callbacks on all three platforms ios, android and web.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const getMediaCallbackSupportVersion = '2.0.0';\n\n/**\n * @hidden\n * This is the client version when scanBarCode API is supported on mobile.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const scanBarCodeAPIMobileSupportVersion = '1.9.0';\n\n/**\n * @hidden\n * Fallback list of valid origins in JSON format\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nconst validOriginsLocal = validOriginsJSON;\n\n/**\n * @hidden\n * Fallback list of valid origins\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const validOriginsFallback = validOriginsLocal.validOrigins;\n\n/**\n * @hidden\n * CDN endpoint of the list of valid origins\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const validOriginsCdnEndpoint = new URL(\n  'https://res.cdn.office.net/teams-js/validDomains/json/validDomains.json',\n);\n\n/**\n * @hidden\n * USer specified message origins should satisfy this test\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const userOriginUrlValidationRegExp = /^https:\\/\\//;\n\n/**\n * @hidden\n * The protocol used for deep links into Teams\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const teamsDeepLinkProtocol = 'https';\n\n/**\n * @hidden\n * The host used for deep links into Teams\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const teamsDeepLinkHost = 'teams.microsoft.com';\n\n/** @hidden */\nexport const errorLibraryNotInitialized = 'The library has not yet been initialized';\n\n/** @hidden */\nexport const errorRuntimeNotInitialized = 'The runtime has not yet been initialized';\n\n/** @hidden */\nexport const errorRuntimeNotSupported = 'The runtime version is not supported';\n\n/** @hidden */\nexport const errorCallNotStarted = 'The call was not properly started';\n","import { FrameContexts } from '../public/constants';\nexport class GlobalVars {\n  public static initializeCalled = false;\n  public static initializeCompleted = false;\n  public static additionalValidOrigins: string[] = [];\n  public static initializePromise: Promise<void> | undefined = undefined;\n  public static isFramelessWindow = false;\n  public static frameContext: FrameContexts | undefined = undefined;\n  public static hostClientType: string | undefined = undefined;\n  public static clientSupportedSDKVersion: string;\n  public static printCapabilityEnabled = false;\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\nimport { errorRuntimeNotInitialized, errorRuntimeNotSupported } from '../internal/constants';\nimport { GlobalVars } from '../internal/globalVars';\nimport { getLogger } from '../internal/telemetry';\nimport { compareSDKVersions, deepFreeze } from '../internal/utils';\nimport { HostClientType, teamsMinAdaptiveCardVersion } from './constants';\nimport { HostVersionsInfo } from './interfaces';\n\nconst runtimeLogger = getLogger('runtime');\n\nexport interface IBaseRuntime {\n  readonly apiVersion: number;\n  readonly hostVersionsInfo?: HostVersionsInfo;\n  readonly isLegacyTeams?: boolean;\n  readonly supports?: {};\n}\n\n/**\n * Latest runtime interface version\n */\nexport type Runtime = IRuntimeV4;\n\nexport const latestRuntimeApiVersion = 4;\n\nfunction isLatestRuntimeVersion(runtime: IBaseRuntime): runtime is Runtime {\n  return runtime.apiVersion === latestRuntimeApiVersion;\n}\n\ninterface IRuntimeV1 extends IBaseRuntime {\n  readonly apiVersion: 1;\n  readonly isLegacyTeams?: boolean;\n  readonly supports: {\n    readonly appEntity?: {};\n    readonly appInstallDialog?: {};\n    readonly barCode?: {};\n    readonly calendar?: {};\n    readonly call?: {};\n    readonly chat?: {};\n    readonly conversations?: {};\n    readonly dialog?: {\n      readonly bot?: {};\n      readonly update?: {};\n    };\n    readonly geoLocation?: {\n      readonly map?: {};\n    };\n    readonly location?: {};\n    readonly logs?: {};\n    readonly mail?: {};\n    readonly meetingRoom?: {};\n    readonly menus?: {};\n    readonly monetization?: {};\n    readonly notifications?: {};\n    readonly pages?: {\n      readonly appButton?: {};\n      readonly backStack?: {};\n      readonly config?: {};\n      readonly currentApp?: {};\n      readonly fullTrust?: {};\n      readonly tabs?: {};\n    };\n    readonly people?: {};\n    readonly permissions?: {};\n    readonly profile?: {};\n    readonly remoteCamera?: {};\n    readonly search?: {};\n    readonly sharing?: {};\n    readonly stageView?: {};\n    readonly teams?: {\n      readonly fullTrust?: {\n        readonly joinedTeams?: {};\n      };\n    };\n    readonly teamsCore?: {};\n    readonly video?: {\n      readonly mediaStream?: {};\n      readonly sharedFrame?: {};\n    };\n    readonly webStorage?: {};\n  };\n}\n\ninterface IRuntimeV2 extends IBaseRuntime {\n  readonly apiVersion: 2;\n  readonly hostVersionsInfo?: HostVersionsInfo;\n  readonly isLegacyTeams?: boolean;\n  readonly supports: {\n    readonly appEntity?: {};\n    readonly appInstallDialog?: {};\n    readonly appNotification?: {};\n    readonly barCode?: {};\n    readonly calendar?: {};\n    readonly call?: {};\n    readonly chat?: {};\n    readonly conversations?: {};\n    readonly dialog?: {\n      readonly card?: {\n        readonly bot?: {};\n      };\n      readonly url?: {\n        readonly bot?: {};\n      };\n      readonly update?: {};\n    };\n    readonly geoLocation?: {\n      readonly map?: {};\n    };\n    readonly interactive?: {};\n    readonly secondaryBrowser?: {};\n    readonly location?: {};\n    readonly logs?: {};\n    readonly mail?: {};\n    readonly marketplace?: {};\n    readonly meetingRoom?: {};\n    readonly menus?: {};\n    readonly monetization?: {};\n    readonly notifications?: {};\n    readonly pages?: {\n      readonly appButton?: {};\n      readonly backStack?: {};\n      readonly config?: {};\n      readonly currentApp?: {};\n      readonly fullTrust?: {};\n      readonly tabs?: {};\n    };\n    readonly people?: {};\n    readonly permissions?: {};\n    readonly profile?: {};\n    readonly remoteCamera?: {};\n    readonly search?: {};\n    readonly sharing?: {};\n    readonly stageView?: {};\n    readonly teams?: {\n      readonly fullTrust?: {\n        readonly joinedTeams?: {};\n      };\n    };\n    readonly teamsCore?: {};\n    readonly video?: {\n      readonly mediaStream?: {};\n      readonly sharedFrame?: {};\n    };\n    readonly webStorage?: {};\n  };\n}\n\ninterface IRuntimeV3 extends IBaseRuntime {\n  readonly apiVersion: 3;\n  readonly hostVersionsInfo?: HostVersionsInfo;\n  readonly isNAAChannelRecommended?: boolean;\n  readonly isLegacyTeams?: boolean;\n  readonly supports: {\n    readonly appEntity?: {};\n    readonly appInstallDialog?: {};\n    readonly barCode?: {};\n    readonly calendar?: {};\n    readonly call?: {};\n    readonly chat?: {};\n    readonly clipboard?: {};\n    readonly conversations?: {};\n    readonly dialog?: {\n      readonly card?: {\n        readonly bot?: {};\n      };\n      readonly url?: {\n        readonly bot?: {};\n      };\n      readonly update?: {};\n    };\n    readonly externalAppAuthentication?: {};\n    readonly externalAppCardActions?: {};\n    readonly geoLocation?: {\n      readonly map?: {};\n    };\n    readonly interactive?: {};\n    readonly secondaryBrowser?: {};\n    readonly location?: {};\n    readonly logs?: {};\n    readonly mail?: {};\n    readonly marketplace?: {};\n    readonly meetingRoom?: {};\n    readonly menus?: {};\n    readonly monetization?: {};\n    readonly nestedAppAuth?: {};\n    readonly notifications?: {};\n    readonly pages?: {\n      readonly appButton?: {};\n      readonly backStack?: {};\n      readonly config?: {};\n      readonly currentApp?: {};\n      readonly fullTrust?: {};\n      readonly tabs?: {};\n    };\n    readonly people?: {};\n    readonly permissions?: {};\n    readonly profile?: {};\n    readonly remoteCamera?: {};\n    readonly search?: {};\n    readonly sharing?: {};\n    readonly stageView?: {};\n    readonly teams?: {\n      readonly fullTrust?: {\n        readonly joinedTeams?: {};\n      };\n    };\n    readonly thirdPartyCloudStorage?: {};\n    readonly teamsCore?: {};\n    readonly video?: {\n      readonly mediaStream?: {};\n      readonly sharedFrame?: {};\n    };\n    readonly visualMedia?: {\n      readonly image?: {};\n    };\n    readonly webStorage?: {};\n  };\n}\n\ninterface IRuntimeV4 extends IBaseRuntime {\n  readonly apiVersion: 4;\n  readonly hostVersionsInfo?: HostVersionsInfo;\n  readonly isNAAChannelRecommended?: boolean;\n  readonly isLegacyTeams?: boolean;\n  readonly supports: {\n    readonly appEntity?: {};\n    readonly appInstallDialog?: {};\n    readonly barCode?: {};\n    readonly calendar?: {};\n    readonly call?: {};\n    readonly chat?: {};\n    readonly clipboard?: {};\n    readonly conversations?: {};\n    readonly dialog?: {\n      readonly card?: {\n        readonly bot?: {};\n      };\n      readonly url?: {\n        readonly bot?: {};\n        readonly parentCommunication?: {};\n      };\n      readonly update?: {};\n    };\n    readonly externalAppAuthentication?: {};\n    readonly externalAppAuthenticationForCEA?: {};\n    readonly externalAppCardActions?: {};\n    readonly externalAppCardActionsForCEA?: {};\n    readonly externalAppCommands?: {};\n    readonly geoLocation?: {\n      readonly map?: {};\n    };\n    readonly hostEntity?: {\n      readonly tab?: {};\n    };\n    readonly interactive?: {};\n    readonly secondaryBrowser?: {};\n    readonly location?: {};\n    readonly logs?: {};\n    readonly mail?: {};\n    readonly marketplace?: {};\n    readonly meetingRoom?: {};\n    readonly menus?: {};\n    readonly messageChannels?: {\n      readonly telemetry?: {};\n      readonly dataLayer?: {};\n    };\n    readonly monetization?: {};\n    readonly nestedAppAuth?: {};\n    readonly notifications?: {};\n    readonly otherAppStateChange?: {};\n    readonly pages?: {\n      readonly appButton?: {};\n      readonly backStack?: {};\n      readonly config?: {};\n      readonly currentApp?: {};\n      readonly fullTrust?: {};\n      readonly tabs?: {};\n    };\n    readonly people?: {};\n    readonly permissions?: {};\n    readonly profile?: {};\n    readonly remoteCamera?: {};\n    readonly search?: {};\n    readonly sharing?: {\n      readonly history?: {};\n    };\n    readonly stageView?: {\n      readonly self?: {};\n    };\n    readonly teams?: {\n      readonly fullTrust?: {\n        readonly joinedTeams?: {};\n      };\n    };\n    readonly thirdPartyCloudStorage?: {};\n    readonly teamsCore?: {};\n    readonly video?: {\n      readonly mediaStream?: {};\n      readonly sharedFrame?: {};\n    };\n    readonly visualMedia?: {\n      readonly image?: {};\n    };\n    readonly webStorage?: {};\n  };\n}\n// Constant used to set the runtime configuration\nconst _uninitializedRuntime: UninitializedRuntime = {\n  apiVersion: -1,\n  supports: {},\n};\n\ninterface UninitializedRuntime extends IBaseRuntime {\n  readonly apiVersion: -1;\n  readonly supports: {};\n}\n\n/**\n * @hidden\n * Ensures that the runtime has been initialized\n\n * @returns True if the runtime has been initialized\n * @throws Error if the runtime has not been initialized\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isRuntimeInitialized(runtime: IBaseRuntime): runtime is Runtime {\n  if (isLatestRuntimeVersion(runtime)) {\n    return true;\n  } else if (runtime.apiVersion === -1) {\n    throw new Error(errorRuntimeNotInitialized);\n  } else {\n    throw new Error(errorRuntimeNotSupported);\n  }\n}\n\nexport let runtime: Runtime | UninitializedRuntime = _uninitializedRuntime;\n\n/**\n * This object is used as the default runtime for versions of Teams which don't pass a runtime object during\n * initialization. If the host DOES pass a runtime object during init, then this object is not used.\n *\n * In practice, this is used in Teams V1 and ALL versions of Teams mobile since they are the only hosts\n * that don't pass a runtime object during initialization (since they don't use the host SDK).\n *\n * If there are certain versions of Teams V1 or Teams mobile which support a capability but not ALL\n * versions, then you should modify the mapTeamsVersionToSupportedCapabilities structure for that purpose. That\n * structure allows you to specify particular versions on particular platforms that support certain capabilities.\n * This structure is version agnostic.\n *\n * In practice, if you are adding a new capability, you are likely only to need to update mapTeamsVersionToSupportedCapabilities\n * and NOT this structure, as this structure is effectively only used for capabilities that have existed \"forever.\"\n *\n * Remember that everything here all still ONLY applies to versions of Teams that don't pass a runtime object during\n * initialization -- if they do, then neither this object nor the mapTeamsVersionToSupportedCapabilities structure is\n * used -- all runtime capabilities are dynamically discovered at runtime in the case where the runtime object is passed\n * during initialization.\n */\nexport const versionAndPlatformAgnosticTeamsRuntimeConfig: Runtime = {\n  apiVersion: 4,\n  isNAAChannelRecommended: false,\n  hostVersionsInfo: teamsMinAdaptiveCardVersion,\n  isLegacyTeams: true,\n  supports: {\n    appInstallDialog: {},\n    appEntity: {},\n    call: {},\n    chat: {},\n    conversations: {},\n    dialog: {\n      card: {\n        bot: {},\n      },\n      url: {\n        bot: {},\n        parentCommunication: {},\n      },\n      update: {},\n    },\n    interactive: {},\n    logs: {},\n    meetingRoom: {},\n    menus: {},\n    monetization: {},\n    notifications: {},\n    pages: {\n      config: {},\n      backStack: {},\n      fullTrust: {},\n    },\n    remoteCamera: {},\n    teams: {\n      fullTrust: {},\n    },\n    teamsCore: {},\n    video: {\n      sharedFrame: {},\n    },\n  },\n};\n\nexport interface ICapabilityReqs {\n  readonly capability: object;\n  readonly hostClientTypes: Array<string>;\n}\n\nconst v1NonMobileHostClientTypes = [\n  HostClientType.desktop,\n  HostClientType.web,\n  HostClientType.rigel,\n  HostClientType.surfaceHub,\n  HostClientType.teamsRoomsWindows,\n  HostClientType.teamsRoomsAndroid,\n  HostClientType.teamsPhones,\n  HostClientType.teamsDisplays,\n];\n\nexport const v1MobileHostClientTypes = [HostClientType.android, HostClientType.ios, HostClientType.ipados];\n\nexport const v1HostClientTypes = [...v1NonMobileHostClientTypes, ...v1MobileHostClientTypes];\n\n/**\n * @hidden\n * `upgradeToNextVersion` transforms runtime of version `versionToUpgradeFrom` to the next higher version\n *\n * @internal\n * Limited to Microsoft-internal use\n */\ninterface IRuntimeUpgrade {\n  versionToUpgradeFrom: number;\n  upgradeToNextVersion: (previousVersionRuntime: IBaseRuntime) => IBaseRuntime;\n}\n\n/**\n * @hidden\n * Uses upgradeChain to transform an outdated runtime object to the latest format.\n * @param outdatedRuntime - The runtime object to be upgraded\n * @returns The upgraded runtime object\n * @throws Error if the runtime object could not be upgraded to the latest version\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function fastForwardRuntime(outdatedRuntime: IBaseRuntime): Runtime {\n  let runtime = outdatedRuntime;\n  if (runtime.apiVersion < latestRuntimeApiVersion) {\n    upgradeChain.forEach((upgrade) => {\n      if (runtime.apiVersion === upgrade.versionToUpgradeFrom) {\n        runtime = upgrade.upgradeToNextVersion(runtime);\n      }\n    });\n  }\n  if (isLatestRuntimeVersion(runtime)) {\n    return runtime;\n  } else {\n    throw new Error('Received a runtime that could not be upgraded to the latest version');\n  }\n}\n\n/**\n * @hidden\n * List of transformations required to upgrade a runtime object from a previous version to the next higher version.\n * This list must be ordered from lowest version to highest version\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const upgradeChain: IRuntimeUpgrade[] = [\n  {\n    versionToUpgradeFrom: 1,\n    upgradeToNextVersion: (previousVersionRuntime: IRuntimeV1): IRuntimeV2 => {\n      return {\n        apiVersion: 2,\n        hostVersionsInfo: undefined,\n        isLegacyTeams: previousVersionRuntime.isLegacyTeams,\n        supports: {\n          ...previousVersionRuntime.supports,\n          dialog: previousVersionRuntime.supports.dialog\n            ? {\n                card: undefined,\n                url: previousVersionRuntime.supports.dialog,\n                update: previousVersionRuntime.supports.dialog?.update,\n              }\n            : undefined,\n        },\n      };\n    },\n  },\n  {\n    versionToUpgradeFrom: 2,\n    upgradeToNextVersion: (previousVersionRuntime: IRuntimeV2): IRuntimeV3 => {\n      /* eslint-disable-next-line @typescript-eslint/no-unused-vars */ /* Intentionally assigned to unused variable to delete propery when destructuring */\n      const { appNotification: _, ...newSupports } = previousVersionRuntime.supports;\n      return {\n        ...previousVersionRuntime,\n        apiVersion: 3,\n        supports: newSupports,\n      };\n    },\n  },\n  {\n    versionToUpgradeFrom: 3,\n    upgradeToNextVersion: (previousVersionRuntime: IRuntimeV3): IRuntimeV4 => {\n      return {\n        apiVersion: 4,\n        hostVersionsInfo: previousVersionRuntime.hostVersionsInfo,\n        isNAAChannelRecommended: previousVersionRuntime.isNAAChannelRecommended,\n        isLegacyTeams: previousVersionRuntime.isLegacyTeams,\n        supports: {\n          ...previousVersionRuntime.supports,\n          dialog: previousVersionRuntime.supports.dialog\n            ? {\n                card: previousVersionRuntime.supports.dialog?.card,\n                url: {\n                  bot: previousVersionRuntime.supports.dialog?.url?.bot,\n                  parentCommunication: previousVersionRuntime.supports.dialog?.url ? {} : undefined,\n                },\n                update: previousVersionRuntime.supports.dialog?.update,\n              }\n            : undefined,\n        },\n      };\n    },\n  },\n];\n\n/**\n * This structure is used for versions of Teams that don't pass a runtime object during initialization.\n * Please see the extensive comments in versionAndPlatformAgnosticTeamsRuntimeConfig for more information\n * on when and how to use this structure.\n */\nexport const mapTeamsVersionToSupportedCapabilities: Record<string, Array<ICapabilityReqs>> = {\n  // 1.0.0 just signifies \"these capabilities have practically always been supported.\" For some of these\n  // we don't know what the real first version that supported them was -- but it was long enough ago that\n  // we can just effectively consider them always supported (on the specified platforms)\n  '1.0.0': [\n    {\n      capability: { pages: { appButton: {}, tabs: {} }, stageView: {} },\n      hostClientTypes: v1NonMobileHostClientTypes,\n    },\n  ],\n  '1.9.0': [\n    {\n      capability: { location: {} },\n      hostClientTypes: v1HostClientTypes,\n    },\n  ],\n  '2.0.0': [\n    {\n      capability: { people: {} },\n      hostClientTypes: v1HostClientTypes,\n    },\n    {\n      capability: { sharing: {} },\n      hostClientTypes: [HostClientType.desktop, HostClientType.web],\n    },\n  ],\n  '2.0.1': [\n    {\n      capability: { teams: { fullTrust: { joinedTeams: {} } } },\n      hostClientTypes: [\n        HostClientType.android,\n        HostClientType.desktop,\n        HostClientType.ios,\n        HostClientType.teamsRoomsAndroid,\n        HostClientType.teamsPhones,\n        HostClientType.teamsDisplays,\n        HostClientType.web,\n      ],\n    },\n    {\n      capability: { webStorage: {} },\n      hostClientTypes: [HostClientType.desktop],\n    },\n  ],\n  '2.0.5': [\n    {\n      capability: { webStorage: {} },\n      hostClientTypes: [HostClientType.android, HostClientType.ios],\n    },\n  ],\n  '2.0.8': [\n    {\n      capability: { sharing: {} },\n      hostClientTypes: [HostClientType.android, HostClientType.ios],\n    },\n  ],\n};\n\nconst generateBackCompatRuntimeConfigLogger = runtimeLogger.extend('generateBackCompatRuntimeConfig');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * Merges the capabilities of two runtime objects. Fully supports arbitrarily nested capabilities/subcapabilities.\n *\n * Note that this function isn't actually doing anything specific to capabilities/runtime. It's just doing a\n * generic merge of two objects.\n *\n * This function is NOT intended to handle objects that are NOT \"shaped\" like runtime objects. Specifically\n * this means that it doesn't know how to merge values that aren't themselves objects. For example, it cannot\n * properly handle situations where both objects contain a string or number with the same property name since the proper way to\n * merge such values would be domain-dependent. For now it just happens to keep the value in the baseline and ignore the other.\n * Since the runtime is only supposed to have objects, this limitation is fine.\n *\n * @param baselineRuntime the baseline runtime object\n * @param runtimeToMergeIntoBaseline the runtime object to merge into the baseline\n * @returns the merged runtime object which is the union of baselineRuntime and runtimeToMergeIntoBaseline\n */\nfunction mergeRuntimeCapabilities(baselineRuntime: object, runtimeToMergeIntoBaseline: object): object {\n  const merged: object = { ...baselineRuntime };\n\n  for (const key in runtimeToMergeIntoBaseline) {\n    if (Object.prototype.hasOwnProperty.call(runtimeToMergeIntoBaseline, key)) {\n      if (typeof runtimeToMergeIntoBaseline[key] === 'object' && !Array.isArray(runtimeToMergeIntoBaseline[key])) {\n        merged[key] = mergeRuntimeCapabilities(baselineRuntime[key] || {}, runtimeToMergeIntoBaseline[key]);\n      } else {\n        if (!(key in baselineRuntime)) {\n          merged[key] = runtimeToMergeIntoBaseline[key];\n        }\n      }\n    }\n  }\n\n  return merged;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * Generates and returns a runtime configuration for host clients which are not on the latest host SDK version\n * and do not provide their own runtime config (this is just older versions of Teams on some platforms).\n * Their supported capabilities are based on the highest client SDK version that they can support.\n *\n * @param highestSupportedVersion - The highest client SDK version that the host client can support.\n * @returns runtime which describes the APIs supported by the legacy host client.\n */\nexport function generateVersionBasedTeamsRuntimeConfig(\n  highestSupportedVersion: string,\n  versionAgnosticRuntimeConfig: Runtime,\n  mapVersionToSupportedCapabilities: Record<string, Array<ICapabilityReqs>>,\n): Runtime {\n  generateBackCompatRuntimeConfigLogger('generating back compat runtime config for %s', highestSupportedVersion);\n\n  let newSupports = { ...versionAgnosticRuntimeConfig.supports };\n\n  generateBackCompatRuntimeConfigLogger(\n    'Supported capabilities in config before updating based on highestSupportedVersion: %o',\n    newSupports,\n  );\n\n  Object.keys(mapVersionToSupportedCapabilities).forEach((versionNumber) => {\n    if (compareSDKVersions(highestSupportedVersion, versionNumber) >= 0) {\n      mapVersionToSupportedCapabilities[versionNumber].forEach((capabilityReqs) => {\n        if (\n          GlobalVars.hostClientType !== undefined &&\n          capabilityReqs.hostClientTypes.includes(GlobalVars.hostClientType)\n        ) {\n          newSupports = mergeRuntimeCapabilities(newSupports, capabilityReqs.capability);\n        }\n      });\n    }\n  });\n\n  const teamsBackCompatRuntimeConfig: Runtime = {\n    apiVersion: latestRuntimeApiVersion,\n    hostVersionsInfo: teamsMinAdaptiveCardVersion,\n    isLegacyTeams: true,\n    supports: newSupports,\n  };\n\n  generateBackCompatRuntimeConfigLogger(\n    'Runtime config after updating based on highestSupportedVersion: %o',\n    teamsBackCompatRuntimeConfig,\n  );\n\n  return teamsBackCompatRuntimeConfig;\n}\n\nconst applyRuntimeConfigLogger = runtimeLogger.extend('applyRuntimeConfig');\nexport function applyRuntimeConfig(runtimeConfig: IBaseRuntime): void {\n  // Some hosts that have not adopted runtime versioning send a string for apiVersion, so we should handle those as v1 inputs\n  if (typeof runtimeConfig.apiVersion === 'string') {\n    applyRuntimeConfigLogger('Trying to apply runtime with string apiVersion, processing as v1: %o', runtimeConfig);\n    runtimeConfig = {\n      ...runtimeConfig,\n      apiVersion: 1,\n    };\n  }\n  applyRuntimeConfigLogger('Fast-forwarding runtime %o', runtimeConfig);\n  const ffRuntimeConfig = fastForwardRuntime(runtimeConfig);\n  applyRuntimeConfigLogger('Applying runtime %o', ffRuntimeConfig);\n  runtime = deepFreeze(ffRuntimeConfig);\n}\n\nexport function setUnitializedRuntime(): void {\n  runtime = deepFreeze(_uninitializedRuntime);\n}\n\n/**\n * @hidden\n * Constant used to set minimum runtime configuration\n * while un-initializing an app in unit test case.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const _minRuntimeConfigToUninitialize: Runtime = {\n  apiVersion: latestRuntimeApiVersion,\n  supports: {\n    pages: {\n      appButton: {},\n      tabs: {},\n      config: {},\n      backStack: {},\n      fullTrust: {},\n    },\n    teamsCore: {},\n    logs: {},\n  },\n};\n","// This assignment is replaced at build time by a webpack plugin (or Jest during unit tests) which ensures the value matches the version set in the package version\ndeclare const PACKAGE_VERSION = 'ERROR: This value should be replaced by webpack!';\n/**\n * @hidden\n *  Package version.\n */\nexport const version = PACKAGE_VERSION;\n","import { HostClientType } from '../public/constants';\nimport { ErrorCode, SdkError } from '../public/interfaces';\nimport { IBaseRuntime, isRuntimeInitialized, Runtime } from '../public/runtime';\nimport {\n  defaultSDKVersionForCompatCheck,\n  errorLibraryNotInitialized,\n  userOriginUrlValidationRegExp,\n} from './constants';\nimport { GlobalVars } from './globalVars';\nimport { getLogger } from './telemetry';\nimport { compareSDKVersions } from './utils';\n\nconst internalLogger = getLogger('internal');\nconst ensureInitializeCalledLogger = internalLogger.extend('ensureInitializeCalled');\nconst ensureInitializedLogger = internalLogger.extend('ensureInitialized');\n\n/**\n * Ensures `initialize` was called. This function does NOT verify that a response from Host was received and initialization completed.\n *\n * `ensureInitializeCalled` should only be used for APIs which:\n * - work in all FrameContexts\n * - are part of a required Capability\n * - are suspected to be used directly after calling `initialize`, potentially without awaiting the `initialize` call itself\n *\n * For most APIs {@link ensureInitialized} is the right validation function to use instead.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function ensureInitializeCalled(): void {\n  if (!GlobalVars.initializeCalled) {\n    ensureInitializeCalledLogger(errorLibraryNotInitialized);\n    throw new Error(errorLibraryNotInitialized);\n  }\n}\n\n/**\n * Ensures `initialize` was called and response from Host was received and processed and that `runtime` is initialized.\n * If expected FrameContexts are provided, it also validates that the current FrameContext matches one of the expected ones.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function ensureInitialized(runtime: IBaseRuntime, ...expectedFrameContexts: string[]): runtime is Runtime {\n  // This global var can potentially be removed in the future if we use the initialization status of the runtime object as our source of truth\n  if (!GlobalVars.initializeCompleted) {\n    ensureInitializedLogger(\n      '%s. initializeCalled: %s',\n      errorLibraryNotInitialized,\n      GlobalVars.initializeCalled.toString(),\n    );\n    throw new Error(errorLibraryNotInitialized);\n  }\n\n  if (expectedFrameContexts && expectedFrameContexts.length > 0) {\n    let found = false;\n    for (let i = 0; i < expectedFrameContexts.length; i++) {\n      if (expectedFrameContexts[i] === GlobalVars.frameContext) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      throw new Error(\n        `This call is only allowed in following contexts: ${JSON.stringify(expectedFrameContexts)}. ` +\n          `Current context: \"${GlobalVars.frameContext}\".`,\n      );\n    }\n  }\n  return isRuntimeInitialized(runtime);\n}\n\n/**\n * @hidden\n * Checks whether the platform has knowledge of this API by doing a comparison\n * on API required version and platform supported version of the SDK\n *\n * @param requiredVersion - SDK version required by the API\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isCurrentSDKVersionAtLeast(requiredVersion: string = defaultSDKVersionForCompatCheck): boolean {\n  const value = compareSDKVersions(GlobalVars.clientSupportedSDKVersion, requiredVersion);\n  if (isNaN(value)) {\n    return false;\n  }\n  return value >= 0;\n}\n\n/**\n * @hidden\n * Helper function to identify if host client is either android, ios, or ipados\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isHostClientMobile(): boolean {\n  return (\n    GlobalVars.hostClientType == HostClientType.android ||\n    GlobalVars.hostClientType == HostClientType.ios ||\n    GlobalVars.hostClientType == HostClientType.ipados\n  );\n}\n\n/**\n * @hidden\n * Helper function which indicates if current API is supported on mobile or not.\n * @throws SdkError if host client is not android/ios or if the requiredVersion is not\n *          supported by platform or not. Null is returned in case of success.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function throwExceptionIfMobileApiIsNotSupported(\n  requiredVersion: string = defaultSDKVersionForCompatCheck,\n): void {\n  if (!isHostClientMobile()) {\n    const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n    throw notSupportedError;\n  } else if (!isCurrentSDKVersionAtLeast(requiredVersion)) {\n    const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n    throw oldPlatformError;\n  }\n}\n\n/**\n * @hidden\n * Processes the valid origins specifuied by the user, de-duplicates and converts them into a regexp\n * which is used later for message source/origin validation\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function processAdditionalValidOrigins(validMessageOrigins: string[]): void {\n  let combinedOriginUrls = GlobalVars.additionalValidOrigins.concat(\n    validMessageOrigins.filter((_origin: string) => {\n      return typeof _origin === 'string' && userOriginUrlValidationRegExp.test(_origin);\n    }),\n  );\n  const dedupUrls: { [url: string]: boolean } = {};\n  combinedOriginUrls = combinedOriginUrls.filter((_originUrl) => {\n    if (dedupUrls[_originUrl]) {\n      return false;\n    }\n    dedupUrls[_originUrl] = true;\n    return true;\n  });\n  GlobalVars.additionalValidOrigins = combinedOriginUrls;\n}\n","export function isNullOrUndefined(value?: unknown): boolean {\n  return value === null || value === undefined;\n}\n","import { validOriginsCdnEndpoint, validOriginsFallback } from './constants';\nimport { GlobalVars } from './globalVars';\nimport { getLogger } from './telemetry';\nimport { inServerSideRenderingEnvironment, isValidHttpsURL } from './utils';\n\nlet validOriginsCache: string[] = [];\nconst validateOriginLogger = getLogger('validateOrigin');\n\nexport async function prefetchOriginsFromCDN(): Promise<void> {\n  await getValidOriginsListFromCDN();\n}\n\nfunction isValidOriginsCacheEmpty(): boolean {\n  return validOriginsCache.length === 0;\n}\n\nasync function getValidOriginsListFromCDN(): Promise<string[]> {\n  if (!isValidOriginsCacheEmpty()) {\n    return validOriginsCache;\n  }\n  if (!inServerSideRenderingEnvironment()) {\n    return fetch(validOriginsCdnEndpoint)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Invalid Response from Fetch Call');\n        }\n        return response.json().then((validOriginsCDN) => {\n          if (isValidOriginsJSONValid(JSON.stringify(validOriginsCDN))) {\n            validOriginsCache = validOriginsCDN.validOrigins;\n            return validOriginsCache;\n          } else {\n            throw new Error('Valid Origins List Is Invalid');\n          }\n        });\n      })\n      .catch((e) => {\n        validateOriginLogger('validOrigins fetch call to CDN failed with error: %s. Defaulting to fallback list', e);\n        validOriginsCache = validOriginsFallback;\n        return validOriginsCache;\n      });\n  } else {\n    validOriginsCache = validOriginsFallback;\n    return validOriginsFallback;\n  }\n}\n\nfunction isValidOriginsJSONValid(validOriginsJSON: string): boolean {\n  let validOriginsCDN = JSON.parse(validOriginsJSON);\n  try {\n    validOriginsCDN = JSON.parse(validOriginsJSON);\n  } catch (_) {\n    return false;\n  }\n  if (!validOriginsCDN.validOrigins) {\n    return false;\n  }\n  for (const validOrigin of validOriginsCDN.validOrigins) {\n    try {\n      new URL('https://' + validOrigin);\n    } catch (_) {\n      validateOriginLogger('isValidOriginsFromCDN call failed to validate origin: %s', validOrigin);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param pattern - reference pattern\n * @param host - candidate string\n * @returns returns true if host matches pre-know valid pattern\n *\n * @example\n *    validateHostAgainstPattern('*.teams.microsoft.com', 'subdomain.teams.microsoft.com') returns true\n *    validateHostAgainstPattern('teams.microsoft.com', 'team.microsoft.com') returns false\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction validateHostAgainstPattern(pattern: string, host: string): boolean {\n  if (pattern.substring(0, 2) === '*.') {\n    const suffix = pattern.substring(1);\n    if (\n      host.length > suffix.length &&\n      host.split('.').length === suffix.split('.').length &&\n      host.substring(host.length - suffix.length) === suffix\n    ) {\n      return true;\n    }\n  } else if (pattern === host) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateOrigin(messageOrigin: URL): Promise<boolean> {\n  return getValidOriginsListFromCDN().then((validOriginsList) => {\n    // Check whether the url is in the pre-known allowlist or supplied by user\n    if (!isValidHttpsURL(messageOrigin)) {\n      validateOriginLogger(\n        'Origin %s is invalid because it is not using https protocol. Protocol being used: %s',\n        messageOrigin,\n        messageOrigin.protocol,\n      );\n      return false;\n    }\n    const messageOriginHost = messageOrigin.host;\n    if (validOriginsList.some((pattern) => validateHostAgainstPattern(pattern, messageOriginHost))) {\n      return true;\n    }\n\n    for (const domainOrPattern of GlobalVars.additionalValidOrigins) {\n      const pattern = domainOrPattern.substring(0, 8) === 'https://' ? domainOrPattern.substring(8) : domainOrPattern;\n      if (validateHostAgainstPattern(pattern, messageOriginHost)) {\n        return true;\n      }\n    }\n\n    validateOriginLogger(\n      'Origin %s is invalid because it is not an origin approved by this library or included in the call to app.initialize.\\nOrigins approved by this library: %o\\nOrigins included in app.initialize: %o',\n      messageOrigin,\n      validOriginsList,\n      GlobalVars.additionalValidOrigins,\n    );\n    return false;\n  });\n}\n","import { hasScriptTags } from './utils';\n\n/**\n * This function can be used to validate if a string is a \"valid\" app id.\n * Valid is a relative term, in this case. Truly valid app ids are UUIDs as documented in the schema:\n * https://learn.microsoft.com/en-us/microsoftteams/platform/resources/schema/manifest-schema#id\n * However, there are some older internal/hard-coded apps which violate this schema and use names like com.microsoft.teamspace.tab.youtube.\n * For compatibility with these legacy apps, we unfortunately cannot securely and completely validate app ids as UUIDs. Based\n * on this, the validation is limited to checking for script tags, length, and non-printable characters.\n *\n * @param potentialAppId A string to check if it's a \"valid\" app id\n * @throws Error with a message describing the exact validation violation\n */\nexport function validateStringAsAppId(potentialAppId: string): void {\n  if (hasScriptTags(potentialAppId)) {\n    throw new Error(`Potential app id (${potentialAppId}) is invalid; it contains script tags.`);\n  }\n\n  if (!isStringWithinAppIdLengthLimits(potentialAppId)) {\n    throw new Error(\n      `Potential app id (${potentialAppId}) is invalid; its length ${potentialAppId.length} is not within the length limits (${minimumValidAppIdLength}-${maximumValidAppIdLength}).`,\n    );\n  }\n\n  if (doesStringContainNonPrintableCharacters(potentialAppId)) {\n    throw new Error(`Potential app id (${potentialAppId}) is invalid; it contains non-printable characters.`);\n  }\n}\n\nexport const minimumValidAppIdLength = 4;\nexport const maximumValidAppIdLength = 256;\n\nexport function isStringWithinAppIdLengthLimits(potentialAppId: string): boolean {\n  return potentialAppId.length < maximumValidAppIdLength && potentialAppId.length > minimumValidAppIdLength;\n}\n\nexport function doesStringContainNonPrintableCharacters(str: string): boolean {\n  return [...str].some((char) => {\n    const charCode = char.charCodeAt(0);\n    return charCode < 32 || charCode > 126;\n  });\n}\n","import { validateStringAsAppId } from '../internal/appIdValidation';\n\n/**\n * A strongly-typed class used to represent a \"valid\" app id.\n *\n * Valid is a relative term, in this case. Truly valid app ids are UUIDs as documented in the schema:\n * https://learn.microsoft.com/en-us/microsoftteams/platform/resources/schema/manifest-schema#id\n * However, there are some older internal/hard-coded apps which violate this schema and use names like\n * com.microsoft.teamspace.tab.youtube. For compatibility with these legacy apps, we unfortunately cannot\n * securely and completely validate app ids as UUIDs. Based on this, the validation is limited to checking\n * for script tags, length, and non-printable characters. Validation will be updated in the future to ensure\n * the app id is a valid UUID as legacy apps update.\n */\nexport class AppId {\n  /**\n   * Creates a strongly-typed AppId from a string\n   *\n   * @param appIdAsString An app id represented as a string\n   * @throws Error with a message describing the exact validation violation\n   */\n  public constructor(private readonly appIdAsString: string) {\n    validateStringAsAppId(appIdAsString);\n  }\n\n  /**\n   * Returns the app id as a string\n   */\n  public toString(): string {\n    return this.appIdAsString;\n  }\n}\n","import { requestPortFromParentWithVersion } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag, getLogger } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform } from '../public/constants';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n * Namespace to request message ports from the host application.\n *\n * @beta\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace messageChannels {\n  export namespace telemetry {\n    let telemetryPort: MessagePort | undefined;\n\n    const messageChannelsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n    const logger = getLogger('messageChannels.telemetry');\n    /**\n     * @hidden\n     * @beta\n     *\n     * Fetches a MessagePort to batch telemetry through the host's telemetry worker.\n     * The port is cached once received, so subsequent calls return the same port.\n     * @returns MessagePort.\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed,\n     * if the host does not support the feature, or if the port request is rejected.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export async function getTelemetryPort(): Promise<MessagePort> {\n      // If the port has already been initialized, return it.\n      if (telemetryPort) {\n        logger('Returning telemetry port from cache');\n        return telemetryPort;\n      }\n\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n\n      // Send request for telemetry port, will throw if the request is rejected\n      telemetryPort = await requestPortFromParentWithVersion(\n        getApiVersionTag(messageChannelsTelemetryVersionNumber, ApiName.MessageChannels_Telemetry_GetTelemetryPort),\n        ApiName.MessageChannels_Telemetry_GetTelemetryPort,\n      );\n      return telemetryPort;\n    }\n\n    /**\n     * @hidden\n     *\n     * @beta\n     *\n     * Checks if the messageChannels.telemetry capability is supported by the host\n     * @returns boolean to represent whether the messageChannels.telemetry capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.messageChannels?.telemetry ? true : false;\n    }\n\n    /**\n     * @hidden\n     * Undocumented function used to clear state between unit tests\n     *\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function _clearTelemetryPort(): void {\n      telemetryPort = undefined;\n    }\n  }\n\n  export namespace dataLayer {\n    let dataLayerPort: MessagePort | undefined;\n\n    const messageChannelsDataLayerVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n    const logger = getLogger('messageChannels.dataLayer');\n    /**\n     * @hidden\n     * @beta\n     *\n     * Fetches a MessagePort to allow access to the host's data layer worker.\n     * The port is cached once received, so subsequent calls return the same port.\n     * @returns MessagePort.\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed,\n     * if the host does not support the feature, or if the port request is rejected.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export async function getDataLayerPort(): Promise<MessagePort> {\n      // If the port has already been initialized, return it.\n      if (dataLayerPort) {\n        logger('Returning dataLayer port from cache');\n        return dataLayerPort;\n      }\n\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n\n      // Send request for telemetry port, will throw if the request is rejected\n      dataLayerPort = await requestPortFromParentWithVersion(\n        getApiVersionTag(messageChannelsDataLayerVersionNumber, ApiName.MessageChannels_DataLayer_GetDataLayerPort),\n        ApiName.MessageChannels_DataLayer_GetDataLayerPort,\n      );\n      return dataLayerPort;\n    }\n\n    /**\n     * @hidden\n     *\n     * @beta\n     *\n     * Checks if the messageChannels.dataLayer capability is supported by the host\n     * @returns boolean to represent whether the messageChannels.dataLayer capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.messageChannels?.dataLayer ? true : false;\n    }\n\n    /**\n     * @hidden\n     * Undocumented function used to clear state between unit tests\n     *\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function _clearDataLayerPort(): void {\n      dataLayerPort = undefined;\n    }\n  }\n\n  /**\n   * @hidden\n   *\n   * @beta\n   *\n   * Checks if the messageChannels capability is supported by the host\n   * @returns boolean to represent whether the messageChannels capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.messageChannels ? true : false;\n  }\n}\n","import {\n  Communication,\n  sendMessageEventToChild,\n  sendMessageToParent,\n  sendMessageToParentAsync,\n  waitForMessageQueue,\n} from '../internal/communication';\nimport { GlobalVars } from '../internal/globalVars';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitializeCalled, ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { fullyQualifyUrlString, validateUrl } from '../internal/utils';\nimport { FrameContexts, HostClientType } from './constants';\nimport { SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * Namespace to interact with the authentication-specific part of the SDK.\n *\n * This object is used for starting or completing authentication flows.\n */\n\n/**\n * Exceptional APIs telemetry versioning file: v1 and v2 APIs are mixed together in this file\n */\nconst authenticationTelemetryVersionNumber_v1: ApiVersionNumber = ApiVersionNumber.V_1;\nconst authenticationTelemetryVersionNumber_v2: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport namespace authentication {\n  let authHandlers: { success: (string) => void; fail: (string) => void } | undefined;\n  let authWindowMonitor: number | undefined;\n\n  /**\n   * @hidden\n   * @internal\n   * Limited to Microsoft-internal use; automatically called when library is initialized\n   */\n  export function initialize(): void {\n    registerHandler(\n      getApiVersionTag(\n        authenticationTelemetryVersionNumber_v1,\n        ApiName.Authentication_RegisterAuthenticateSuccessHandler,\n      ),\n      'authentication.authenticate.success',\n      handleSuccess,\n      false,\n    );\n    registerHandler(\n      getApiVersionTag(\n        authenticationTelemetryVersionNumber_v1,\n        ApiName.Authentication_RegisterAuthenticateFailureHandler,\n      ),\n      'authentication.authenticate.failure',\n      handleFailure,\n      false,\n    );\n  }\n\n  let authParams: AuthenticateParameters | undefined;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, this function has been deprecated in favor of a Promise-based pattern using {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>}\n   *\n   * Registers handlers to be called with the result of an authentication flow triggered using {@link authentication.authenticate authentication.authenticate(authenticateParameters?: AuthenticateParameters): void}\n   *\n   * @param authenticateParameters - Configuration for authentication flow pop-up result communication\n   */\n  export function registerAuthenticationHandlers(authenticateParameters: AuthenticateParameters): void {\n    authParams = authenticateParameters;\n  }\n\n  /**\n   * Initiates an authentication flow which requires a new window.\n   * There are two primary uses for this function:\n   * 1. When your app needs to authenticate using a 3rd-party identity provider (not Microsoft Entra ID)\n   * 2. When your app needs to show authentication UI that is blocked from being shown in an iframe (e.g., Microsoft Entra consent prompts)\n   *\n   * For more details, see [Enable authentication using third-party OAuth provider](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/authentication/auth-flow-tab)\n   *\n   * This function is *not* needed for \"standard\" Microsoft Entra SSO usage. Using {@link getAuthToken} is usually sufficient in that case. For more, see\n   * [Enable SSO for tab apps](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/authentication/tab-sso-overview))\n   *\n   * @remarks\n   * The authentication flow must start and end from the same domain, otherwise success and failure messages won't be returned to the window that initiated the call.\n   * The [Teams authentication flow](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/authentication/auth-flow-tab) starts and ends at an endpoint on\n   * your own service (with a redirect round-trip to the 3rd party identity provider in the middle).\n   *\n   * @param authenticateParameters - Parameters describing the authentication window used for executing the authentication flow\n   *\n   * @returns `Promise` that will be fulfilled with the result from the authentication pop-up, if successful. The string in this result is provided in the parameter\n   * passed by your app when it calls {@link authentication.notifySuccess authentication.notifySuccess(result?: string): void} in the pop-up window after returning from the identity provider redirect.\n   *\n   * @throws `Error` if the authentication request fails or is canceled by the user. This error is provided in the parameter passed by your app when it calls\n   * {@link authentication.notifyFailure authentication.notifyFailure(result?: string): void} in the pop-up window after returning from the identity provider redirect. However, in some cases it can also be provided by\n   * the infrastructure depending on the failure (e.g., a user cancelation)\n   *\n   */\n  export function authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise<string>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>} instead.\n   *\n   * The documentation for {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>} applies\n   * to this function.\n   * The one difference is that instead of the result being returned via the `Promise`, the result is returned to the callback functions provided in the\n   * `authenticateParameters` parameter.\n   *\n   * @param authenticateParameters - Parameters describing the authentication window used for executing the authentication flow and callbacks used for indicating the result\n   *\n   */\n  export function authenticate(authenticateParameters?: AuthenticateParameters): void;\n  export function authenticate(authenticateParameters?: AuthenticateParameters): Promise<string> {\n    const isDifferentParamsInCall: boolean = authenticateParameters !== undefined;\n    const authenticateParams: AuthenticateParameters | undefined = isDifferentParamsInCall\n      ? authenticateParameters\n      : authParams;\n    if (!authenticateParams) {\n      throw new Error('No parameters are provided for authentication');\n    }\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.settings,\n      FrameContexts.remove,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n    const apiVersionTag =\n      authenticateParams.successCallback || authenticateParams.failureCallback\n        ? getApiVersionTag(authenticationTelemetryVersionNumber_v1, ApiName.Authentication_Authenticate)\n        : getApiVersionTag(authenticationTelemetryVersionNumber_v2, ApiName.Authentication_Authenticate);\n    return authenticateHelper(apiVersionTag, authenticateParams)\n      .then((value: string) => {\n        try {\n          if (authenticateParams && authenticateParams.successCallback) {\n            authenticateParams.successCallback(value);\n            return '';\n          }\n          return value;\n        } finally {\n          if (!isDifferentParamsInCall) {\n            authParams = undefined;\n          }\n        }\n      })\n      .catch((err: Error) => {\n        try {\n          if (authenticateParams && authenticateParams.failureCallback) {\n            authenticateParams.failureCallback(err.message);\n            return '';\n          }\n          throw err;\n        } finally {\n          if (!isDifferentParamsInCall) {\n            authParams = undefined;\n          }\n        }\n      });\n  }\n\n  function authenticateHelper(apiVersionTag: string, authenticateParameters: AuthenticateParameters): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (GlobalVars.hostClientType !== HostClientType.web) {\n        // Convert any relative URLs into absolute URLs before sending them over to the parent window.\n        const fullyQualifiedURL: URL = fullyQualifyUrlString(authenticateParameters.url);\n        validateUrl(fullyQualifiedURL);\n\n        // Ask the parent window to open an authentication window with the parameters provided by the caller.\n        resolve(\n          sendMessageToParentAsync<[boolean, string]>(apiVersionTag, 'authentication.authenticate', [\n            fullyQualifiedURL.href,\n            authenticateParameters.width,\n            authenticateParameters.height,\n            authenticateParameters.isExternal,\n          ]).then(([success, response]: [boolean, string]) => {\n            if (success) {\n              return response;\n            } else {\n              throw new Error(response);\n            }\n          }),\n        );\n      } else {\n        // Open an authentication window with the parameters provided by the caller.\n        authHandlers = {\n          success: resolve,\n          fail: reject,\n        };\n        openAuthenticationWindow(authenticateParameters);\n      }\n    });\n  }\n\n  /**\n   * Requests an Microsoft Entra token to be issued on behalf of your app in an SSO flow.\n   * The token is acquired from the cache if it is not expired. Otherwise a request is sent to Microsoft Entra to\n   * obtain a new token.\n   * This function is used to enable SSO scenarios. See [Enable SSO for tab apps](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/authentication/tab-sso-overview)\n   * for more details.\n   *\n   * @param authTokenRequest - An optional set of values that configure the token request.\n   *\n   * @returns `Promise` that will be resolved with the token, if successful.\n   *\n   * @throws `Error` if the request fails in some way\n   */\n  export function getAuthToken(authTokenRequest?: AuthTokenRequestParameters): Promise<string>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link authentication.getAuthToken authentication.getAuthToken(authTokenRequest: AuthTokenRequestParameters): Promise\\<string\\>} instead.\n   *\n   * The documentation {@link authentication.getAuthToken authentication.getAuthToken(authTokenRequest: AuthTokenRequestParameters): Promise\\<string\\>} applies to this\n   * function as well. The one difference when using this function is that the result is provided in the callbacks in the `authTokenRequest` parameter\n   * instead of as a `Promise`.\n   *\n   * @param authTokenRequest - An optional set of values that configure the token request.\n   * It contains callbacks to call in case of success/failure\n   */\n  export function getAuthToken(authTokenRequest?: AuthTokenRequest): void;\n  export function getAuthToken(authTokenRequest?: AuthTokenRequest): Promise<string> {\n    ensureInitializeCalled();\n    const apiVersionTag =\n      authTokenRequest && (authTokenRequest.successCallback || authTokenRequest.failureCallback)\n        ? getApiVersionTag(authenticationTelemetryVersionNumber_v1, ApiName.Authentication_GetAuthToken)\n        : getApiVersionTag(authenticationTelemetryVersionNumber_v2, ApiName.Authentication_GetAuthToken);\n    return getAuthTokenHelper(apiVersionTag, authTokenRequest)\n      .then((value: string) => {\n        if (authTokenRequest && authTokenRequest.successCallback) {\n          authTokenRequest.successCallback(value);\n          return '';\n        }\n        return value;\n      })\n      .catch((err: Error) => {\n        if (authTokenRequest && authTokenRequest.failureCallback) {\n          authTokenRequest.failureCallback(err.message);\n          return '';\n        }\n        throw err;\n      });\n  }\n\n  function getAuthTokenHelper(apiVersionTag: string, authTokenRequest?: AuthTokenRequest): Promise<string> {\n    return new Promise<[boolean, string]>((resolve) => {\n      resolve(\n        sendMessageToParentAsync(apiVersionTag, 'authentication.getAuthToken', [\n          authTokenRequest?.resources,\n          authTokenRequest?.claims,\n          authTokenRequest?.silent,\n          authTokenRequest?.tenantId,\n        ]),\n      );\n    }).then(([success, result]: [boolean, string]) => {\n      if (success) {\n        return result;\n      } else {\n        throw new Error(result);\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   * Requests the decoded Microsoft Entra user identity on behalf of the app.\n   *\n   * @returns Promise that resolves with the {@link UserProfile}.\n   *\n   * @throws `Error` object in case of any problems, the most likely of which is that the calling app does not have appropriate permissions\n   * to call this method.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getUser(): Promise<UserProfile>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link authentication.getUser authentication.getUser(): Promise\\<UserProfile\\>} instead.\n   *\n   * @hidden\n   * Requests the decoded Microsoft Entra user identity on behalf of the app.\n   *\n   * @param userRequest - It passes success/failure callbacks in the userRequest object(deprecated)\n   *\n   * @throws `Error` object in case of any problems, the most likely of which is that the calling app does not have appropriate permissions\n   * to call this method.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getUser(userRequest: UserRequest): void;\n  export function getUser(userRequest?: UserRequest): Promise<UserProfile | null> {\n    ensureInitializeCalled();\n    const apiVersionTag =\n      userRequest && (userRequest.successCallback || userRequest.failureCallback)\n        ? getApiVersionTag(authenticationTelemetryVersionNumber_v1, ApiName.Authentication_GetUser)\n        : getApiVersionTag(authenticationTelemetryVersionNumber_v2, ApiName.Authentication_GetUser);\n    return getUserHelper(apiVersionTag)\n      .then((value: UserProfile) => {\n        if (userRequest && userRequest.successCallback) {\n          userRequest.successCallback(value);\n          return null;\n        }\n        return value;\n      })\n      .catch((err: SdkError) => {\n        const errorMessage = `Error returned, code = ${err.errorCode}, message = ${err.message}`;\n        if (userRequest && userRequest.failureCallback) {\n          userRequest.failureCallback(errorMessage);\n          return null;\n        }\n        throw new Error(errorMessage);\n      });\n  }\n\n  function getUserHelper(apiVersionTag: string): Promise<UserProfile> {\n    return new Promise<[boolean, UserProfile | SdkError]>((resolve) => {\n      resolve(sendMessageToParentAsync(apiVersionTag, 'authentication.getUser'));\n    }).then(([success, result]: [boolean, UserProfile | SdkError]) => {\n      if (success) {\n        return result as UserProfile;\n      } else {\n        throw result;\n      }\n    });\n  }\n\n  function closeAuthenticationWindow(): void {\n    // Stop monitoring the authentication window\n    stopAuthenticationWindowMonitor();\n    // Try to close the authentication window and clear all properties associated with it\n    try {\n      if (Communication.childWindow) {\n        Communication.childWindow.close();\n      }\n    } finally {\n      Communication.childWindow = null;\n      Communication.childOrigin = null;\n    }\n  }\n\n  /**\n   * Different browsers handle authentication flows in pop-up windows differently.\n   * Firefox and Safari, which use Quantum and WebKit browser engines respectively, block the use of 'window.open' for pop-up windows.\n   * Any chrome-based browser (Chrome, Edge, Brave, etc.) opens a new browser window without any user-prompts.\n   * To ensure consistent behavior across all browsers, consider using the following function to create a new authentication window.\n   *\n   * @param authenticateParameters - Parameters describing the authentication window used for executing the authentication flow.\n   */\n  function openAuthenticationWindow(authenticateParameters: AuthenticateParameters): void {\n    // Close the previously opened window if we have one\n    closeAuthenticationWindow();\n    // Start with a sensible default size\n    let width = authenticateParameters.width || 600;\n    let height = authenticateParameters.height || 400;\n    // Ensure that the new window is always smaller than our app's window so that it never fully covers up our app\n    width = Math.min(width, Communication.currentWindow.outerWidth - 400);\n    height = Math.min(height, Communication.currentWindow.outerHeight - 200);\n\n    // Convert any relative URLs into absolute URLs before sending them over to the parent window\n    const fullyQualifiedURL = fullyQualifyUrlString(authenticateParameters.url.replace('{oauthRedirectMethod}', 'web'));\n    validateUrl(fullyQualifiedURL);\n\n    // We are running in the browser, so we need to center the new window ourselves\n    let left: number =\n      typeof Communication.currentWindow.screenLeft !== 'undefined'\n        ? Communication.currentWindow.screenLeft\n        : Communication.currentWindow.screenX;\n    let top: number =\n      typeof Communication.currentWindow.screenTop !== 'undefined'\n        ? Communication.currentWindow.screenTop\n        : Communication.currentWindow.screenY;\n    left += Communication.currentWindow.outerWidth / 2 - width / 2;\n    top += Communication.currentWindow.outerHeight / 2 - height / 2;\n    // Open a child window with a desired set of standard browser features\n    Communication.childWindow = Communication.currentWindow.open(\n      fullyQualifiedURL.href,\n      '_blank',\n      'toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=' +\n        top +\n        ', left=' +\n        left +\n        ', width=' +\n        width +\n        ', height=' +\n        height,\n    );\n    if (Communication.childWindow) {\n      // Start monitoring the authentication window so that we can detect if it gets closed before the flow completes\n      startAuthenticationWindowMonitor();\n    } else {\n      // If we failed to open the window, fail the authentication flow\n      handleFailure('FailedToOpenWindow');\n    }\n  }\n\n  function stopAuthenticationWindowMonitor(): void {\n    if (authWindowMonitor) {\n      clearInterval(authWindowMonitor);\n      authWindowMonitor = 0;\n    }\n    removeHandler('initialize');\n    removeHandler('navigateCrossDomain');\n  }\n\n  function startAuthenticationWindowMonitor(): void {\n    // Stop the previous window monitor if one is running\n    stopAuthenticationWindowMonitor();\n    // Create an interval loop that\n    // - Notifies the caller of failure if it detects that the authentication window is closed\n    // - Keeps pinging the authentication window while it is open to re-establish\n    //   contact with any pages along the authentication flow that need to communicate\n    //   with us\n    authWindowMonitor = Communication.currentWindow.setInterval(() => {\n      if (!Communication.childWindow || Communication.childWindow.closed) {\n        handleFailure('CancelledByUser');\n      } else {\n        const savedChildOrigin = Communication.childOrigin;\n        try {\n          Communication.childOrigin = '*';\n          sendMessageEventToChild('ping');\n        } finally {\n          Communication.childOrigin = savedChildOrigin;\n        }\n      }\n    }, 100);\n    // Set up an initialize-message handler that gives the authentication window its frame context\n    registerHandler(\n      getApiVersionTag(\n        authenticationTelemetryVersionNumber_v1,\n        ApiName.Authentication_AuthenticationWindow_RegisterInitializeHandler,\n      ),\n      'initialize',\n      () => {\n        return [FrameContexts.authentication, GlobalVars.hostClientType];\n      },\n    );\n    // Set up a navigateCrossDomain message handler that blocks cross-domain re-navigation attempts\n    // in the authentication window. We could at some point choose to implement this method via a call to\n    // authenticationWindow.location.href = url; however, we would first need to figure out how to\n    // validate the URL against the tab's list of valid domains.\n    registerHandler(\n      getApiVersionTag(\n        authenticationTelemetryVersionNumber_v1,\n        ApiName.Authentication_AuthenticationWindow_RegisterNavigateCrossDomainHandler,\n      ),\n      'navigateCrossDomain',\n      () => {\n        return false;\n      },\n    );\n  }\n\n  /**\n   * When using {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>}, the\n   * window that was opened to execute the authentication flow should call this method after authentiction to notify the caller of\n   * {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>} that the\n   * authentication request was successful.\n   *\n   * @remarks\n   * This function is usable only from the authentication window.\n   * This call causes the authentication window to be closed.\n   *\n   * @param result - Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives\n   * this value in its callback or via the `Promise` return value\n   */\n  export function notifySuccess(result?: string): void;\n  /**\n   * @deprecated\n   * This function used to have an unused optional second parameter called callbackUrl. Because it was not used, it has been removed.\n   * Please use the {@link authentication.notifySuccess authentication.notifySuccess(result?: string): void} instead.\n   */\n  export function notifySuccess(result?: string, _callbackUrl?: string): void {\n    ensureInitialized(runtime, FrameContexts.authentication);\n    const apiVersionTag = _callbackUrl\n      ? getApiVersionTag(authenticationTelemetryVersionNumber_v1, ApiName.Authentication_NotifySuccess)\n      : getApiVersionTag(authenticationTelemetryVersionNumber_v2, ApiName.Authentication_NotifySuccess);\n    sendMessageToParent(apiVersionTag, 'authentication.authenticate.success', [result]);\n    // Wait for the message to be sent before closing the window\n    waitForMessageQueue(Communication.parentWindow, () => setTimeout(() => Communication.currentWindow.close(), 200));\n  }\n\n  /**\n   * When using {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>}, the\n   * window that was opened to execute the authentication flow should call this method after authentiction to notify the caller of\n   * {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>} that the\n   * authentication request failed.\n\n   *\n   * @remarks\n   * This function is usable only on the authentication window.\n   * This call causes the authentication window to be closed.\n   *\n   * @param result - Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives\n   * this value in its callback or via the `Promise` return value\n   * @param _callbackUrl - This parameter is deprecated and unused\n   */\n  export function notifyFailure(result?: string): void;\n  /**\n   * @deprecated\n   * This function used to have an unused optional second parameter called callbackUrl. Because it was not used, it has been removed.\n   * Please use the {@link authentication.notifyFailure authentication.notifyFailure(result?: string): void} instead.\n   */\n  export function notifyFailure(reason?: string, _callbackUrl?: string): void {\n    ensureInitialized(runtime, FrameContexts.authentication);\n    const apiVersionTag = _callbackUrl\n      ? getApiVersionTag(authenticationTelemetryVersionNumber_v1, ApiName.Authentication_NotifyFailure)\n      : getApiVersionTag(authenticationTelemetryVersionNumber_v2, ApiName.Authentication_NotifyFailure);\n    sendMessageToParent(apiVersionTag, 'authentication.authenticate.failure', [reason]);\n    // Wait for the message to be sent before closing the window\n    waitForMessageQueue(Communication.parentWindow, () => setTimeout(() => Communication.currentWindow.close(), 200));\n  }\n\n  function handleSuccess(result?: string): void {\n    try {\n      if (authHandlers) {\n        authHandlers.success(result);\n      }\n    } finally {\n      authHandlers = undefined;\n      closeAuthenticationWindow();\n    }\n  }\n\n  function handleFailure(reason?: string): void {\n    try {\n      if (authHandlers) {\n        authHandlers.fail(new Error(reason));\n      }\n    } finally {\n      authHandlers = undefined;\n      closeAuthenticationWindow();\n    }\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, this interface has been deprecated in favor of leveraging the `Promise` returned from {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>}\n   *-------------------------\n   * Used in {@link AuthenticateParameters} and {@link AuthTokenRequest}\n   */\n  export interface LegacyCallBacks {\n    /**\n     * @deprecated\n     * As of TeamsJS v2.0.0, this property has been deprecated in favor of a Promise-based pattern.\n     *\n     * A function that is called if the request succeeds.\n     */\n    successCallback?: (result: string) => void;\n    /**\n     * @deprecated\n     * As of TeamsJS v2.0.0, this property has been deprecated in favor of a Promise-based pattern.\n     *\n     * A function that is called if the request fails, with the reason for the failure.\n     */\n    failureCallback?: (reason: string) => void;\n  }\n\n  /**\n   * Describes the authentication pop-up parameters\n   */\n  export interface AuthenticatePopUpParameters {\n    /**\n     * The URL for the authentication pop-up.\n     */\n    url: string;\n    /**\n     * The preferred width for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    width?: number;\n    /**\n     * The preferred height for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    height?: number;\n    /**\n     * Some identity providers restrict their authentication pages from being displayed in embedded browsers (e.g., a web view inside of a native application)\n     * If the identity provider you are using prevents embedded browser usage, this flag should be set to `true` to enable the authentication page specified in\n     * the {@link url} property to be opened in an external browser.\n     * If this flag is `false`, the page will be opened directly within the current hosting application.\n     *\n     * This flag is ignored when the host for the application is a web app (as opposed to a native application) as the behavior is unnecessary in a web-only\n     * environment without an embedded browser.\n     */\n    isExternal?: boolean;\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link authentication.authenticate authentication.authenticate(authenticateParameters: AuthenticatePopUpParameters): Promise\\<string\\>} and\n   * the associated {@link AuthenticatePopUpParameters} instead.\n   *\n   * @see {@link LegacyCallBacks}\n   */\n  export type AuthenticateParameters = AuthenticatePopUpParameters & LegacyCallBacks;\n\n  /**\n   * Describes authentication token request parameters\n   */\n  export interface AuthTokenRequestParameters {\n    /**\n     * @hidden\n     * @internal\n     * An list of resources for which to acquire the access token; only for internal Microsoft usage\n     */\n    resources?: string[];\n    /**\n     * An optional list of claims which to pass to Microsoft Entra when requesting the access token.\n     */\n    claims?: string[];\n    /**\n     * An optional flag indicating whether to attempt the token acquisition silently or allow a prompt to be shown.\n     */\n    silent?: boolean;\n    /**\n     * An optional identifier of the home tenant for which to acquire the access token for (used in cross-tenant shared channels).\n     */\n    tenantId?: string;\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link AuthTokenRequestParameters} instead.\n   */\n  export type AuthTokenRequest = AuthTokenRequestParameters & LegacyCallBacks;\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface UserProfile {\n    /**\n     * @hidden\n     * The intended recipient of the token. The application that receives the token must verify that the audience\n     * value is correct and reject any tokens intended for a different audience.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    aud: string;\n    /**\n     * @hidden\n     * Identifies how the subject of the token was authenticated.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    amr: string[];\n    /**\n     * @hidden\n     * Stores the time at which the token was issued. It is often used to measure token freshness.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    iat: number;\n    /**\n     * @hidden\n     * Identifies the security token service (STS) that constructs and returns the token. In the tokens that Microsoft Entra\n     * returns, the issuer is sts.windows.net. The GUID in the issuer claim value is the tenant ID of the Microsoft Entra\n     * directory. The tenant ID is an immutable and reliable identifier of the directory.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    iss: string;\n    /**\n     * @hidden\n     * Provides the last name, surname, or family name of the user as defined in the Microsoft Entra user object.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    family_name: string;\n    /**\n     * @hidden\n     * Provides the first or \"given\" name of the user, as set on the Microsoft Entra user object.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    given_name: string;\n    /**\n     * @hidden\n     * Provides a human-readable value that identifies the subject of the token. This value is not guaranteed to\n     * be unique within a tenant and is designed to be used only for display purposes.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    unique_name: string;\n    /**\n     * @hidden\n     * Contains a unique identifier of an object in Microsoft Entra. This value is immutable and cannot be reassigned or\n     * reused. Use the object ID to identify an object in queries to Microsoft Entra.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    oid: string;\n    /**\n     * @hidden\n     * Identifies the principal about which the token asserts information, such as the user of an application.\n     * This value is immutable and cannot be reassigned or reused, so it can be used to perform authorization\n     * checks safely. Because the subject is always present in the tokens the Microsoft Entra issues, we recommended\n     * using this value in a general-purpose authorization system.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    sub: string;\n    /**\n     * @hidden\n     * An immutable, non-reusable identifier that identifies the directory tenant that issued the token. You can\n     * use this value to access tenant-specific directory resources in a multitenant application. For example,\n     * you can use this value to identify the tenant in a call to the Graph API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    tid: string;\n    /**\n     * @hidden\n     * Defines the end of the time interval within which a token is valid. The service that validates the token\n     * should verify that the current date is within the token lifetime; otherwise it should reject the token. The\n     * service might allow for up to five minutes beyond the token lifetime to account for any differences in clock\n     * time (\"time skew\") between Microsoft Entra and the service.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    exp: number;\n    /**\n     * @hidden\n     * Defines the start of the time interval within which a token is valid. The service that validates the token\n     * should verify that the current date is within the token lifetime; otherwise it should reject the token. The\n     * service might allow for up to five minutes beyond the token lifetime to account for any differences in clock\n     * time (\"time skew\") between Microsoft Entra and the service.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    nbf: number;\n    /**\n     * @hidden\n     * Stores the user name of the user principal.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    upn: string;\n    /**\n     * @hidden\n     * Stores the version number of the token.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    ver: string;\n    /**\n     * @hidden\n     * Stores the data residency of the user.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    dataResidency?: DataResidency;\n  }\n\n  /**\n   * @hidden\n   * Limited set of data residencies information exposed to 1P application developers\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum DataResidency {\n    /**\n     * Public\n     */\n    Public = 'public',\n\n    /**\n     * European Union Data Boundary\n     */\n    EUDB = 'eudb',\n\n    /**\n     * Other, stored to cover fields that will not be exposed\n     */\n    Other = 'other',\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, this interface has been deprecated in favor of a Promise-based pattern.\n   * @hidden\n   * Describes the UserRequest. Success callback describes how a successful request is handled.\n   * Failure callback describes how a failed request is handled.\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface UserRequest {\n    /**\n     * A function that is called if the token request succeeds, with the resulting token.\n     */\n    successCallback?: (user: UserProfile) => void;\n    /**\n     * A function that is called if the token request fails, with the reason for the failure.\n     */\n    failureCallback?: (reason: string) => void;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { sendMessageToParent } from '../internal/communication';\nimport { GlobalVars } from '../internal/globalVars';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isHostAdaptiveCardSchemaVersionUnsupported } from '../internal/utils';\nimport { DialogDimension, errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport {\n  AdaptiveCardDialogInfo,\n  BotAdaptiveCardDialogInfo,\n  BotUrlDialogInfo,\n  DialogInfo,\n  DialogSize,\n  M365ContentAction,\n  TaskInfo,\n  UrlDialogInfo,\n} from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst dialogTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport function updateResizeHelper(apiVersionTag: string, dimensions: DialogSize): void {\n  ensureInitialized(\n    runtime,\n    FrameContexts.content,\n    FrameContexts.sidePanel,\n    FrameContexts.task,\n    FrameContexts.meetingStage,\n  );\n  if (!dialog.update.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  sendMessageToParent(apiVersionTag, 'tasks.updateTask', [dimensions]);\n}\n\nexport function urlOpenHelper(\n  apiVersionTag: string,\n  urlDialogInfo: UrlDialogInfo,\n  submitHandler?: dialog.DialogSubmitHandler,\n  messageFromChildHandler?: dialog.PostMessageChannel,\n): void {\n  ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n  if (!dialog.url.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n\n  if (messageFromChildHandler) {\n    registerHandler(\n      getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_RegisterMessageForParentHandler),\n      'messageForParent',\n      messageFromChildHandler,\n    );\n  }\n  const dialogInfo: DialogInfo = dialog.url.getDialogInfoFromUrlDialogInfo(urlDialogInfo);\n  sendMessageToParent(apiVersionTag, 'tasks.startTask', [dialogInfo], (err: string, result: string | object) => {\n    submitHandler?.({ err, result });\n    removeHandler('messageForParent');\n  });\n}\n\nexport function botUrlOpenHelper(\n  apiVersionTag: string,\n  urlDialogInfo: BotUrlDialogInfo,\n  submitHandler?: dialog.DialogSubmitHandler,\n  messageFromChildHandler?: dialog.PostMessageChannel,\n): void {\n  ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n  if (!dialog.url.bot.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n\n  if (messageFromChildHandler) {\n    registerHandler(\n      getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_Bot_RegisterMessageForParentHandler),\n      'messageForParent',\n      messageFromChildHandler,\n    );\n  }\n  const dialogInfo: DialogInfo = dialog.url.getDialogInfoFromBotUrlDialogInfo(urlDialogInfo);\n  sendMessageToParent(apiVersionTag, 'tasks.startTask', [dialogInfo], (err: string, result: string | object) => {\n    submitHandler?.({ err, result });\n    removeHandler('messageForParent');\n  });\n}\n\nexport function urlSubmitHelper(apiVersionTag: string, result?: string | object, appIds?: string | string[]): void {\n  ensureInitialized(runtime, FrameContexts.task);\n  if (!dialog.url.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n\n  // Send tasks.completeTask instead of tasks.submitTask message for backward compatibility with Mobile clients\n  sendMessageToParent(apiVersionTag, 'tasks.completeTask', [\n    result,\n    appIds ? (Array.isArray(appIds) ? appIds : [appIds]) : [],\n  ]);\n}\n\n/**\n * This group of capabilities enables apps to show modal dialogs. There are two primary types of dialogs: URL-based dialogs and [Adaptive Card](https://learn.microsoft.com/adaptive-cards/) dialogs.\n * Both types of dialogs are shown on top of your app, preventing interaction with your app while they are displayed.\n * - URL-based dialogs allow you to specify a URL from which the contents will be shown inside the dialog.\n *   - For URL dialogs, use the functions and interfaces in the {@link dialog.url} namespace.\n * - Adaptive Card-based dialogs allow you to provide JSON describing an Adaptive Card that will be shown inside the dialog.\n *   - For Adaptive Card dialogs, use the functions and interfaces in the {@link dialog.adaptiveCard} namespace.\n *\n * @remarks Note that dialogs were previously called \"task modules\". While they have been renamed for clarity, the functionality has been maintained.\n * For more details, see [Dialogs](https://learn.microsoft.com/microsoftteams/platform/task-modules-and-cards/what-are-task-modules)\n *\n * @beta\n */\nexport namespace dialog {\n  /**\n   * Data Structure to represent the SDK response when dialog closes\n   *\n   * @beta\n   */\n  export interface ISdkResponse {\n    /**\n     * Error in case there is a failure before dialog submission\n     */\n    err?: string;\n\n    /**\n     * Value provided in the `result` parameter by the dialog when the {@linkcode url.submit} function\n     * was called.\n     * If the dialog was closed by the user without submitting (e.g., using a control in the corner\n     * of the dialog), this value will be `undefined` here.\n     */\n    result?: string | object;\n  }\n\n  /**\n   * Handler used to receive and process messages sent between a dialog and the app that launched it\n   * @beta\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export type PostMessageChannel = (message: any) => void;\n\n  /**\n   * Handler used for receiving results when a dialog closes, either the value passed by {@linkcode url.submit}\n   * or an error if the dialog was closed by the user.\n   *\n   * @see {@linkcode ISdkResponse}\n   *\n   * @beta\n   */\n  export type DialogSubmitHandler = (result: ISdkResponse) => void;\n  const storedMessages: string[] = [];\n\n  /**\n   * @hidden\n   * Hide from docs because this function is only used during initialization\n   *\n   * Adds register handlers for messageForChild upon initialization and only in the tasks FrameContext. {@link FrameContexts.task}\n   * Function is called during app initialization\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function initialize(): void {\n    registerHandler(\n      getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_RegisterMessageForChildHandler),\n      'messageForChild',\n      handleDialogMessage,\n      false,\n    );\n  }\n\n  function handleDialogMessage(message: string): void {\n    if (!GlobalVars.frameContext) {\n      // GlobalVars.frameContext is currently not set\n      return;\n    }\n\n    if (GlobalVars.frameContext === FrameContexts.task) {\n      storedMessages.push(message);\n    } else {\n      // Not in task FrameContext, remove 'messageForChild' handler\n      removeHandler('messageForChild');\n    }\n  }\n\n  export namespace url {\n    /**\n     * Allows app to open a url based dialog.\n     *\n     * @remarks\n     * This function cannot be called from inside of a dialog\n     *\n     * @param urlDialogInfo - An object containing the parameters of the dialog module.\n     * @param submitHandler - Handler that triggers when a dialog calls the {@linkcode submit} function or when the user closes the dialog.\n     * @param messageFromChildHandler - Handler that triggers if dialog sends a message to the app.\n     *\n     * @beta\n     */\n    export function open(\n      urlDialogInfo: UrlDialogInfo,\n      submitHandler?: DialogSubmitHandler,\n      messageFromChildHandler?: PostMessageChannel,\n    ): void {\n      urlOpenHelper(\n        getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_Open),\n        urlDialogInfo,\n        submitHandler,\n        messageFromChildHandler,\n      );\n    }\n\n    /**\n     * Submit the dialog module and close the dialog\n     *\n     * @remarks\n     * This function is only intended to be called from code running within the dialog. Calling it from outside the dialog will have no effect.\n     *\n     * @param result - The result to be sent to the bot or the app. Typically a JSON object or a serialized version of it,\n     *  If this function is called from a dialog while {@link M365ContentAction} is set in the context object by the host, result will be ignored\n     *\n     * @param appIds - Valid application(s) that can receive the result of the submitted dialogs. Specifying this parameter helps prevent malicious apps from retrieving the dialog result. Multiple app IDs can be specified because a web app from a single underlying domain can power multiple apps across different environments and branding schemes.\n     *\n     * @beta\n     */\n    export function submit(result?: string | object, appIds?: string | string[]): void {\n      urlSubmitHelper(getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_Submit), result, appIds);\n    }\n\n    /**\n     * Subcapability that allows communication between the dialog and the parent app.\n     *\n     * @remarks\n     * Note that dialog can be invoked from parentless scenarios e.g. Search Message Extensions. The subcapability `parentCommunication` is not supported in such scenarios.\n     *\n     * @beta\n     */\n    export namespace parentCommunication {\n      /**\n       *  Send message to the parent from dialog\n       *\n       * @remarks\n       * This function is only intended to be called from code running within the dialog. Calling it from outside the dialog will have no effect.\n       *\n       * @param message - The message to send to the parent\n       *\n       * @beta\n       */\n      export function sendMessageToParentFromDialog(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        message: any,\n      ): void {\n        ensureInitialized(runtime, FrameContexts.task);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n\n        sendMessageToParent(\n          getApiVersionTag(\n            dialogTelemetryVersionNumber,\n            ApiName.Dialog_Url_ParentCommunication_SendMessageToParentFromDialog,\n          ),\n          'messageForParent',\n          [message],\n        );\n      }\n\n      /**\n       *  Send message to the dialog from the parent\n       *\n       * @param message - The message to send\n       *\n       * @beta\n       */\n      export function sendMessageToDialog(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        message: any,\n      ): void {\n        ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n\n        sendMessageToParent(\n          getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_ParentCommunication_SendMessageToDialog),\n          'messageForChild',\n          [message],\n        );\n      }\n\n      /**\n       * Register a listener that will be triggered when a message is received from the app that opened the dialog.\n       *\n       * @remarks\n       * This function is only intended to be called from code running within the dialog. Calling it from outside the dialog will have no effect.\n       *\n       * @param listener - The listener that will be triggered.\n       *\n       * @beta\n       */\n      export function registerOnMessageFromParent(listener: PostMessageChannel): void {\n        ensureInitialized(runtime, FrameContexts.task);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n\n        // We need to remove the original 'messageForChild'\n        // handler since the original does not allow for post messages.\n        // It is replaced by the user specified listener that is passed in.\n        removeHandler('messageForChild');\n        registerHandler(\n          getApiVersionTag(\n            dialogTelemetryVersionNumber,\n            ApiName.Dialog_Url_ParentCommunication_RegisterMessageForChildHandler,\n          ),\n          'messageForChild',\n          listener,\n        );\n        storedMessages.reverse();\n        while (storedMessages.length > 0) {\n          const message = storedMessages.pop();\n          listener(message);\n        }\n      }\n\n      /**\n       * Checks if dialog.url.parentCommunication capability is supported by the host\n       *\n       * @returns boolean to represent whether dialog.url.parentCommunication capability is supported\n       *\n       * @throws Error if {@linkcode app.initialize} has not successfully completed\n       *\n       * @beta\n       */\n      export function isSupported(): boolean {\n        return ensureInitialized(runtime) && !!runtime.supports.dialog?.url?.parentCommunication;\n      }\n    }\n\n    /**\n     * Checks if dialog.url module is supported by the host\n     *\n     * @returns boolean to represent whether dialog.url module is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && (runtime.supports.dialog && runtime.supports.dialog.url) !== undefined;\n    }\n\n    /**\n     * Namespace to open a dialog that sends results to the bot framework\n     *\n     * @beta\n     */\n    export namespace bot {\n      /**\n       * Allows an app to open a dialog that sends submitted data to a bot.\n       *\n       * @param botUrlDialogInfo - An object containing the parameters of the dialog module including completionBotId.\n       * @param submitHandler - Handler that triggers when the dialog has been submitted or closed.\n       * @param messageFromChildHandler - Handler that triggers if dialog sends a message to the app.\n       *\n       * @returns a function that can be used to send messages to the dialog.\n       *\n       * @beta\n       */\n      export function open(\n        botUrlDialogInfo: BotUrlDialogInfo,\n        submitHandler?: DialogSubmitHandler,\n        messageFromChildHandler?: PostMessageChannel,\n      ): void {\n        botUrlOpenHelper(\n          getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Url_Bot_Open),\n          botUrlDialogInfo,\n          submitHandler,\n          messageFromChildHandler,\n        );\n      }\n\n      /**\n       * Checks if dialog.url.bot capability is supported by the host\n       *\n       * @returns boolean to represent whether dialog.url.bot is supported\n       *\n       * @throws Error if {@linkcode app.initialize} has not successfully completed\n       *\n       * @beta\n       */\n      export function isSupported(): boolean {\n        return (\n          ensureInitialized(runtime) &&\n          (runtime.supports.dialog && runtime.supports.dialog.url && runtime.supports.dialog.url.bot) !== undefined\n        );\n      }\n    }\n\n    /**\n     * @hidden\n     *\n     * Convert UrlDialogInfo to DialogInfo to send the information to host in {@linkcode open} API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function getDialogInfoFromUrlDialogInfo(urlDialogInfo: UrlDialogInfo): DialogInfo {\n      const dialogInfo: DialogInfo = {\n        url: urlDialogInfo.url,\n        height: urlDialogInfo.size ? urlDialogInfo.size.height : DialogDimension.Small,\n        width: urlDialogInfo.size ? urlDialogInfo.size.width : DialogDimension.Small,\n        title: urlDialogInfo.title,\n        fallbackUrl: urlDialogInfo.fallbackUrl,\n      };\n      return dialogInfo;\n    }\n\n    /**\n     * @hidden\n     *\n     * Convert BotUrlDialogInfo to DialogInfo to send the information to host in {@linkcode bot.open} API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function getDialogInfoFromBotUrlDialogInfo(botUrlDialogInfo: BotUrlDialogInfo): DialogInfo {\n      const dialogInfo: DialogInfo = getDialogInfoFromUrlDialogInfo(botUrlDialogInfo);\n      dialogInfo.completionBotId = botUrlDialogInfo.completionBotId;\n      return dialogInfo;\n    }\n  }\n\n  /**\n   * This function currently serves no purpose and should not be used. All functionality that used\n   * to be covered by this method is now in subcapabilities and those isSupported methods should be\n   * used directly.\n   *\n   * @hidden\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.dialog ? true : false;\n  }\n\n  /**\n   * Namespace to update the dialog\n   *\n   * @beta\n   */\n  export namespace update {\n    /**\n     * Update dimensions - height/width of a dialog.\n     *\n     * @param dimensions - An object containing width and height properties.\n     *\n     * @beta\n     */\n    export function resize(dimensions: DialogSize): void {\n      updateResizeHelper(getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_Update_Resize), dimensions);\n    }\n\n    /**\n     * Checks if dialog.update capability is supported by the host\n     * @returns boolean to represent whether dialog.update capabilty is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.dialog\n        ? runtime.supports.dialog.update\n          ? true\n          : false\n        : false;\n    }\n  }\n\n  /**\n   * Subcapability for interacting with adaptive card dialogs\n   * @beta\n   */\n  export namespace adaptiveCard {\n    /**\n     * Allows app to open an adaptive card based dialog.\n     *\n     * @remarks\n     * This function cannot be called from inside of a dialog\n     *\n     * @param adaptiveCardDialogInfo - An object containing the parameters of the dialog module {@link AdaptiveCardDialogInfo}.\n     * @param submitHandler - Handler that triggers when a dialog calls the {@linkcode url.submit} function or when the user closes the dialog.\n     *\n     * @beta\n     */\n    export function open(adaptiveCardDialogInfo: AdaptiveCardDialogInfo, submitHandler?: DialogSubmitHandler): void {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      const dialogInfo: DialogInfo = getDialogInfoFromAdaptiveCardDialogInfo(adaptiveCardDialogInfo);\n      sendMessageToParent(\n        getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_AdaptiveCard_Open),\n        'tasks.startTask',\n        [dialogInfo],\n        (err: string, result: string | object) => {\n          submitHandler?.({ err, result });\n        },\n      );\n    }\n\n    /**\n     * Checks if dialog.adaptiveCard module is supported by the host\n     *\n     * @returns boolean to represent whether dialog.adaptiveCard module is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      const isAdaptiveCardVersionSupported =\n        runtime.hostVersionsInfo &&\n        runtime.hostVersionsInfo.adaptiveCardSchemaVersion &&\n        !isHostAdaptiveCardSchemaVersionUnsupported(runtime.hostVersionsInfo.adaptiveCardSchemaVersion);\n      return (\n        ensureInitialized(runtime) &&\n        (isAdaptiveCardVersionSupported && runtime.supports.dialog && runtime.supports.dialog.card) !== undefined\n      );\n    }\n\n    /**\n     * Namespace for interaction with adaptive card dialogs that need to communicate with the bot framework\n     *\n     * @beta\n     */\n    export namespace bot {\n      /**\n       * Allows an app to open an adaptive card-based dialog module using bot.\n       *\n       * @param botAdaptiveCardDialogInfo - An object containing the parameters of the dialog module including completionBotId.\n       * @param submitHandler - Handler that triggers when the dialog has been submitted or closed.\n       *\n       * @beta\n       */\n      export function open(\n        botAdaptiveCardDialogInfo: BotAdaptiveCardDialogInfo,\n        submitHandler?: DialogSubmitHandler,\n      ): void {\n        ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n\n        const dialogInfo: DialogInfo = getDialogInfoFromBotAdaptiveCardDialogInfo(botAdaptiveCardDialogInfo);\n\n        sendMessageToParent(\n          getApiVersionTag(dialogTelemetryVersionNumber, ApiName.Dialog_AdaptiveCard_Bot_Open),\n          'tasks.startTask',\n          [dialogInfo],\n          (err: string, result: string | object) => {\n            submitHandler?.({ err, result });\n          },\n        );\n      }\n\n      /**\n       * Checks if dialog.adaptiveCard.bot capability is supported by the host\n       *\n       * @returns boolean to represent whether dialog.adaptiveCard.bot is supported\n       *\n       * @throws Error if {@linkcode app.initialize} has not successfully completed\n       *\n       * @beta\n       */\n      export function isSupported(): boolean {\n        const isAdaptiveCardVersionSupported =\n          runtime.hostVersionsInfo &&\n          runtime.hostVersionsInfo.adaptiveCardSchemaVersion &&\n          !isHostAdaptiveCardSchemaVersionUnsupported(runtime.hostVersionsInfo.adaptiveCardSchemaVersion);\n        return (\n          ensureInitialized(runtime) &&\n          (isAdaptiveCardVersionSupported &&\n            runtime.supports.dialog &&\n            runtime.supports.dialog.card &&\n            runtime.supports.dialog.card.bot) !== undefined\n        );\n      }\n    }\n\n    /**\n     * @hidden\n     * Hide from docs\n     * --------\n     * Convert AdaptiveCardDialogInfo to DialogInfo to send the information to host in {@linkcode adaptiveCard.open} API.\n     *\n     * @internal\n     */\n    function getDialogInfoFromAdaptiveCardDialogInfo(adaptiveCardDialogInfo: AdaptiveCardDialogInfo): DialogInfo {\n      const dialogInfo: DialogInfo = {\n        card: adaptiveCardDialogInfo.card,\n        height: adaptiveCardDialogInfo.size ? adaptiveCardDialogInfo.size.height : DialogDimension.Small,\n        width: adaptiveCardDialogInfo.size ? adaptiveCardDialogInfo.size.width : DialogDimension.Small,\n        title: adaptiveCardDialogInfo.title,\n      };\n      return dialogInfo;\n    }\n\n    /**\n     * @hidden\n     * Hide from docs\n     * --------\n     * Convert BotAdaptiveCardDialogInfo to DialogInfo to send the information to host in {@linkcode adaptiveCard.open} API.\n     *\n     * @internal\n     */\n    function getDialogInfoFromBotAdaptiveCardDialogInfo(\n      botAdaptiveCardDialogInfo: BotAdaptiveCardDialogInfo,\n    ): DialogInfo {\n      const dialogInfo: DialogInfo = getDialogInfoFromAdaptiveCardDialogInfo(botAdaptiveCardDialogInfo);\n      dialogInfo.completionBotId = botAdaptiveCardDialogInfo.completionBotId;\n      return dialogInfo;\n    }\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { runtime } from '../public/runtime';\nimport { errorNotSupportedOnPlatform } from './constants';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst menuTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to interact with the menu-specific part of the SDK.\n * This object is used to show View Configuration, Action Menu and Navigation Bar Menu.\n */\nexport namespace menus {\n  /**\n   * @hidden\n   * Represents information about item in View Configuration.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ViewConfiguration {\n    /**\n     * @hidden\n     * Unique identifier of view.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    id: string;\n    /**\n     * @hidden\n     * Display title of the view.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    title: string;\n    /**\n     * @hidden\n     * Additional information for accessibility.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    contentDescription?: string;\n  }\n\n  /**\n   * Defines how a menu item should appear in the NavBar.\n   */\n  export enum DisplayMode {\n    /**\n     * Only place this item in the NavBar if there's room for it.\n     * If there's no room, item is shown in the overflow menu.\n     */\n    ifRoom = 0,\n    /**\n     * Never place this item in the NavBar.\n     * The item would always be shown in NavBar's overflow menu.\n     */\n    overflowOnly = 1,\n  }\n\n  /**\n   * @hidden\n   * Represents information about menu item for Action Menu and Navigation Bar Menu.\n   */\n  export class MenuItem {\n    /**\n     * @hidden\n     * Unique identifier for the menu item.\n     */\n    public id: string;\n    /**\n     * @hidden\n     * Display title of the menu item.\n     */\n    public title: string;\n    /**\n     * @hidden\n     * Display icon of the menu item. The icon value must be a string having SVG icon content.\n     */\n    public icon: string;\n    /**\n     * @hidden\n     * Selected state display icon of the menu item. The icon value must be a string having SVG icon content.\n     */\n    public iconSelected?: string;\n    /**\n     * @hidden\n     * Additional information for accessibility.\n     */\n    public contentDescription?: string;\n    /**\n     * @hidden\n     * State of the menu item\n     */\n    public enabled = true;\n    /**\n     * @hidden\n     * Interface to show list of items on selection of menu item.\n     */\n    public viewData?: ViewData;\n    /**\n     * @hidden\n     * Whether the menu item is selected or not\n     */\n    public selected = false;\n    /**\n     * The Display Mode of the menu item.\n     * Default Behaviour would be DisplayMode.ifRoom if null.\n     * Refer {@link DisplayMode}\n     */\n    public displayMode?: DisplayMode;\n  }\n\n  /**\n   * @hidden\n   * Represents information about view to show on Navigation Bar Menu item selection\n   */\n  export interface ViewData {\n    /**\n     * @hidden\n     * Display header title of the item list.\n     */\n    listTitle?: string;\n    /**\n     * @hidden\n     * Type of the menu item.\n     */\n    listType: MenuListType;\n    /**\n     * @hidden\n     * Array of MenuItem. Icon value will be required for all items in the list.\n     */\n    listItems: MenuItem[];\n  }\n\n  /**\n   * @hidden\n   * Represents information about type of list to display in Navigation Bar Menu.\n   */\n  export enum MenuListType {\n    dropDown = 'dropDown',\n    popOver = 'popOver',\n  }\n  let navBarMenuItemPressHandler: ((id: string) => boolean) | undefined;\n  let actionMenuItemPressHandler: ((id: string) => boolean) | undefined;\n  let viewConfigItemPressHandler: ((id: string) => boolean) | undefined;\n\n  /**\n   * @hidden\n   * Register navBarMenuItemPress, actionMenuItemPress, setModuleView handlers.\n   *\n   * @internal\n   * Limited to Microsoft-internal use.\n   */\n  export function initialize(): void {\n    registerHandler(\n      getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_RegisterNavBarMenuItemPressHandler),\n      'navBarMenuItemPress',\n      handleNavBarMenuItemPress,\n      false,\n    );\n    registerHandler(\n      getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_RegisterActionMenuItemPressHandler),\n      'actionMenuItemPress',\n      handleActionMenuItemPress,\n      false,\n    );\n    registerHandler(\n      getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_RegisterSetModuleViewHandler),\n      'setModuleView',\n      handleViewConfigItemPress,\n      false,\n    );\n  }\n\n  /**\n   * @hidden\n   * Registers list of view configurations and it's handler.\n   * Handler is responsible for listening selection of View Configuration.\n   *\n   * @param viewConfig - List of view configurations. Minimum 1 value is required.\n   * @param handler - The handler to invoke when the user selects view configuration.\n   */\n  export function setUpViews(viewConfig: ViewConfiguration[], handler: (id: string) => boolean): void {\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    viewConfigItemPressHandler = handler;\n    sendMessageToParent(getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_SetUpViews), 'setUpViews', [\n      viewConfig,\n    ]);\n  }\n\n  function handleViewConfigItemPress(id: string): void {\n    if (!viewConfigItemPressHandler || !viewConfigItemPressHandler(id)) {\n      ensureInitialized(runtime);\n      sendMessageToParent(\n        getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_HandleViewConfigItemPress),\n        'viewConfigItemPress',\n        [id],\n      );\n    }\n  }\n\n  /**\n   * @hidden\n   * Used to set menu items on the Navigation Bar. If icon is available, icon will be shown, otherwise title will be shown.\n   *\n   * @param items List of MenuItems for Navigation Bar Menu.\n   * @param handler The handler to invoke when the user selects menu item.\n   */\n  export function setNavBarMenu(items: MenuItem[], handler: (id: string) => boolean): void {\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    navBarMenuItemPressHandler = handler;\n    sendMessageToParent(getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_SetNavBarMenu), 'setNavBarMenu', [\n      items,\n    ]);\n  }\n\n  function handleNavBarMenuItemPress(id: string): void {\n    if (!navBarMenuItemPressHandler || !navBarMenuItemPressHandler(id)) {\n      ensureInitialized(runtime);\n      sendMessageToParent(\n        getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_HandleNavBarMenuItemPress),\n        'handleNavBarMenuItemPress',\n        [id],\n      );\n    }\n  }\n\n  /** Parameters used to create an action menu within an app */\n  export interface ActionMenuParameters {\n    /**\n     * @hidden\n     * Display title for Action Menu\n     */\n    title: string;\n    /**\n     * @hidden\n     * List of MenuItems for Action Menu\n     */\n    items: MenuItem[];\n  }\n\n  /**\n   * @hidden\n   * Used to show Action Menu.\n   *\n   * @param params - Parameters for Menu Parameters\n   * @param handler - The handler to invoke when the user selects menu item.\n   */\n  export function showActionMenu(params: ActionMenuParameters, handler: (id: string) => boolean): void {\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    actionMenuItemPressHandler = handler;\n    sendMessageToParent(getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_ShowActionMenu), 'showActionMenu', [\n      params,\n    ]);\n  }\n\n  function handleActionMenuItemPress(id: string): void {\n    if (!actionMenuItemPressHandler || !actionMenuItemPressHandler(id)) {\n      ensureInitialized(runtime);\n      sendMessageToParent(\n        getApiVersionTag(menuTelemetryVersionNumber, ApiName.Menus_HandleActionMenuItemPress),\n        'handleActionMenuItemPress',\n        [id],\n      );\n    }\n  }\n\n  /**\n   * Checks if the menus capability is supported by the host\n   * @returns boolean to represent whether the menus capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.menus ? true : false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  Communication,\n  initializeCommunication,\n  sendAndHandleStatusAndReason,\n  sendAndUnwrap,\n  sendMessageToParent,\n  uninitializeCommunication,\n} from '../internal/communication';\nimport { defaultSDKVersionForCompatCheck } from '../internal/constants';\nimport { GlobalVars } from '../internal/globalVars';\nimport * as Handlers from '../internal/handlers'; // Conflict with some names\nimport { ensureInitializeCalled, ensureInitialized, processAdditionalValidOrigins } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getLogger } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { compareSDKVersions, inServerSideRenderingEnvironment, runWithTimeout } from '../internal/utils';\nimport { prefetchOriginsFromCDN } from '../internal/validOrigins';\nimport { messageChannels } from '../private/messageChannels';\nimport { authentication } from './authentication';\nimport { ChannelType, FrameContexts, HostClientType, HostName, TeamType, UserTeamRole } from './constants';\nimport { dialog } from './dialog';\nimport { ActionInfo, Context as LegacyContext, FileOpenPreference, LocaleInfo, ResumeContext } from './interfaces';\nimport { menus } from './menus';\nimport { pages } from './pages';\nimport {\n  applyRuntimeConfig,\n  generateVersionBasedTeamsRuntimeConfig,\n  IBaseRuntime,\n  mapTeamsVersionToSupportedCapabilities,\n  runtime,\n  versionAndPlatformAgnosticTeamsRuntimeConfig,\n} from './runtime';\nimport { version } from './version';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst appTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Number of milliseconds we'll give the initialization call to return before timing it out\n */\nconst initializationTimeoutInMs = 5000;\n\nconst appLogger = getLogger('app');\n\nexport function appInitializeHelper(apiVersionTag: string, validMessageOrigins?: string[]): Promise<void> {\n  if (!inServerSideRenderingEnvironment()) {\n    return runWithTimeout(\n      () => initializeHelper(apiVersionTag, validMessageOrigins),\n      initializationTimeoutInMs,\n      new Error('SDK initialization timed out.'),\n    );\n  } else {\n    const initializeLogger = appLogger.extend('initialize');\n    // This log statement should NEVER actually be written. This code path exists only to enable compilation in server-side rendering environments.\n    // If you EVER see this statement in ANY log file, something has gone horribly wrong and a bug needs to be filed.\n    initializeLogger('window object undefined at initialization');\n    return Promise.resolve();\n  }\n}\n\nexport function notifyAppLoadedHelper(apiVersionTag: string): void {\n  sendMessageToParent(apiVersionTag, app.Messages.AppLoaded, [version]);\n}\n\nexport function notifyExpectedFailureHelper(\n  apiVersionTag: string,\n  expectedFailureRequest: app.IExpectedFailureRequest,\n): void {\n  sendMessageToParent(apiVersionTag, app.Messages.ExpectedFailure, [\n    expectedFailureRequest.reason,\n    expectedFailureRequest.message,\n  ]);\n}\n\nexport function notifyFailureHelper(apiVersiontag: string, appInitializationFailedRequest: app.IFailedRequest): void {\n  sendMessageToParent(apiVersiontag, app.Messages.Failure, [\n    appInitializationFailedRequest.reason,\n    appInitializationFailedRequest.message,\n  ]);\n}\n\nexport function notifySuccessHelper(apiVersionTag: string): void {\n  sendMessageToParent(apiVersionTag, app.Messages.Success, [version]);\n}\n\nconst initializeHelperLogger = appLogger.extend('initializeHelper');\nfunction initializeHelper(apiVersionTag: string, validMessageOrigins?: string[]): Promise<void> {\n  return new Promise<void>((resolve) => {\n    // Independent components might not know whether the SDK is initialized so might call it to be safe.\n    // Just no-op if that happens to make it easier to use.\n    if (!GlobalVars.initializeCalled) {\n      GlobalVars.initializeCalled = true;\n      Handlers.initializeHandlers();\n      GlobalVars.initializePromise = initializeCommunication(validMessageOrigins, apiVersionTag).then(\n        ({ context, clientType, runtimeConfig, clientSupportedSDKVersion = defaultSDKVersionForCompatCheck }) => {\n          GlobalVars.frameContext = context;\n          GlobalVars.hostClientType = clientType;\n          GlobalVars.clientSupportedSDKVersion = clientSupportedSDKVersion;\n          // Temporary workaround while the Host is updated with the new argument order.\n          // For now, we might receive any of these possibilities:\n          // - `runtimeConfig` in `runtimeConfig` and `clientSupportedSDKVersion` in `clientSupportedSDKVersion`.\n          // - `runtimeConfig` in `clientSupportedSDKVersion` and `clientSupportedSDKVersion` in `runtimeConfig`.\n          // - `clientSupportedSDKVersion` in `runtimeConfig` and no `clientSupportedSDKVersion`.\n          // This code supports any of these possibilities\n\n          // Teams AppHost won't provide this runtime config\n          // so we assume that if we don't have it, we must be running in Teams.\n          // After Teams updates its client code, we can remove this default code.\n          try {\n            initializeHelperLogger('Parsing %s', runtimeConfig);\n            const givenRuntimeConfig: IBaseRuntime | null = JSON.parse(runtimeConfig);\n            initializeHelperLogger('Checking if %o is a valid runtime object', givenRuntimeConfig ?? 'null');\n            // Check that givenRuntimeConfig is a valid instance of IBaseRuntime\n            if (!givenRuntimeConfig || !givenRuntimeConfig.apiVersion) {\n              throw new Error('Received runtime config is invalid');\n            }\n            runtimeConfig && applyRuntimeConfig(givenRuntimeConfig);\n          } catch (e) {\n            if (e instanceof SyntaxError) {\n              try {\n                initializeHelperLogger('Attempting to parse %s as an SDK version', runtimeConfig);\n                // if the given runtime config was actually meant to be a SDK version, store it as such.\n                // TODO: This is a temporary workaround to allow Teams to store clientSupportedSDKVersion even when\n                // it doesn't provide the runtimeConfig. After Teams updates its client code, we should\n                // remove this feature.\n                if (!isNaN(compareSDKVersions(runtimeConfig, defaultSDKVersionForCompatCheck))) {\n                  GlobalVars.clientSupportedSDKVersion = runtimeConfig;\n                }\n                const givenRuntimeConfig: IBaseRuntime | null = JSON.parse(clientSupportedSDKVersion);\n                initializeHelperLogger('givenRuntimeConfig parsed to %o', givenRuntimeConfig ?? 'null');\n\n                if (!givenRuntimeConfig) {\n                  throw new Error(\n                    'givenRuntimeConfig string was successfully parsed. However, it parsed to value of null',\n                  );\n                } else {\n                  applyRuntimeConfig(givenRuntimeConfig);\n                }\n              } catch (e) {\n                if (e instanceof SyntaxError) {\n                  applyRuntimeConfig(\n                    generateVersionBasedTeamsRuntimeConfig(\n                      GlobalVars.clientSupportedSDKVersion,\n                      versionAndPlatformAgnosticTeamsRuntimeConfig,\n                      mapTeamsVersionToSupportedCapabilities,\n                    ),\n                  );\n                } else {\n                  throw e;\n                }\n              }\n            } else {\n              // If it's any error that's not a JSON parsing error, we want the program to fail.\n              throw e;\n            }\n          }\n\n          GlobalVars.initializeCompleted = true;\n        },\n      );\n\n      authentication.initialize();\n      menus.initialize();\n      pages.config.initialize();\n      dialog.initialize();\n    }\n\n    // Handle additional valid message origins if specified\n    if (Array.isArray(validMessageOrigins)) {\n      processAdditionalValidOrigins(validMessageOrigins);\n    }\n\n    if (GlobalVars.initializePromise !== undefined) {\n      resolve(GlobalVars.initializePromise);\n    } else {\n      initializeHelperLogger('GlobalVars.initializePromise is unexpectedly undefined');\n    }\n  });\n}\n\nexport function registerOnThemeChangeHandlerHelper(apiVersionTag: string, handler: app.themeHandler): void {\n  // allow for registration cleanup even when not called initialize\n  !isNullOrUndefined(handler) && ensureInitializeCalled();\n  Handlers.registerOnThemeChangeHandler(apiVersionTag, handler);\n}\n\nexport function openLinkHelper(apiVersionTag: string, deepLink: string): Promise<void> {\n  return new Promise<void>((resolve) => {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.settings,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n    resolve(sendAndHandleStatusAndReason(apiVersionTag, 'executeDeepLink', deepLink));\n  });\n}\n\n/**\n * Namespace to interact with app initialization and lifecycle.\n */\nexport namespace app {\n  const appLogger = getLogger('app');\n\n  // ::::::::::::::::::::::: MicrosoftTeams client SDK public API ::::::::::::::::::::\n\n  /** App Initialization Messages */\n  export const Messages = {\n    /** App loaded. */\n    AppLoaded: 'appInitialization.appLoaded',\n    /** App initialized successfully. */\n    Success: 'appInitialization.success',\n    /** App initialization failed. */\n    Failure: 'appInitialization.failure',\n    /** App initialization expected failure. */\n    ExpectedFailure: 'appInitialization.expectedFailure',\n  };\n\n  /**\n   * Describes errors that caused app initialization to fail\n   */\n  export enum FailedReason {\n    /**\n     * Authentication failed\n     */\n    AuthFailed = 'AuthFailed',\n    /**\n     * The application timed out\n     */\n    Timeout = 'Timeout',\n    /**\n     * The app failed for a different reason\n     */\n    Other = 'Other',\n  }\n\n  /**\n   * Describes expected errors that occurred during an otherwise successful\n   * app initialization\n   */\n  export enum ExpectedFailureReason {\n    /**\n     * There was a permission error\n     */\n    PermissionError = 'PermissionError',\n    /**\n     * The item was not found\n     */\n    NotFound = 'NotFound',\n    /**\n     * The network is currently throttled\n     */\n    Throttling = 'Throttling',\n    /**\n     * The application is currently offline\n     */\n    Offline = 'Offline',\n    /**\n     * The app failed for a different reason\n     */\n    Other = 'Other',\n  }\n\n  /**\n   * Represents the failed request sent during a failed app initialization.\n   */\n  export interface IFailedRequest {\n    /**\n     * The reason for the failure\n     */\n    reason: FailedReason;\n    /**\n     * This property is currently unused.\n     */\n    message?: string;\n  }\n\n  /**\n   * Represents the failure request sent during an erroneous app initialization.\n   */\n  export interface IExpectedFailureRequest {\n    /**\n     * The reason for the failure\n     */\n    reason: ExpectedFailureReason;\n    /**\n     * A message that describes the failure\n     */\n    message?: string;\n  }\n\n  /**\n   * Represents application information.\n   */\n  export interface AppInfo {\n    /**\n     * The current locale that the user has configured for the app formatted as\n     * languageId-countryId (for example, en-us).\n     */\n    locale: string;\n\n    /**\n     * The current UI theme of the host. Possible values: \"default\", \"dark\", \"contrast\" or \"glass\".\n     */\n    theme: string;\n\n    /**\n     * Unique ID for the current session for use in correlating telemetry data. A session corresponds to the lifecycle of an app. A new session begins upon the creation of a webview (on Teams mobile) or iframe (in Teams desktop) hosting the app, and ends when it is destroyed.\n     */\n    sessionId: string;\n\n    /**\n     * Info of the host\n     */\n    host: AppHostInfo;\n\n    /**\n     * More detailed locale info from the user's OS if available. Can be used together with\n     * the @microsoft/globe NPM package to ensure your app respects the user's OS date and\n     * time format configuration\n     */\n    osLocaleInfo?: LocaleInfo;\n    /**\n     * Personal app icon y coordinate position\n     */\n    iconPositionVertical?: number;\n\n    /**\n     * Time when the user clicked on the tab\n     */\n    userClickTime?: number;\n\n    /**\n     * The ID of the parent message from which this task module was launched.\n     * This is only available in task modules launched from bot cards.\n     */\n    parentMessageId?: string;\n\n    /**\n     * Where the user prefers the file to be opened from by default during file open\n     */\n    userFileOpenPreference?: FileOpenPreference;\n\n    /**\n     * ID for the current visible app which is different for across cached sessions. Used for correlating telemetry data.\n     */\n    appLaunchId?: string;\n  }\n\n  /**\n   * Represents information about the application's host.\n   */\n  export interface AppHostInfo {\n    /**\n     * Identifies which host is running your app\n     */\n    name: HostName;\n\n    /**\n     * The client type on which the host is running\n     */\n    clientType: HostClientType;\n\n    /**\n     * Unique ID for the current Host session for use in correlating telemetry data.\n     */\n    sessionId: string;\n\n    /**\n     * Current ring ID\n     */\n    ringId?: string;\n  }\n\n  /**\n   * Represents Channel information.\n   */\n  export interface ChannelInfo {\n    /**\n     * The Microsoft Teams ID for the channel with which the content is associated.\n     */\n    id: string;\n\n    /**\n     * The name for the channel with which the content is associated.\n     */\n    displayName?: string;\n\n    /**\n     * The relative path to the SharePoint folder associated with the channel.\n     */\n    relativeUrl?: string;\n\n    /**\n     * The type of the channel with which the content is associated.\n     */\n    membershipType?: ChannelType;\n\n    /**\n     * The OneNote section ID that is linked to the channel.\n     */\n    defaultOneNoteSectionId?: string;\n\n    /**\n     * The tenant ID of the team which owns the channel.\n     */\n    ownerTenantId?: string;\n\n    /**\n     * The Microsoft Entra group ID of the team which owns the channel.\n     */\n    ownerGroupId?: string;\n  }\n\n  /**\n   * Represents Chat information.\n   */\n  export interface ChatInfo {\n    /**\n     * The Microsoft Teams ID for the chat with which the content is associated.\n     */\n    id: string;\n  }\n\n  /**\n   * Represents Meeting information.\n   */\n  export interface MeetingInfo {\n    /**\n     * Meeting Id used by tab when running in meeting context\n     */\n    id: string;\n  }\n\n  /**\n   * Represents Page information.\n   */\n  export interface PageInfo {\n    /**\n     * The developer-defined unique ID for the page this content points to.\n     */\n    id: string;\n\n    /**\n     * The context where page url is loaded (content, task, setting, remove, sidePanel)\n     */\n    frameContext: FrameContexts;\n\n    /**\n     * The developer-defined unique ID for the sub-page this content points to.\n     * This field should be used to restore to a specific state within a page,\n     * such as scrolling to or activating a specific piece of content.\n     */\n    subPageId?: string;\n\n    /**\n     * Indication whether the page is in full-screen mode.\n     */\n    isFullScreen?: boolean;\n\n    /**\n     * Indication whether the page is in a pop out window\n     */\n    isMultiWindow?: boolean;\n\n    /**\n     * Indicates whether the page is being loaded in the background as\n     * part of an opt-in performance enhancement.\n     */\n    isBackgroundLoad?: boolean;\n\n    /**\n     * Source origin from where the page is opened\n     */\n    sourceOrigin?: string;\n  }\n\n  /**\n   * Represents Team information.\n   */\n  export interface TeamInfo {\n    /**\n     * The Microsoft Teams ID for the team with which the content is associated.\n     */\n    internalId: string;\n\n    /**\n     * The name for the team with which the content is associated.\n     */\n    displayName?: string;\n\n    /**\n     * The type of the team.\n     */\n    type?: TeamType;\n\n    /**\n     * The Office 365 group ID for the team with which the content is associated.\n     * This field is available only when the identity permission is requested in the manifest.\n     */\n    groupId?: string;\n\n    /**\n     * Indicates whether team is archived.\n     * Apps should use this as a signal to prevent any changes to content associated with archived teams.\n     */\n    isArchived?: boolean;\n\n    /**\n     * Team Template ID if there was a Team Template associated with the creation of the team.\n     */\n    templateId?: string;\n\n    /**\n     * The user's role in the team.\n\n     * Because a malicious party can run your content in a browser, this value should\n     * be used only as a hint as to the user's role, and never as proof of her role.\n     */\n    userRole?: UserTeamRole;\n  }\n\n  /**\n   * Represents User information.\n   */\n  export interface UserInfo {\n    /**\n     * The Microsoft Entra object id of the current user.\n     *\n     * Because a malicious party can run your content in a browser, this value should\n     * be used only as a optimization hint as to who the user is and never as proof of identity.\n     * Specifically, this value should never be used to determine if a user is authorized to access\n     * a resource; access tokens should be used for that.\n     * See {@link authentication.getAuthToken} and {@link authentication.authenticate} for more information on access tokens.\n     *\n     * This field is available only when the identity permission is requested in the manifest.\n     */\n    id: string;\n\n    /**\n     * The address book name of the current user.\n     */\n    displayName?: string;\n\n    /**\n     * Represents whether calling is allowed for the current logged in User\n     */\n    isCallingAllowed?: boolean;\n\n    /**\n     * Represents whether PSTN calling is allowed for the current logged in User\n     */\n    isPSTNCallingAllowed?: boolean;\n\n    /**\n     * The license type for the current user. Possible values are:\n     * \"Unknown\", \"Teacher\", \"Student\", \"Free\", \"SmbBusinessVoice\", \"SmbNonVoice\", \"FrontlineWorker\", \"Anonymous\"\n     */\n    licenseType?: string;\n\n    /**\n     * A value suitable for use when providing a login_hint to Microsoft Entra ID for authentication purposes.\n     * See [Provide optional claims to your app](https://learn.microsoft.com/azure/active-directory/develop/active-directory-optional-claims#v10-and-v20-optional-claims-set)\n     * for more information about the use of login_hint\n     *\n     * Because a malicious party can run your content in a browser, this value should\n     * be used only as a optimization hint as to who the user is and never as proof of identity.\n     * Specifically, this value should never be used to determine if a user is authorized to access\n     * a resource; access tokens should be used for that.\n     * See {@link authentication.getAuthToken} and {@link authentication.authenticate} for more information on access tokens.\n     */\n    loginHint?: string;\n\n    /**\n     * The UPN of the current user. This may be an externally-authenticated UPN (e.g., guest users).\n\n     * Because a malicious party can run your content in a browser, this value should\n     * be used only as a optimization hint as to who the user is and never as proof of identity.\n     * Specifically, this value should never be used to determine if a user is authorized to access\n     * a resource; access tokens should be used for that.\n     * See {@link authentication.getAuthToken} and {@link authentication.authenticate} for more information on access tokens.\n     */\n    userPrincipalName?: string;\n\n    /**\n     * The tenant related info of the current user.\n     */\n    tenant?: TenantInfo;\n  }\n\n  /**\n   * Represents Tenant information.\n   */\n  export interface TenantInfo {\n    /**\n     * The Microsoft Entra tenant ID of the current user.\n\n     * Because a malicious party can run your content in a browser, this value should\n     * be used only as a optimization hint as to who the user is and never as proof of identity.\n     * Specifically, this value should never be used to determine if a user is authorized to access\n     * a resource; access tokens should be used for that.\n     * See {@link authentication.getAuthToken} and {@link authentication.authenticate} for more information on access tokens.\n     */\n    id: string;\n\n    /**\n     * The type of license for the current user's tenant. Possible values are enterprise, free, edu, and unknown.\n     */\n    teamsSku?: string;\n  }\n\n  /** Represents information about a SharePoint site */\n  export interface SharePointSiteInfo {\n    /**\n     * The root SharePoint site associated with the team.\n     */\n    teamSiteUrl?: string;\n\n    /**\n     * The domain of the root SharePoint site associated with the team.\n     */\n    teamSiteDomain?: string;\n\n    /**\n     * The relative path to the SharePoint site associated with the team.\n     */\n    teamSitePath?: string;\n\n    /**\n     * Teamsite ID, aka sharepoint site id.\n     */\n    teamSiteId?: string;\n\n    /**\n     * The SharePoint my site domain associated with the user.\n     */\n    mySiteDomain?: string;\n\n    /**\n     * The SharePoint relative path to the current users mysite\n     */\n    mySitePath?: string;\n  }\n\n  /**\n   * Represents structure of the received context message.\n   */\n  export interface Context {\n    /**\n     * Content Action Info\n     *\n     * @beta\n     */\n    actionInfo?: ActionInfo;\n    /**\n     * Properties about the current session for your app\n     */\n    app: AppInfo;\n\n    /**\n     * Info about the current page context hosting your app\n     */\n    page: PageInfo;\n\n    /**\n     * Info about the currently logged in user running the app.\n     * If the current user is not logged in/authenticated (e.g. a meeting app running for an anonymously-joined partcipant) this will be `undefined`.\n     */\n    user?: UserInfo;\n\n    /**\n     * When running in the context of a Teams channel, provides information about the channel, else `undefined`\n     */\n    channel?: ChannelInfo;\n\n    /**\n     * When running in the context of a Teams chat, provides information about the chat, else `undefined`\n     */\n    chat?: ChatInfo;\n\n    /**\n     * When running in the context of a Teams meeting, provides information about the meeting, else `undefined`\n     */\n    meeting?: MeetingInfo;\n\n    /**\n     * When hosted in SharePoint, this is the [SharePoint PageContext](https://learn.microsoft.com/javascript/api/sp-page-context/pagecontext?view=sp-typescript-latest), else `undefined`\n     */\n    sharepoint?: any;\n\n    /**\n     * When running in Teams for an organization with a tenant, provides information about the SharePoint site associated with the team.\n     * Will be `undefined` when not running in Teams for an organization with a tenant.\n     */\n    sharePointSite?: SharePointSiteInfo;\n\n    /**\n     * When running in Teams, provides information about the Team context in which your app is running.\n     * Will be `undefined` when not running in Teams.\n     */\n    team?: TeamInfo;\n\n    /**\n     * When `processActionCommand` activates a dialog, this dialog should automatically fill in some fields with information. This information comes from M365 and is given to `processActionCommand` as `extractedParameters`.\n     * App developers need to use these `extractedParameters` in their dialog.\n     * They help pre-fill the dialog with necessary information (`dialogParameters`) along with other details.\n     * If there's no key/value pairs passed, the object will be empty in the case\n     */\n    dialogParameters: Record<string, string>;\n  }\n\n  /**\n   * This function is passed to registerOnThemeHandler. It is called every time the user changes their theme.\n   */\n  export type themeHandler = (theme: string) => void;\n\n  /**\n   * Checks whether the Teams client SDK has been initialized.\n   * @returns whether the Teams client SDK has been initialized.\n   */\n  export function isInitialized(): boolean {\n    return GlobalVars.initializeCompleted;\n  }\n\n  /**\n   * Gets the Frame Context that the App is running in. See {@link FrameContexts} for the list of possible values.\n   * @returns the Frame Context.\n   */\n  export function getFrameContext(): FrameContexts | undefined {\n    return GlobalVars.frameContext;\n  }\n\n  function logWhereTeamsJsIsBeingUsed(): void {\n    if (inServerSideRenderingEnvironment()) {\n      return;\n    }\n    const scripts = document.getElementsByTagName('script');\n    // This will always be the current script because browsers load and execute scripts in order.\n    // Whenever a script is executing for the first time it will be the last script in this array.\n    const currentScriptSrc = scripts && scripts[scripts.length - 1] && scripts[scripts.length - 1].src;\n    const scriptUsageWarning =\n      'Today, teamsjs can only be used from a single script or you may see undefined behavior. This log line is used to help detect cases where teamsjs is loaded multiple times -- it is always written. The presence of the log itself does not indicate a multi-load situation, but multiples of these log lines will. If you would like to use teamjs from more than one script at the same time, please open an issue at https://github.com/OfficeDev/microsoft-teams-library-js/issues';\n    if (!currentScriptSrc || currentScriptSrc.length === 0) {\n      appLogger('teamsjs is being used from a script tag embedded directly in your html. %s', scriptUsageWarning);\n    } else {\n      appLogger('teamsjs is being used from %s. %s', currentScriptSrc, scriptUsageWarning);\n    }\n  }\n\n  // This is called right away to make sure that we capture which script is being executed and important stats about the current teamsjs instance\n  appLogger(\n    'teamsjs instance is version %s, starting at %s UTC (%s local)',\n    version,\n    new Date().toISOString(),\n    new Date().toLocaleString(),\n  );\n  logWhereTeamsJsIsBeingUsed();\n\n  /**\n   * Initializes the library.\n   *\n   * @remarks\n   * Initialize must have completed successfully (as determined by the resolved Promise) before any other library calls are made\n   *\n   * @param validMessageOrigins - Optionally specify a list of cross-frame message origins. This parameter is used if you know that your app\n   * will be hosted on a custom domain (i.e., not a standard Microsoft 365 host like Teams, Outlook, etc.) Most apps will never need\n   * to pass a value for this parameter.\n   * Any domains passed in the array must have the https: protocol on the string otherwise they will be ignored. Example: https://www.example.com\n   * @returns Promise that will be fulfilled when initialization has completed, or rejected if the initialization fails or times out\n   */\n  export function initialize(validMessageOrigins?: string[]): Promise<void> {\n    prefetchOriginsFromCDN();\n    return appInitializeHelper(\n      getApiVersionTag(appTelemetryVersionNumber, ApiName.App_Initialize),\n      validMessageOrigins,\n    );\n  }\n\n  /**\n   * @hidden\n   * Undocumented function used to set a mock window for unit tests\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function _initialize(hostWindow: any): void {\n    Communication.currentWindow = hostWindow;\n  }\n\n  /**\n   * @hidden\n   * Undocumented function used to clear state between unit tests\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function _uninitialize(): void {\n    if (!GlobalVars.initializeCalled) {\n      return;\n    }\n\n    Handlers.uninitializeHandlers();\n\n    GlobalVars.initializeCalled = false;\n    GlobalVars.initializeCompleted = false;\n    GlobalVars.initializePromise = undefined;\n    GlobalVars.additionalValidOrigins = [];\n    GlobalVars.frameContext = undefined;\n    GlobalVars.hostClientType = undefined;\n    GlobalVars.isFramelessWindow = false;\n\n    messageChannels.telemetry._clearTelemetryPort();\n    messageChannels.dataLayer._clearDataLayerPort();\n\n    uninitializeCommunication();\n  }\n\n  /**\n   * Retrieves the current context the frame is running in.\n   *\n   * @returns Promise that will resolve with the {@link app.Context} object.\n   */\n  export function getContext(): Promise<app.Context> {\n    return new Promise<LegacyContext>((resolve) => {\n      ensureInitializeCalled();\n      resolve(sendAndUnwrap(getApiVersionTag(appTelemetryVersionNumber, ApiName.App_GetContext), 'getContext'));\n    }).then((legacyContext) => transformLegacyContextToAppContext(legacyContext)); // converts globalcontext to app.context\n  }\n\n  /**\n   * Notifies the frame that app has loaded and to hide the loading indicator if one is shown.\n   */\n  export function notifyAppLoaded(): void {\n    ensureInitializeCalled();\n    notifyAppLoadedHelper(getApiVersionTag(appTelemetryVersionNumber, ApiName.App_NotifyAppLoaded));\n  }\n\n  /**\n   * Notifies the frame that app initialization is successful and is ready for user interaction.\n   */\n  export function notifySuccess(): void {\n    ensureInitializeCalled();\n    notifySuccessHelper(getApiVersionTag(appTelemetryVersionNumber, ApiName.App_NotifySuccess));\n  }\n\n  /**\n   * Notifies the frame that app initialization has failed and to show an error page in its place.\n   *\n   * @param appInitializationFailedRequest - The failure request containing the reason for why the app failed\n   * during initialization as well as an optional message.\n   */\n  export function notifyFailure(appInitializationFailedRequest: IFailedRequest): void {\n    ensureInitializeCalled();\n    notifyFailureHelper(\n      getApiVersionTag(appTelemetryVersionNumber, ApiName.App_NotifyFailure),\n      appInitializationFailedRequest,\n    );\n  }\n\n  /**\n   * Notifies the frame that app initialized with some expected errors.\n   *\n   * @param expectedFailureRequest - The expected failure request containing the reason and an optional message\n   */\n  export function notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void {\n    ensureInitializeCalled();\n    notifyExpectedFailureHelper(\n      getApiVersionTag(appTelemetryVersionNumber, ApiName.App_NotifyExpectedFailure),\n      expectedFailureRequest,\n    );\n  }\n\n  /**\n   * Registers a handler for theme changes.\n   *\n   * @remarks\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when the user changes their theme.\n   */\n  export function registerOnThemeChangeHandler(handler: themeHandler): void {\n    registerOnThemeChangeHandlerHelper(\n      getApiVersionTag(appTelemetryVersionNumber, ApiName.App_RegisterOnThemeChangeHandler),\n      handler,\n    );\n  }\n\n  /**\n   * This function opens deep links to other modules in the host such as chats or channels or\n   * general-purpose links (to external websites). It should not be used for navigating to your\n   * own or other apps.\n   *\n   * @remarks\n   * If you need to navigate to your own or other apps, use:\n   *\n   * - {@link pages.currentApp.navigateToDefaultPage} for navigating to the default page of your own app\n   * - {@link pages.currentApp.navigateTo} for navigating to a section of your own app\n   * - {@link pages.navigateToApp} for navigating to other apps besides your own\n   *\n   * Many areas of functionality previously provided by deep links are now handled by strongly-typed functions in capabilities.\n   * If your app is using a deep link to trigger these specific components, use the strongly-typed alternatives.\n   * For example (this list is not exhaustive):\n   * - To open an app installation dialog, use the {@link appInstallDialog} capability\n   * - To start a call, use the {@link call} capability\n   * - To open a chat, use the {@link chat} capability\n   * - To open a dialog, use the {@link dialog} capability\n   * - To create a new meeting, use the {@link calendar.composeMeeting} function\n   * - To open a Stage View, use the {@link stageView} capability\n   *\n   * In each of these capabilities, you can use the `isSupported()` function to determine if the host supports that capability.\n   * When using a deep link to trigger these components, there's no way to determine whether the host supports it.\n   *\n   * For more information on crafting deep links to the host, see [Configure deep links](https://learn.microsoft.com/microsoftteams/platform/concepts/build-and-test/deep-links)\n   *\n   * @param deepLink The host deep link or external web URL to which to navigate\n   * @returns `Promise` that will be fulfilled when the navigation has initiated. A successful `Promise` resolution\n   * does not necessarily indicate whether the target loaded successfully.\n   */\n  export function openLink(deepLink: string): Promise<void> {\n    return openLinkHelper(getApiVersionTag(appTelemetryVersionNumber, ApiName.App_OpenLink), deepLink);\n  }\n\n  /**\n   * A namespace for enabling the suspension or delayed termination of an app when the user navigates away.\n   * When an app registers for the registerBeforeSuspendOrTerminateHandler, it chooses to delay termination.\n   * When an app registers for both registerBeforeSuspendOrTerminateHandler and registerOnResumeHandler, it chooses the suspension of the app .\n   * Please note that selecting suspension doesn't guarantee prevention of background termination.\n   * The outcome is influenced by factors such as available memory and the number of suspended apps.\n   *\n   * @beta\n   */\n  export namespace lifecycle {\n    /**\n     * Register on resume handler function type\n     *\n     * @param context - Data structure to be used to pass the context to the app.\n     */\n    export type registerOnResumeHandlerFunctionType = (context: ResumeContext) => void;\n\n    /**\n     * Register before suspendOrTerminate handler function type\n     *\n     * @returns void\n     */\n    export type registerBeforeSuspendOrTerminateHandlerFunctionType = () => Promise<void>;\n\n    /**\n     * Registers a handler to be called before the page is suspended or terminated. Once a user navigates away from an app,\n     * the handler will be invoked. App developers can use this handler to save unsaved data, pause sync calls etc.\n     *\n     * @param handler - The handler to invoke before the page is suspended or terminated. When invoked, app can perform tasks like cleanups, logging etc.\n     * Upon returning, the app will be suspended or terminated.\n     *\n     */\n    export function registerBeforeSuspendOrTerminateHandler(\n      handler: registerBeforeSuspendOrTerminateHandlerFunctionType,\n    ): void {\n      if (!handler) {\n        throw new Error('[app.lifecycle.registerBeforeSuspendOrTerminateHandler] Handler cannot be null');\n      }\n      ensureInitialized(runtime);\n      Handlers.registerBeforeSuspendOrTerminateHandler(handler);\n    }\n\n    /**\n     * Registers a handler to be called when the page has been requested to resume from being suspended.\n     *\n     * @param handler - The handler to invoke when the page is requested to be resumed. The app is supposed to navigate to\n     * the appropriate page using the ResumeContext. Once done, the app should then call {@link notifySuccess}.\n     *\n     * @beta\n     */\n    export function registerOnResumeHandler(handler: registerOnResumeHandlerFunctionType): void {\n      if (!handler) {\n        throw new Error('[app.lifecycle.registerOnResumeHandler] Handler cannot be null');\n      }\n      ensureInitialized(runtime);\n      Handlers.registerOnResumeHandler(handler);\n    }\n  }\n}\n\n/**\n * @hidden\n * Transforms the Legacy Context object received from Messages to the structured app.Context object\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction transformLegacyContextToAppContext(legacyContext: LegacyContext): app.Context {\n  const context: app.Context = {\n    actionInfo: legacyContext.actionInfo,\n    app: {\n      locale: legacyContext.locale,\n      sessionId: legacyContext.appSessionId ? legacyContext.appSessionId : '',\n      theme: legacyContext.theme ? legacyContext.theme : 'default',\n      iconPositionVertical: legacyContext.appIconPosition,\n      osLocaleInfo: legacyContext.osLocaleInfo,\n      parentMessageId: legacyContext.parentMessageId,\n      userClickTime: legacyContext.userClickTime,\n      userFileOpenPreference: legacyContext.userFileOpenPreference,\n      host: {\n        name: legacyContext.hostName ? legacyContext.hostName : HostName.teams,\n        clientType: legacyContext.hostClientType ? legacyContext.hostClientType : HostClientType.web,\n        sessionId: legacyContext.sessionId ? legacyContext.sessionId : '',\n        ringId: legacyContext.ringId,\n      },\n      appLaunchId: legacyContext.appLaunchId,\n    },\n    page: {\n      id: legacyContext.entityId,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      frameContext: legacyContext.frameContext ? legacyContext.frameContext : GlobalVars.frameContext,\n      subPageId: legacyContext.subEntityId,\n      isFullScreen: legacyContext.isFullScreen,\n      isMultiWindow: legacyContext.isMultiWindow,\n      isBackgroundLoad: legacyContext.isBackgroundLoad,\n      sourceOrigin: legacyContext.sourceOrigin,\n    },\n    user: {\n      id: legacyContext.userObjectId ?? '',\n      displayName: legacyContext.userDisplayName,\n      isCallingAllowed: legacyContext.isCallingAllowed,\n      isPSTNCallingAllowed: legacyContext.isPSTNCallingAllowed,\n      licenseType: legacyContext.userLicenseType,\n      loginHint: legacyContext.loginHint,\n      userPrincipalName: legacyContext.userPrincipalName,\n      tenant: legacyContext.tid\n        ? {\n            id: legacyContext.tid,\n            teamsSku: legacyContext.tenantSKU,\n          }\n        : undefined,\n    },\n    channel: legacyContext.channelId\n      ? {\n          id: legacyContext.channelId,\n          displayName: legacyContext.channelName,\n          relativeUrl: legacyContext.channelRelativeUrl,\n          membershipType: legacyContext.channelType,\n          defaultOneNoteSectionId: legacyContext.defaultOneNoteSectionId,\n          ownerGroupId: legacyContext.hostTeamGroupId,\n          ownerTenantId: legacyContext.hostTeamTenantId,\n        }\n      : undefined,\n    chat: legacyContext.chatId\n      ? {\n          id: legacyContext.chatId,\n        }\n      : undefined,\n    meeting: legacyContext.meetingId\n      ? {\n          id: legacyContext.meetingId,\n        }\n      : undefined,\n    sharepoint: legacyContext.sharepoint,\n    team: legacyContext.teamId\n      ? {\n          internalId: legacyContext.teamId,\n          displayName: legacyContext.teamName,\n          type: legacyContext.teamType,\n          groupId: legacyContext.groupId,\n          templateId: legacyContext.teamTemplateId,\n          isArchived: legacyContext.isTeamArchived,\n          userRole: legacyContext.userTeamRole,\n        }\n      : undefined,\n    sharePointSite:\n      legacyContext.teamSiteUrl ||\n      legacyContext.teamSiteDomain ||\n      legacyContext.teamSitePath ||\n      legacyContext.mySitePath ||\n      legacyContext.mySiteDomain\n        ? {\n            teamSiteUrl: legacyContext.teamSiteUrl,\n            teamSiteDomain: legacyContext.teamSiteDomain,\n            teamSitePath: legacyContext.teamSitePath,\n            teamSiteId: legacyContext.teamSiteId,\n            mySitePath: legacyContext.mySitePath,\n            mySiteDomain: legacyContext.mySiteDomain,\n          }\n        : undefined,\n    dialogParameters: legacyContext.dialogParameters || {},\n  };\n\n  return context;\n}\n","import {\n  Communication,\n  sendAndHandleSdkError,\n  sendAndHandleStatusAndReason,\n  sendAndHandleStatusAndReasonWithDefaultError,\n  sendAndUnwrap,\n  sendMessageEventToChild,\n  sendMessageToParent,\n} from '../internal/communication';\nimport { registerHandler, registerHandlerHelper } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { createTeamsAppLink } from '../internal/utils';\nimport { prefetchOriginsFromCDN } from '../internal/validOrigins';\nimport { AppId } from '../public/appId';\nimport { appInitializeHelper } from './app';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { FrameInfo, ShareDeepLinkParameters, TabInformation, TabInstance, TabInstanceParameters } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst pagesTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport function navigateCrossDomainHelper(apiVersionTag: string, url: string): Promise<void> {\n  return new Promise<void>((resolve) => {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.settings,\n      FrameContexts.remove,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n    if (!pages.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const errorMessage =\n      'Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.';\n    resolve(sendAndHandleStatusAndReasonWithDefaultError(apiVersionTag, 'navigateCrossDomain', errorMessage, url));\n  });\n}\n\nexport function backStackNavigateBackHelper(apiVersionTag: string): Promise<void> {\n  return new Promise<void>((resolve) => {\n    ensureInitialized(runtime);\n    if (!pages.backStack.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const errorMessage = 'Back navigation is not supported in the current client or context.';\n    resolve(sendAndHandleStatusAndReasonWithDefaultError(apiVersionTag, 'navigateBack', errorMessage));\n  });\n}\n\nexport function tabsNavigateToTabHelper(apiVersionTag: string, tabInstance: TabInstance): Promise<void> {\n  return new Promise<void>((resolve) => {\n    ensureInitialized(runtime);\n    if (!pages.tabs.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const errorMessage = 'Invalid internalTabInstanceId and/or channelId were/was provided';\n    resolve(sendAndHandleStatusAndReasonWithDefaultError(apiVersionTag, 'navigateToTab', errorMessage, tabInstance));\n  });\n}\n/**\n * @hidden\n */\nexport function returnFocusHelper(apiVersionTag: string, navigateForward?: boolean): void {\n  ensureInitialized(runtime);\n  if (!pages.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  sendMessageToParent(apiVersionTag, 'returnFocus', [navigateForward]);\n}\n\nexport function getTabInstancesHelper(\n  apiVersionTag: string,\n  tabInstanceParameters?: TabInstanceParameters,\n): Promise<TabInformation> {\n  return new Promise<TabInformation>((resolve) => {\n    ensureInitialized(runtime);\n    if (!pages.tabs.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n    resolve(sendAndUnwrap(apiVersionTag, 'getTabInstances', tabInstanceParameters));\n  });\n}\n\nexport function getMruTabInstancesHelper(\n  apiVersionTag: string,\n  tabInstanceParameters?: TabInstanceParameters,\n): Promise<TabInformation> {\n  return new Promise<TabInformation>((resolve) => {\n    ensureInitialized(runtime);\n    if (!pages.tabs.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n    resolve(sendAndUnwrap(apiVersionTag, 'getMruTabInstances', tabInstanceParameters));\n  });\n}\n\nexport function shareDeepLinkHelper(apiVersionTag: string, deepLinkParameters: ShareDeepLinkParameters): void {\n  ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n  if (!pages.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  sendMessageToParent(apiVersionTag, 'shareDeepLink', [\n    deepLinkParameters.subPageId,\n    deepLinkParameters.subPageLabel,\n    deepLinkParameters.subPageWebUrl,\n  ]);\n}\n\nexport function setCurrentFrameHelper(apiVersionTag: string, frameInfo: FrameInfo): void {\n  ensureInitialized(runtime, FrameContexts.content);\n  if (!pages.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  sendMessageToParent(apiVersionTag, 'setFrameContext', [frameInfo]);\n}\n\nexport function configSetValidityStateHelper(apiVersionTag: string, validityState: boolean): void {\n  ensureInitialized(runtime, FrameContexts.settings, FrameContexts.remove);\n  if (!pages.config.isSupported()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  sendMessageToParent(apiVersionTag, 'settings.setValidityState', [validityState]);\n}\n\nexport function getConfigHelper(apiVersionTag: string): Promise<pages.InstanceConfig> {\n  return new Promise<pages.InstanceConfig>((resolve) => {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.settings,\n      FrameContexts.remove,\n      FrameContexts.sidePanel,\n    );\n    if (!pages.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    resolve(sendAndUnwrap(apiVersionTag, 'settings.getSettings'));\n  });\n}\n\nexport function configSetConfigHelper(apiVersionTag: string, instanceConfig: pages.InstanceConfig): Promise<void> {\n  return new Promise<void>((resolve) => {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.settings, FrameContexts.sidePanel);\n    if (!pages.config.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    resolve(sendAndHandleStatusAndReason(apiVersionTag, 'settings.setSettings', instanceConfig));\n  });\n}\n\n/**\n * Navigation-specific part of the SDK.\n */\nexport namespace pages {\n  /** Callback function */\n  export type handlerFunctionType = () => void;\n  /** Full screen function */\n  export type fullScreenChangeFunctionType = (isFullScreen: boolean) => void;\n  /** Back button handler function */\n  export type backButtonHandlerFunctionType = () => boolean;\n  /** Save event function */\n  export type saveEventType = (evt: pages.config.SaveEvent) => void;\n  /** Remove event function */\n  export type removeEventType = (evt: pages.config.RemoveEvent) => void;\n\n  /**\n   * @hidden\n   * List of enter focus action items\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum EnterFocusType {\n    /**\n     * Determines the previous direction to focus in app when hot keys entered.\n     */\n    PreviousLandmark = 0,\n    /**\n     * Determines the next direction to focus in app when hot keys entered.\n     */\n    NextLandmark = 1,\n    /**\n     * Determines if the focus should go to the particular content of the app.\n     * Read - Focus should go to the content of the app.\n     */\n    Read = 2,\n    /**\n     * Determines if the focus should go to the particular content of the app.\n     * Compose - Focus should go to the compose area (such as textbox) of the app.\n     */\n    Compose = 3,\n  }\n\n  /**\n   * Return focus action items\n   */\n  export enum ReturnFocusType {\n    /**\n     * Determines the direction to focus in host for previous landmark.\n     */\n    PreviousLandmark = 0,\n    /**\n     * Determines the direction to focus in host for next landmark.\n     */\n    NextLandmark = 1,\n    /**\n     * Determines if the focus should go to the host's activity feed\n     */\n    GoToActivityFeed = 2,\n  }\n\n  /**\n   * @deprecated\n   * Return focus to the host. Will move focus forward or backward based on where the application container falls in\n   * the F6/tab order in the host.\n   * On mobile hosts or hosts where there is no keyboard interaction or UI notion of \"focus\" this function has no\n   * effect and will be a no-op when called.\n   * @param navigateForward - Determines the direction to focus in host.\n   */\n  export function returnFocus(navigateForward?: boolean): void;\n\n  /**\n   * Return focus to the host. Will attempt to send focus to the appropriate part of the host (as specified by returnFocusType) based on where the application container falls in\n   * the F6/tab order in the host.\n   * On mobile hosts or hosts where there is no keyboard interaction or UI notion of \"focus\" this function has no\n   * effect and will be a no-op when called.\n   * @param returnFocusType - Determines the type of focus to return to in the host.\n   */\n  export function returnFocus(returnFocusType: pages.ReturnFocusType): void;\n\n  /**\n   * @hidden\n   */\n  export function returnFocus(arg1?: boolean | pages.ReturnFocusType): void {\n    const apiVersionTag = getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_ReturnFocus);\n    ensureInitialized(runtime);\n    if (!pages.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (arg1 === undefined) {\n      sendMessageToParent(apiVersionTag, 'returnFocus', [false]);\n    }\n    if (typeof arg1 === 'boolean') {\n      sendMessageToParent(apiVersionTag, 'returnFocus', [arg1]);\n    } else {\n      switch (arg1) {\n        case pages.ReturnFocusType.PreviousLandmark:\n        case pages.ReturnFocusType.GoToActivityFeed:\n          sendMessageToParent(apiVersionTag, 'returnFocus', [false, arg1]);\n          break;\n        case pages.ReturnFocusType.NextLandmark:\n          sendMessageToParent(apiVersionTag, 'returnFocus', [true, arg1]);\n          break;\n      }\n    }\n  }\n\n  /**\n   * @hidden\n   *\n   * Registers a handler for specifying focus when it passes from the host to the application.\n   * On mobile hosts or hosts where there is no UI notion of \"focus\" the handler registered with\n   * this function will never be called.\n   *\n   * @param handler - The handler for placing focus within the application.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerFocusEnterHandler(\n    handler: (navigateForward: boolean, enterFocusType?: EnterFocusType) => void,\n  ): void {\n    registerHandlerHelper(\n      getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_RegisterFocusEnterHandler),\n      'focusEnter',\n      handler,\n      [],\n      () => {\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n      },\n    );\n  }\n\n  /**\n   * Sets/Updates the current frame with new information\n   *\n   * @param frameInfo - Frame information containing the URL used in the iframe on reload and the URL for when the\n   * user clicks 'Go To Website'\n   */\n  export function setCurrentFrame(frameInfo: FrameInfo): void {\n    setCurrentFrameHelper(getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_SetCurrentFrame), frameInfo);\n  }\n\n  /**\n   * Initializes the library with context information for the frame\n   *\n   * @param frameInfo - Frame information containing the URL used in the iframe on reload and the URL for when the\n   *  user clicks 'Go To Website'\n   * @param callback - An optional callback that is executed once the application has finished initialization.\n   * @param validMessageOrigins - An optional list of cross-frame message origins. They must have\n   * https: protocol otherwise they will be ignored. Example: https:www.example.com\n   */\n  export function initializeWithFrameContext(\n    frameInfo: FrameInfo,\n    callback?: handlerFunctionType,\n    validMessageOrigins?: string[],\n  ): void {\n    prefetchOriginsFromCDN();\n    appInitializeHelper(\n      getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_InitializeWithFrameContext),\n      validMessageOrigins,\n    ).then(() => callback && callback());\n    setCurrentFrame(frameInfo);\n  }\n\n  /**\n   * Defines the configuration of the current or desired instance\n   */\n  export interface InstanceConfig {\n    /**\n     * A suggested display name for the new content.\n     * In the settings for an existing instance being updated, this call has no effect.\n     */\n    suggestedDisplayName?: string;\n    /**\n     * Sets the URL to use for the content of this instance.\n     */\n    contentUrl: string;\n    /**\n     * Sets the URL for the removal configuration experience.\n     */\n    removeUrl?: string;\n    /**\n     * Sets the URL to use for the external link to view the underlying resource in a browser.\n     */\n    websiteUrl?: string;\n    /**\n     * The developer-defined unique ID for the entity to which this content points.\n     */\n    entityId?: string;\n  }\n\n  /**\n   * Gets the config for the current instance.\n   * @returns Promise that resolves with the {@link InstanceConfig} object.\n   */\n  export function getConfig(): Promise<InstanceConfig> {\n    return getConfigHelper(getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_GetConfig));\n  }\n\n  /**\n   * @deprecated\n   * As of 2.0.0, this API is deprecated and can be replaced by the standard JavaScript\n   * API, window.location.href, when navigating the app to a new cross-domain URL. Any URL\n   * that is redirected to must be listed in the validDomains block of the manifest. Please\n   * remove any calls to this API.\n   * @param url - The URL to navigate the frame to.\n   * @returns Promise that resolves when the navigation has completed.\n   */\n  export function navigateCrossDomain(url: string): Promise<void> {\n    return navigateCrossDomainHelper(\n      getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_NavigateCrossDomain),\n      url,\n    );\n  }\n\n  /**\n   * Used to navigate to apps other than your own.\n   *\n   * If you are looking to navigate within your own app, use {@link pages.currentApp.navigateToDefaultPage} or {@link pages.currentApp.navigateTo}\n   *\n   * @param params Parameters for the navigation\n   * @returns a `Promise` that will resolve if the navigation was successful or reject if it was not\n   * @throws `Error` if the app ID is not valid or `params.webUrl` is defined but not a valid URL\n   */\n  export function navigateToApp(params: AppNavigationParameters | NavigateToAppParams): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(\n        runtime,\n        FrameContexts.content,\n        FrameContexts.sidePanel,\n        FrameContexts.settings,\n        FrameContexts.task,\n        FrameContexts.stage,\n        FrameContexts.meetingStage,\n      );\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      const apiVersionTag: string = getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_NavigateToApp);\n\n      if (runtime.isLegacyTeams) {\n        const typeSafeParameters: AppNavigationParameters = !isAppNavigationParametersObject(params)\n          ? convertNavigateToAppParamsToAppNavigationParameters(params)\n          : params;\n        resolve(sendAndHandleStatusAndReason(apiVersionTag, 'executeDeepLink', createTeamsAppLink(typeSafeParameters)));\n      } else {\n        const serializedParameters: NavigateToAppParams = isAppNavigationParametersObject(params)\n          ? convertAppNavigationParametersToNavigateToAppParams(params)\n          : params;\n        resolve(sendAndHandleStatusAndReason(apiVersionTag, 'pages.navigateToApp', serializedParameters));\n      }\n    });\n  }\n\n  /**\n   * Shares a deep link that a user can use to navigate back to a specific state in this page.\n   * Please note that this method does not yet work on mobile hosts.\n   *\n   * @param deepLinkParameters - ID and label for the link and fallback URL.\n   */\n  export function shareDeepLink(deepLinkParameters: ShareDeepLinkParameters): void {\n    return shareDeepLinkHelper(\n      getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_ShareDeepLink),\n      deepLinkParameters,\n    );\n  }\n\n  /**\n   * Registers a handler for changes from or to full-screen view for a tab.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * On hosts where there is no support for making an app full screen, the handler registered\n   * with this function will never be called.\n   * @param handler - The handler to invoke when the user toggles full-screen view for a tab.\n   */\n  export function registerFullScreenHandler(handler: fullScreenChangeFunctionType): void {\n    registerHandlerHelper(\n      getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_RegisterFullScreenHandler),\n      'fullScreenChange',\n      handler,\n      [],\n      () => {\n        if (!isNullOrUndefined(handler) && !isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n      },\n    );\n  }\n\n  /**\n   * Checks if the pages capability is supported by the host\n   * @returns boolean to represent whether the appEntity capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.pages ? true : false;\n  }\n\n  /**\n   * @deprecated\n   * This interface has been deprecated in favor of a more type-safe interface using {@link pages.AppNavigationParameters}\n   *\n   * Parameters for the {@link pages.navigateToApp} function\n   */\n  export interface NavigateToAppParams {\n    /**\n     * ID of the app to navigate to\n     */\n    appId: string;\n\n    /**\n     * Developer-defined ID of the page to navigate to within the app (formerly called `entityId`)\n     */\n    pageId: string;\n\n    /**\n     * Fallback URL to open if the navigation cannot be completed within the host (e.g. if the target app is not installed)\n     */\n    webUrl?: string;\n\n    /**\n     * Developer-defined ID describing the content to navigate to within the page. This ID is passed to the application\n     * via the {@link app.PageInfo.subPageId} property on the {@link app.Context} object (retrieved by calling {@link app.getContext})\n     */\n    subPageId?: string;\n\n    /**\n     * For apps installed as a channel tab, this ID can be supplied to indicate in which Teams channel the app should be opened\n     */\n    channelId?: string;\n\n    /**\n   * Optional ID of the chat or meeting where the app should be opened\n\n   */\n    chatId?: string;\n  }\n\n  /**\n   * Type-safer version of parameters for the {@link pages.navigateToApp} function\n   */\n  export interface AppNavigationParameters {\n    /**\n     * ID of the app to navigate to\n     */\n    appId: AppId;\n\n    /**\n     * Developer-defined ID of the page to navigate to within the app (formerly called `entityId`)\n     */\n    pageId: string;\n\n    /**\n     * Fallback URL to open if the navigation cannot be completed within the host (e.g., if the target app is not installed)\n     */\n    webUrl?: URL;\n\n    /**\n     * Developer-defined ID describing the content to navigate to within the page. This ID is passed to the application\n     * via the {@link app.PageInfo.subPageId} property on the {@link app.Context} object (retrieved by calling {@link app.getContext})\n     */\n    subPageId?: string;\n\n    /**\n     * For apps installed as a channel tab, this ID can be supplied to indicate in which Teams channel the app should be opened\n     * This property has no effect in hosts where apps cannot be opened in channels\n     */\n    channelId?: string;\n\n    /**\n     * Optional ID of the chat or meeting where the app should be opened\n     * This property has no effect in hosts where apps cannot be opened in chats or meetings\n     */\n    chatId?: string;\n  }\n\n  /**\n   * Provides APIs for querying and navigating between contextual tabs of an application. Unlike personal tabs,\n   * contextual tabs are pages associated with a specific context, such as channel or chat.\n   */\n  export namespace tabs {\n    /**\n     * Navigates the hosted application to the specified tab instance.\n     * @param tabInstance - The destination tab instance.\n     * @returns Promise that resolves when the navigation has completed.\n     */\n    export function navigateToTab(tabInstance: TabInstance): Promise<void> {\n      return tabsNavigateToTabHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Tabs_NavigateToTab),\n        tabInstance,\n      );\n    }\n    /**\n     * Retrieves application tabs for the current user.\n     * If no TabInstanceParameters are passed, the application defaults to favorite teams and favorite channels.\n     * @param tabInstanceParameters - An optional set of flags that specify whether to scope call to favorite teams or channels.\n     * @returns Promise that resolves with the {@link TabInformation}. Contains information for the user's tabs that are owned by this application {@link TabInstance}.\n     */\n    export function getTabInstances(tabInstanceParameters?: TabInstanceParameters): Promise<TabInformation> {\n      return getTabInstancesHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Tabs_GetTabInstances),\n        tabInstanceParameters,\n      );\n    }\n\n    /**\n     * Retrieves the most recently used application tabs for the current user.\n     * @param tabInstanceParameters - An optional set of flags. Note this is currently ignored and kept for future use.\n     * @returns Promise that resolves with the {@link TabInformation}. Contains information for the users' most recently used tabs {@link TabInstance}.\n     */\n    export function getMruTabInstances(tabInstanceParameters?: TabInstanceParameters): Promise<TabInformation> {\n      return getMruTabInstancesHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Tabs_GetMruTabInstances),\n        tabInstanceParameters,\n      );\n    }\n\n    /**\n     * Checks if the pages.tab capability is supported by the host\n     * @returns boolean to represent whether the pages.tab capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.tabs\n          ? true\n          : false\n        : false;\n    }\n  }\n  /**\n   * Provides APIs to interact with the configuration-specific part of the SDK.\n   * This object is usable only on the configuration frame.\n   */\n  export namespace config {\n    let saveHandler: undefined | ((evt: SaveEvent) => void);\n    let removeHandler: undefined | ((evt: RemoveEvent) => void);\n\n    /**\n     * @hidden\n     * Hide from docs because this function is only used during initialization\n     *\n     * Adds register handlers for settings.save and settings.remove upon initialization. Function is called in {@link app.initializeHelper}\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function initialize(): void {\n      registerHandler(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_RegisterSettingsSaveHandler),\n        'settings.save',\n        handleSave,\n        false,\n      );\n      registerHandler(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_RegisterSettingsRemoveHandler),\n        'settings.remove',\n        handleRemove,\n        false,\n      );\n    }\n\n    /**\n     * Sets the validity state for the configuration.\n     * The initial value is false, so the user cannot save the configuration until this is called with true.\n     * @param validityState - Indicates whether the save or remove button is enabled for the user.\n     */\n    export function setValidityState(validityState: boolean): void {\n      return configSetValidityStateHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_SetValidityState),\n        validityState,\n      );\n    }\n\n    /**\n     * Sets the configuration for the current instance.\n     * This is an asynchronous operation; calls to getConfig are not guaranteed to reflect the changed state.\n     * @param instanceConfig - The desired configuration for this instance.\n     * @returns Promise that resolves when the operation has completed.\n     */\n    export function setConfig(instanceConfig: InstanceConfig): Promise<void> {\n      return configSetConfigHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_SetConfig),\n        instanceConfig,\n      );\n    }\n\n    /**\n     * Registers a handler for when the user attempts to save the configuration. This handler should be used\n     * to create or update the underlying resource powering the content.\n     * The object passed to the handler must be used to notify whether to proceed with the save.\n     * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n     * @param handler - The handler to invoke when the user selects the Save button.\n     */\n    export function registerOnSaveHandler(handler: saveEventType): void {\n      registerOnSaveHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_RegisterOnSaveHandler),\n        handler,\n        () => {\n          if (!isNullOrUndefined(handler) && !isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * @hidden\n     * Undocumented helper function with shared code between deprecated version and current version of the registerOnSaveHandler API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     *\n     * @param apiVersionTag - The API version tag, which is used for telemetry, composed by API version number and source API name.\n     * @param handler - The handler to invoke when the user selects the Save button.\n     * @param versionSpecificHelper - The helper function containing logic pertaining to a specific version of the API.\n     */\n    export function registerOnSaveHandlerHelper(\n      apiVersionTag: string,\n      handler: (evt: SaveEvent) => void,\n      versionSpecificHelper?: () => void,\n    ): void {\n      // allow for registration cleanup even when not finished initializing\n      !isNullOrUndefined(handler) && ensureInitialized(runtime, FrameContexts.settings);\n      if (versionSpecificHelper) {\n        versionSpecificHelper();\n      }\n      saveHandler = handler;\n      !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['save']);\n    }\n\n    /**\n     * Registers a handler for user attempts to remove content. This handler should be used\n     * to remove the underlying resource powering the content.\n     * The object passed to the handler must be used to indicate whether to proceed with the removal.\n     * Only one handler may be registered at a time. Subsequent registrations will override the first.\n     * @param handler - The handler to invoke when the user selects the Remove button.\n     */\n    export function registerOnRemoveHandler(handler: removeEventType): void {\n      registerOnRemoveHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_RegisterOnRemoveHandler),\n        handler,\n        () => {\n          if (!isNullOrUndefined(handler) && !isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * @hidden\n     * Undocumented helper function with shared code between deprecated version and current version of the registerOnRemoveHandler API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     *\n     * @param apiVersionTag - The API version tag, which is used for telemetry, composed by API version number and source API name.\n     * @param handler - The handler to invoke when the user selects the Remove button.\n     * @param versionSpecificHelper - The helper function containing logic pertaining to a specific version of the API.\n     */\n    export function registerOnRemoveHandlerHelper(\n      apiVersionTag: string,\n      handler: (evt: RemoveEvent) => void,\n      versionSpecificHelper?: () => void,\n    ): void {\n      // allow for registration cleanup even when not finished initializing\n      !isNullOrUndefined(handler) && ensureInitialized(runtime, FrameContexts.remove, FrameContexts.settings);\n      if (versionSpecificHelper) {\n        versionSpecificHelper();\n      }\n      removeHandler = handler;\n      !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['remove']);\n    }\n\n    function handleSave(result?: SaveParameters): void {\n      const saveEventType = new SaveEventImpl(result);\n      if (saveHandler) {\n        saveHandler(saveEventType);\n      } else if (Communication.childWindow) {\n        sendMessageEventToChild('settings.save', [result]);\n      } else {\n        // If no handler is registered, we assume success.\n        saveEventType.notifySuccess();\n      }\n    }\n\n    /**\n     * Registers a handler for when the tab configuration is changed by the user\n     * @param handler - The handler to invoke when the user clicks on Settings.\n     */\n    export function registerChangeConfigHandler(handler: handlerFunctionType): void {\n      registerHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_Config_RegisterChangeConfigHandler),\n        'changeSettings',\n        handler,\n        [FrameContexts.content],\n        () => {\n          if (!isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * Describes the results of the settings.save event. Includes result, notifySuccess, and notifyFailure\n     * to indicate the return object (result) and the status of whether the settings.save call succeeded or not and why.\n     */\n    export interface SaveEvent {\n      /**\n       * Object containing properties passed as arguments to the settings.save event.\n       */\n      result: SaveParameters;\n      /**\n       * Indicates that the underlying resource has been created and the config can be saved.\n       */\n      notifySuccess(): void;\n      /**\n       * Indicates that creation of the underlying resource failed and that the config cannot be saved.\n       * @param reason - Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\n       */\n      notifyFailure(reason?: string): void;\n    }\n\n    /**\n     * Describes the results of the settings.remove event. Includes notifySuccess, and notifyFailure\n     * to indicate the status of whether the settings.save call succeeded or not and why.\n     */\n    export interface RemoveEvent {\n      /**\n       * Indicates that the underlying resource has been removed and the content can be removed.\n       */\n      notifySuccess(): void;\n      /**\n       * Indicates that removal of the underlying resource failed and that the content cannot be removed.\n       * @param reason - Specifies a reason for the failure. If provided, this string is displayed to the user; otherwise a generic error is displayed.\n       */\n      notifyFailure(reason?: string): void;\n    }\n\n    /**\n     * Parameters used in the settings.save event\n     */\n    export interface SaveParameters {\n      /**\n       * Connector's webhook Url returned as arguments to settings.save event as part of user clicking on Save\n       */\n      webhookUrl?: string;\n    }\n\n    /**\n     * @hidden\n     * Hide from docs, since this class is not directly used.\n     */\n    class SaveEventImpl implements SaveEvent {\n      public notified = false;\n      public result: SaveParameters;\n      public constructor(result?: SaveParameters) {\n        this.result = result ? result : {};\n      }\n      public notifySuccess(): void {\n        this.ensureNotNotified();\n        sendMessageToParent(\n          getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_SaveEvent_NotifySuccess),\n          'settings.save.success',\n        );\n        this.notified = true;\n      }\n      public notifyFailure(reason?: string): void {\n        this.ensureNotNotified();\n        sendMessageToParent(\n          getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_SaveEvent_NotifyFailure),\n          'settings.save.failure',\n          [reason],\n        );\n        this.notified = true;\n      }\n      private ensureNotNotified(): void {\n        if (this.notified) {\n          throw new Error('The SaveEvent may only notify success or failure once.');\n        }\n      }\n    }\n\n    function handleRemove(): void {\n      const removeEventType = new RemoveEventImpl();\n      if (removeHandler) {\n        removeHandler(removeEventType);\n      } else if (Communication.childWindow) {\n        sendMessageEventToChild('settings.remove', []);\n      } else {\n        // If no handler is registered, we assume success.\n        removeEventType.notifySuccess();\n      }\n    }\n\n    /**\n     * @hidden\n     * Hide from docs, since this class is not directly used.\n     */\n    class RemoveEventImpl implements RemoveEvent {\n      public notified = false;\n\n      public notifySuccess(): void {\n        this.ensureNotNotified();\n        sendMessageToParent(\n          getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_RemoveEvent_NotifySuccess),\n          'settings.remove.success',\n        );\n        this.notified = true;\n      }\n\n      public notifyFailure(reason?: string): void {\n        this.ensureNotNotified();\n        sendMessageToParent(\n          getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_RemoveEvent_NotifyFailure),\n          'settings.remove.failure',\n          [reason],\n        );\n        this.notified = true;\n      }\n\n      private ensureNotNotified(): void {\n        if (this.notified) {\n          throw new Error('The removeEventType may only notify success or failure once.');\n        }\n      }\n    }\n\n    /**\n     * Checks if the pages.config capability is supported by the host\n     * @returns boolean to represent whether the pages.config capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.config\n          ? true\n          : false\n        : false;\n    }\n  }\n\n  /**\n   * Provides APIs for handling the user's navigational history.\n   */\n  export namespace backStack {\n    let backButtonPressHandler: (() => boolean) | undefined;\n\n    /**\n     * @hidden\n     * Register backButtonPress handler.\n     *\n     * @internal\n     * Limited to Microsoft-internal use.\n     */\n    export function _initialize(): void {\n      registerHandler(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_BackStack_RegisterBackButtonPressHandler),\n        'backButtonPress',\n        handleBackButtonPress,\n        false,\n      );\n    }\n\n    /**\n     * Navigates back in the hosted application. See {@link pages.backStack.registerBackButtonHandler} for notes on usage.\n     * @returns Promise that resolves when the navigation has completed.\n     */\n    export function navigateBack(): Promise<void> {\n      return backStackNavigateBackHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_BackStack_NavigateBack),\n      );\n    }\n\n    /**\n     * Registers a handler for user presses of the host client's back button. Experiences that maintain an internal\n     * navigation stack should use this handler to navigate the user back within their frame. If an application finds\n     * that after running its back button handler it cannot handle the event it should call the navigateBack\n     * method to ask the host client to handle it instead.\n     * @param handler - The handler to invoke when the user presses the host client's back button.\n     */\n    export function registerBackButtonHandler(handler: backButtonHandlerFunctionType): void {\n      registerBackButtonHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_BackStack_RegisterBackButtonHandler),\n        handler,\n        () => {\n          if (!isNullOrUndefined(handler) && !isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * @hidden\n     * Undocumented helper function with shared code between deprecated version and current version of the registerBackButtonHandler API.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     * @param apiVersionTag - The tag indicating API version number with name\n     * @param handler - The handler to invoke when the user presses the host client's back button.\n     * @param versionSpecificHelper - The helper function containing logic pertaining to a specific version of the API.\n     */\n    export function registerBackButtonHandlerHelper(\n      apiVersionTag: string,\n      handler: () => boolean,\n      versionSpecificHelper?: () => void,\n    ): void {\n      // allow for registration cleanup even when not finished initializing\n      !isNullOrUndefined(handler) && ensureInitialized(runtime);\n      if (versionSpecificHelper) {\n        versionSpecificHelper();\n      }\n      backButtonPressHandler = handler;\n      !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['backButton']);\n    }\n\n    function handleBackButtonPress(): void {\n      if (!backButtonPressHandler || !backButtonPressHandler()) {\n        if (Communication.childWindow) {\n          // If the current window did not handle it let the child window\n          sendMessageEventToChild('backButtonPress', []);\n        } else {\n          navigateBack();\n        }\n      }\n    }\n\n    /**\n     * Checks if the pages.backStack capability is supported by the host\n     * @returns boolean to represent whether the pages.backStack capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.backStack\n          ? true\n          : false\n        : false;\n    }\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   * Provides APIs to interact with the full-trust part of the SDK. Limited to 1P applications\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export namespace fullTrust {\n    /**\n     * @hidden\n     * Hide from docs\n     * ------\n     * Place the tab into full-screen mode.\n     *\n     */\n    export function enterFullscreen(): void {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      sendMessageToParent(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_FullTrust_EnterFullscreen),\n        'enterFullscreen',\n        [],\n      );\n    }\n\n    /**\n     * @hidden\n     * Hide from docs\n     * ------\n     * Reverts the tab into normal-screen mode.\n     */\n    export function exitFullscreen(): void {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      sendMessageToParent(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_FullTrust_ExitFullscreen),\n        'exitFullscreen',\n        [],\n      );\n    }\n    /**\n     * @hidden\n     *\n     * Checks if the pages.fullTrust capability is supported by the host\n     * @returns boolean to represent whether the pages.fullTrust capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.fullTrust\n          ? true\n          : false\n        : false;\n    }\n  }\n\n  /**\n   * Provides APIs to interact with the app button part of the SDK.\n   */\n  export namespace appButton {\n    /**\n     * Registers a handler for clicking the app button.\n     * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n     * @param handler - The handler to invoke when the personal app button is clicked in the app bar.\n     */\n    export function onClick(handler: handlerFunctionType): void {\n      registerHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_AppButton_OnClick),\n        'appButtonClick',\n        handler,\n        [FrameContexts.content],\n        () => {\n          if (!isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * Registers a handler for entering hover of the app button.\n     * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n     * @param handler - The handler to invoke when entering hover of the personal app button in the app bar.\n     */\n    export function onHoverEnter(handler: handlerFunctionType): void {\n      registerHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_AppButton_OnHoverEnter),\n        'appButtonHoverEnter',\n        handler,\n        [FrameContexts.content],\n        () => {\n          if (!isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * Registers a handler for exiting hover of the app button.\n     * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n     * @param handler - The handler to invoke when exiting hover of the personal app button in the app bar.\n     */\n    export function onHoverLeave(handler: handlerFunctionType): void {\n      registerHandlerHelper(\n        getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_AppButton_OnHoverLeave),\n        'appButtonHoverLeave',\n        handler,\n        [FrameContexts.content],\n        () => {\n          if (!isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n        },\n      );\n    }\n\n    /**\n     * Checks if pages.appButton capability is supported by the host\n     * @returns boolean to represent whether the pages.appButton capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.appButton\n          ? true\n          : false\n        : false;\n    }\n  }\n\n  /**\n   * Provides functions for navigating within your own app\n   *\n   * @remarks\n   * If you are looking to navigate to a different app, use {@link pages.navigateToApp}.\n   */\n  export namespace currentApp {\n    /**\n     * Parameters provided to the {@link pages.currentApp.navigateTo} function\n     */\n    export interface NavigateWithinAppParams {\n      /**\n       * The developer-defined unique ID for the page defined in the manifest or when first configuring\n       * the page. (Known as {@linkcode Context.entityId} prior to TeamsJS v2.0.0)\n       */\n      pageId: string;\n\n      /**\n       * Optional developer-defined unique ID describing the content to navigate to within the page. This\n       * can be retrieved from the Context object {@link app.PageInfo.subPageId | app.Context.page.subPageId}\n       */\n      subPageId?: string;\n    }\n\n    /**\n     * Navigate within the currently running app\n     *\n     * @remarks\n     * If you are looking to navigate to a different app, use {@link pages.navigateToApp}.\n     *\n     * @param params Parameters for the navigation\n     * @returns `Promise` that will resolve if the navigation was successful and reject if not\n     */\n    export function navigateTo(params: NavigateWithinAppParams): Promise<void> {\n      return new Promise<void>((resolve) => {\n        ensureInitialized(\n          runtime,\n          FrameContexts.content,\n          FrameContexts.sidePanel,\n          FrameContexts.settings,\n          FrameContexts.task,\n          FrameContexts.stage,\n          FrameContexts.meetingStage,\n        );\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n        resolve(\n          sendAndHandleSdkError(\n            getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_CurrentApp_NavigateTo),\n            'pages.currentApp.navigateTo',\n            params,\n          ),\n        );\n      });\n    }\n\n    /**\n     * Navigate to the currently running app's first static page defined in the application\n     * manifest.\n     *\n     * @returns `Promise` that will resolve if the navigation was successful and reject if not\n     */\n    export function navigateToDefaultPage(): Promise<void> {\n      return new Promise<void>((resolve) => {\n        ensureInitialized(\n          runtime,\n          FrameContexts.content,\n          FrameContexts.sidePanel,\n          FrameContexts.settings,\n          FrameContexts.task,\n          FrameContexts.stage,\n          FrameContexts.meetingStage,\n        );\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n        resolve(\n          sendAndHandleSdkError(\n            getApiVersionTag(pagesTelemetryVersionNumber, ApiName.Pages_CurrentApp_NavigateToDefaultPage),\n            'pages.currentApp.navigateToDefaultPage',\n          ),\n        );\n      });\n    }\n\n    /**\n     * Checks if pages.currentApp capability is supported by the host\n     * @returns boolean to represent whether the pages.currentApp capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.pages\n        ? runtime.supports.pages.currentApp\n          ? true\n          : false\n        : false;\n    }\n  }\n}\n\nexport function isAppNavigationParametersObject(\n  obj: pages.AppNavigationParameters | pages.NavigateToAppParams,\n): obj is pages.AppNavigationParameters {\n  return obj.appId instanceof AppId;\n}\n\nexport function convertNavigateToAppParamsToAppNavigationParameters(\n  params: pages.NavigateToAppParams,\n): pages.AppNavigationParameters {\n  return {\n    ...params,\n    appId: new AppId(params.appId),\n    webUrl: params.webUrl ? new URL(params.webUrl) : undefined,\n  };\n}\n\nexport function convertAppNavigationParametersToNavigateToAppParams(\n  params: pages.AppNavigationParameters,\n): pages.NavigateToAppParams {\n  return {\n    ...params,\n    appId: params.appId.toString(),\n    webUrl: params.webUrl ? params.webUrl.toString() : undefined,\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from '../public/constants';\nimport { LoadContext, ResumeContext } from '../public/interfaces';\nimport { pages } from '../public/pages';\nimport { runtime } from '../public/runtime';\nimport { Communication, sendMessageEventToChild, sendMessageToParent } from './communication';\nimport { ensureInitialized } from './internalAPIs';\nimport { getLogger } from './telemetry';\nimport { isNullOrUndefined } from './typeCheckUtilities';\n\nconst handlersLogger = getLogger('handlers');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nclass HandlersPrivate {\n  public static handlers: {\n    [func: string]: Function;\n  } = {};\n  public static themeChangeHandler: null | ((theme: string) => void) = null;\n  /**\n   * @deprecated\n   */\n  public static loadHandler: null | ((context: LoadContext) => void) = null;\n  /**\n   * @deprecated\n   */\n  public static beforeUnloadHandler: null | ((readyToUnload: () => void) => boolean) = null;\n  public static beforeSuspendOrTerminateHandler: null | (() => Promise<void>) = null;\n  public static resumeHandler: null | ((context: ResumeContext) => void) = null;\n\n  /**\n   * @internal\n   * Limited to Microsoft-internal use\n   * Initializes the handlers.\n   */\n  public static initializeHandlers(): void {\n    // ::::::::::::::::::::MicrosoftTeams SDK Internal :::::::::::::::::\n    HandlersPrivate.handlers['themeChange'] = handleThemeChange;\n    HandlersPrivate.handlers['load'] = handleLoad;\n    HandlersPrivate.handlers['beforeUnload'] = handleBeforeUnload;\n    pages.backStack._initialize();\n  }\n\n  /**\n   * @internal\n   * Limited to Microsoft-internal use\n   * Uninitializes the handlers.\n   */\n  public static uninitializeHandlers(): void {\n    HandlersPrivate.handlers = {};\n    HandlersPrivate.themeChangeHandler = null;\n    HandlersPrivate.loadHandler = null;\n    HandlersPrivate.beforeUnloadHandler = null;\n    HandlersPrivate.beforeSuspendOrTerminateHandler = null;\n    HandlersPrivate.resumeHandler = null;\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function initializeHandlers(): void {\n  HandlersPrivate.initializeHandlers();\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function uninitializeHandlers(): void {\n  HandlersPrivate.uninitializeHandlers();\n}\nconst callHandlerLogger = handlersLogger.extend('callHandler');\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function callHandler(name: string, args?: unknown[]): [true, unknown] | [false, undefined] {\n  const handler = HandlersPrivate.handlers[name];\n  if (handler) {\n    callHandlerLogger('Invoking the registered handler for message %s with arguments %o', name, args);\n    const result = handler.apply(this, args);\n    return [true, result];\n  } else if (Communication.childWindow) {\n    sendMessageEventToChild(name, args);\n    return [false, undefined];\n  } else {\n    callHandlerLogger('Handler for action message %s not found.', name);\n    return [false, undefined];\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerHandler(\n  apiVersionTag: string,\n  name: string,\n  handler: Function,\n  sendMessage = true,\n  args: unknown[] = [],\n): void {\n  if (handler) {\n    HandlersPrivate.handlers[name] = handler;\n    sendMessage && sendMessageToParent(apiVersionTag, 'registerHandler', [name, ...args]);\n  } else {\n    delete HandlersPrivate.handlers[name];\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function removeHandler(name: string): void {\n  delete HandlersPrivate.handlers[name];\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function doesHandlerExist(name: string): boolean {\n  return HandlersPrivate.handlers[name] != null;\n}\n\n/**\n * @hidden\n * Undocumented helper function with shared code between deprecated version and current version of register*Handler APIs\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @param apiVersionTag - The tag of the api version and name\n * @param name - The name of the handler to register.\n * @param handler - The handler to invoke.\n * @param contexts - The context within which it is valid to register this handler.\n * @param registrationHelper - The helper function containing logic pertaining to a specific version of the API.\n */\nexport function registerHandlerHelper(\n  apiVersionTag: string,\n  name: string,\n  handler: Function,\n  contexts: FrameContexts[],\n  registrationHelper?: () => void,\n): void {\n  // allow for registration cleanup even when not finished initializing\n  handler && ensureInitialized(runtime, ...contexts);\n  if (registrationHelper) {\n    registrationHelper();\n  }\n\n  registerHandler(apiVersionTag, name, handler);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerOnThemeChangeHandler(apiVersionTag: string, handler: (theme: string) => void): void {\n  HandlersPrivate.themeChangeHandler = handler;\n  !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['themeChange']);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function handleThemeChange(theme: string): void {\n  if (HandlersPrivate.themeChangeHandler) {\n    HandlersPrivate.themeChangeHandler(theme);\n  }\n\n  if (Communication.childWindow) {\n    sendMessageEventToChild('themeChange', [theme]);\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * @deprecated\n */\nexport function registerOnLoadHandler(apiVersionTag: string, handler: (context: LoadContext) => void): void {\n  HandlersPrivate.loadHandler = handler;\n  !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['load']);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction handleLoad(loadContext: LoadContext): void {\n  const resumeContext = convertToResumeContext(loadContext);\n  if (HandlersPrivate.resumeHandler) {\n    HandlersPrivate.resumeHandler(resumeContext);\n    if (Communication.childWindow) {\n      sendMessageEventToChild('load', [resumeContext]);\n    }\n  } else if (HandlersPrivate.loadHandler) {\n    HandlersPrivate.loadHandler(loadContext);\n    if (Communication.childWindow) {\n      sendMessageEventToChild('load', [loadContext]);\n    }\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction convertToResumeContext(context: LoadContext): ResumeContext {\n  return {\n    entityId: context.entityId,\n    contentUrl: new URL(context.contentUrl),\n  };\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * @deprecated\n */\nexport function registerBeforeUnloadHandler(\n  apiVersionTag: string,\n  handler: (readyToUnload: () => void) => boolean,\n): void {\n  HandlersPrivate.beforeUnloadHandler = handler;\n  !isNullOrUndefined(handler) && sendMessageToParent(apiVersionTag, 'registerHandler', ['beforeUnload']);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nasync function handleBeforeUnload(): Promise<void> {\n  const readyToUnload = (): void => {\n    sendMessageToParent(getApiVersionTag(ApiVersionNumber.V_2, ApiName.HandleBeforeUnload), 'readyToUnload', []);\n  };\n\n  if (HandlersPrivate.beforeSuspendOrTerminateHandler) {\n    await HandlersPrivate.beforeSuspendOrTerminateHandler();\n    if (Communication.childWindow) {\n      sendMessageEventToChild('beforeUnload');\n    } else {\n      readyToUnload();\n    }\n  } else if (!HandlersPrivate.beforeUnloadHandler || !HandlersPrivate.beforeUnloadHandler(readyToUnload)) {\n    if (Communication.childWindow) {\n      sendMessageEventToChild('beforeUnload');\n    } else {\n      readyToUnload();\n    }\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerBeforeSuspendOrTerminateHandler(handler: () => Promise<void>): void {\n  HandlersPrivate.beforeSuspendOrTerminateHandler = handler;\n  !isNullOrUndefined(handler) &&\n    sendMessageToParent(\n      getApiVersionTag(ApiVersionNumber.V_2, ApiName.RegisterBeforeSuspendOrTerminateHandler),\n      'registerHandler',\n      ['beforeUnload'],\n    );\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerOnResumeHandler(handler: (context: ResumeContext) => void): void {\n  HandlersPrivate.resumeHandler = handler;\n  !isNullOrUndefined(handler) &&\n    sendMessageToParent(getApiVersionTag(ApiVersionNumber.V_2, ApiName.RegisterOnResumeHandler), 'registerHandler', [\n      'load',\n    ]);\n}\n","import { UUID as MessageUUID } from './uuidObject';\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * MessageIDs represent the legacy number id used for processing MessageRequests and MessageResponses\n */\nexport type MessageID = number;\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface MessageRequest {\n  id?: MessageID;\n  uuid?: MessageUUID;\n  func: string;\n  timestamp?: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args?: any[];\n  apiVersionTag?: string;\n  isPartialResponse?: boolean;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface SerializedMessageRequest {\n  id?: MessageID;\n  uuidAsString?: string;\n  func: string;\n  timestamp?: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args?: any[];\n  apiVersionTag?: string;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface SerializedMessageResponse {\n  id: MessageID;\n  uuidAsString?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args?: any[];\n  isPartialResponse?: boolean; // If the message is partial, then there will be more future responses for the given message ID.\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface MessageResponse {\n  id: MessageID;\n  uuid?: MessageUUID;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args?: any[];\n  isPartialResponse?: boolean; // If the message is partial, then there will be more future responses for the given message ID.\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * For reasons that are unclear at this time, some MessageRequest objects can exist without an id or timestamp, even though\n * many parts of code assume that they are defined.\n * To enable type-safety in some scenarios, this new interface can be used where these properties are required. Because it\n * derives from the original interface, objects of this type can be user interchangeably with the original interface.\n * As the required messaging scenarios are better understood, the interfaces will eventually be updated and\n * merged. However, it's a journey.\n */\nexport interface MessageRequestWithRequiredProperties extends MessageRequest {\n  id: MessageID;\n  uuid: MessageUUID;\n  timestamp: number;\n}\n\nexport const serializeMessageRequest = (message: MessageRequest): SerializedMessageRequest => {\n  const { uuid, ...restOfMessage } = message;\n  const uuidAsString = uuid?.toString();\n  const request: SerializedMessageRequest = {\n    ...restOfMessage,\n    uuidAsString: uuidAsString,\n  };\n  return request;\n};\n\nexport const deserializeMessageRequest = (message: SerializedMessageRequest): MessageRequest => {\n  const { uuidAsString, ...restOfMessage } = message;\n  const request: MessageRequest = {\n    ...restOfMessage,\n    uuid: uuidAsString ? new MessageUUID(uuidAsString) : undefined,\n  };\n  return request;\n};\n\nexport const deserializeMessageResponse = (serializedResponse: SerializedMessageResponse): MessageResponse => {\n  const { uuidAsString, ...restOfResponse } = serializedResponse;\n  const messageResponse: MessageResponse = {\n    ...restOfResponse,\n    uuid: uuidAsString ? new MessageUUID(uuidAsString) : undefined,\n  };\n  return messageResponse;\n};\n\nexport const serializeMessageResponse = (response: MessageResponse): SerializedMessageResponse => {\n  const { uuid, ...restOfResponse } = response;\n  const uuidAsString = uuid?.toString();\n  const messageResponse: SerializedMessageResponse = {\n    ...restOfResponse,\n    uuidAsString: uuidAsString,\n  };\n  return messageResponse;\n};\n","import { GlobalVars } from './globalVars';\nimport { MessageRequestWithRequiredProperties } from './messageObjects';\nimport { getLogger } from './telemetry';\n\nconst nestedAppAuthLogger = getLogger('nestedAppAuthUtils');\nconst tryPolyfillWithNestedAppAuthBridgeLogger = nestedAppAuthLogger.extend('tryPolyfillWithNestedAppAuthBridge');\n\n/**\n * @hidden\n * Enumeration for nested app authentication message event names.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @enum {string}\n *\n * @property {string} Request - Event name for a nested app authentication request.\n * @property {string} Response - Event name for a nested app authentication response.\n */\nexport const enum NestedAppAuthMessageEventNames {\n  Request = 'NestedAppAuthRequest',\n  Response = 'NestedAppAuthResponse',\n}\n\n/**\n * @hidden\n * Interface for a nested app authentication request.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @interface\n * @extends {MessageRequest}\n *\n * @property {string} func - The function name, should always be 'nestedAppAuthRequest'.\n * @property {string} data - data associated with the request, represented as a string.\n */\nexport interface NestedAppAuthRequest extends MessageRequestWithRequiredProperties {\n  func: 'nestedAppAuth.execute';\n  data: string;\n}\n\n/**\n * @hidden\n * Interface for parsed data from a nested app authentication message.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @interface\n * @property {NestedAppAuthMessageEventNames} messageType - The type of the nested app authentication message event.\n */\nexport interface ParsedNestedAppAuthMessageData {\n  messageType: NestedAppAuthMessageEventNames;\n}\n\n/**\n * @hidden\n * Interface for a nested app authentication bridge.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @interface\n *\n * @property {Function} addEventListener - Function to add an event listener to the bridge. Takes an event name and a callback function as parameters.\n * @property {Function} postMessage - Function to post a message to the bridge. Takes a message string as a parameter.\n * @property {Function} removeEventListener - Function to remove an event listener from the bridge. Takes an event name and a callback function as parameters.\n */\nexport interface NestedAppAuthBridge {\n  addEventListener: (eventName: string, callback: (response: string) => void) => void;\n  postMessage: (message: string) => void;\n  removeEventListener: (eventName: string, callback: (response: string) => void) => void;\n}\n\n/**\n * @hidden\n * Interface for a Window object extended with a nested app authentication bridge.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @interface\n * @extends {Window}\n *\n * @property {NestedAppAuthBridge} nestedAppAuthBridge - The nested app authentication bridge associated with the window.\n */\nexport interface NestedAuthExtendedWindow extends Window {\n  nestedAppAuthBridge: NestedAppAuthBridge;\n}\n\n/**\n * @hidden\n * Type for handlers in a nested app authentication bridge.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @typedef {Object} NestedAppAuthBridgeHandlers\n *\n * @property {Function} onMessage - Function to handle a message event. Takes a MessageEvent object and a callback function as parameters. The callback function is called when a message is received.\n * @property {Function} handlePostMessage - Function to handle posting a message. Takes a message string as a parameter.\n */\ntype NestedAppAuthBridgeHandlers = {\n  onMessage: (evt: MessageEvent, onMessageReceived: (response: string) => void) => void;\n  sendPostMessage: (message: string) => void;\n};\n\n/**\n * @hidden\n * Attempt to polyfill the nestedAppAuthBridge object on the given window\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function tryPolyfillWithNestedAppAuthBridge(\n  clientSupportedSDKVersion: string,\n  window: Window | null,\n  handlers: NestedAppAuthBridgeHandlers,\n): void {\n  const logger = tryPolyfillWithNestedAppAuthBridgeLogger;\n\n  if (GlobalVars.isFramelessWindow) {\n    logger('Cannot polyfill nestedAppAuthBridge as current window is frameless');\n    return;\n  }\n\n  if (!window) {\n    logger('Cannot polyfill nestedAppAuthBridge as current window does not exist');\n    return;\n  }\n\n  const parsedClientSupportedSDKVersion = (() => {\n    try {\n      return JSON.parse(clientSupportedSDKVersion);\n    } catch (e) {\n      return null;\n    }\n  })();\n\n  if (!parsedClientSupportedSDKVersion || !parsedClientSupportedSDKVersion.supports?.nestedAppAuth) {\n    logger('Cannot polyfill nestedAppAuthBridge as current hub does not support nested app auth');\n    return;\n  }\n\n  const extendedWindow = window as unknown as NestedAuthExtendedWindow;\n  if (extendedWindow.nestedAppAuthBridge) {\n    logger('nestedAppAuthBridge already exists on current window, skipping polyfill');\n    return;\n  }\n\n  const nestedAppAuthBridge = createNestedAppAuthBridge(extendedWindow, handlers);\n  if (nestedAppAuthBridge) {\n    extendedWindow.nestedAppAuthBridge = nestedAppAuthBridge;\n  }\n}\n\nconst createNestedAppAuthBridgeLogger = nestedAppAuthLogger.extend('createNestedAppAuthBridge');\n\n/**\n * @hidden\n * Creates a bridge for nested app authentication.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * @param {Window | null} window - The window object where the nested app authentication bridge will be created. If null, the function will log an error message and return null.\n * @returns {NestedAppAuthBridge | null} Returns an object with methods for adding and removing event listeners, and posting messages. If the provided window is null, returns null.\n *\n * @property {Function} addEventListener - Adds an event listener to the window. Only supports the 'message' event. If an unsupported event is passed, logs an error message.\n * @property {Function} postMessage - Posts a message to the window. The message should be a stringified JSON object with a messageType of 'NestedAppAuthRequest'. If the message does not meet these criteria, logs an error message.\n * @property {Function} removeEventListener - Removes an event listener from the window.\n */\nfunction createNestedAppAuthBridge(\n  window: Window | null,\n  bridgeHandlers: NestedAppAuthBridgeHandlers,\n): NestedAppAuthBridge | null {\n  const logger = createNestedAppAuthBridgeLogger;\n\n  if (!window) {\n    logger('nestedAppAuthBridge cannot be created as current window does not exist');\n    return null;\n  }\n\n  const { onMessage, sendPostMessage } = bridgeHandlers;\n  const nestedAppAuthBridgeHandler = (callback: (response: string) => void) => (evt: MessageEvent) =>\n    onMessage(evt, callback);\n\n  return {\n    addEventListener: (eventName, callback): void => {\n      if (eventName === 'message') {\n        window.addEventListener(eventName, nestedAppAuthBridgeHandler(callback));\n      } else {\n        logger(`Event ${eventName} is not supported by nestedAppAuthBridge`);\n      }\n    },\n    postMessage: (message: string): void => {\n      // Validate that it is a valid auth bridge request message\n      const parsedMessage = (() => {\n        try {\n          return JSON.parse(message);\n        } catch (e) {\n          return null;\n        }\n      })();\n\n      if (\n        !parsedMessage ||\n        typeof parsedMessage !== 'object' ||\n        parsedMessage.messageType !== NestedAppAuthMessageEventNames.Request\n      ) {\n        logger('Unrecognized data format received by app, message being ignored. Message: %o', message);\n        return;\n      }\n\n      // Post the message to the top window\n      sendPostMessage(message);\n    },\n    removeEventListener: (eventName: string, callback): void => {\n      window.removeEventListener(eventName, nestedAppAuthBridgeHandler(callback));\n    },\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable strict-null-checks/all */\n\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from '../public/constants';\nimport { SdkError } from '../public/interfaces';\nimport { latestRuntimeApiVersion } from '../public/runtime';\nimport { version } from '../public/version';\nimport { GlobalVars } from './globalVars';\nimport { callHandler } from './handlers';\nimport { DOMMessageEvent, ExtendedWindow } from './interfaces';\nimport {\n  deserializeMessageRequest,\n  deserializeMessageResponse,\n  MessageID,\n  MessageRequest,\n  MessageRequestWithRequiredProperties,\n  MessageResponse,\n  SerializedMessageRequest,\n  SerializedMessageResponse,\n  serializeMessageRequest,\n  serializeMessageResponse,\n} from './messageObjects';\nimport {\n  NestedAppAuthMessageEventNames,\n  NestedAppAuthRequest,\n  ParsedNestedAppAuthMessageData,\n  tryPolyfillWithNestedAppAuthBridge,\n} from './nestedAppAuthUtils';\nimport { getLogger, isFollowingApiVersionTagFormat } from './telemetry';\nimport { ssrSafeWindow } from './utils';\nimport { UUID as MessageUUID } from './uuidObject';\nimport { validateOrigin } from './validOrigins';\n\nconst communicationLogger = getLogger('communication');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport class Communication {\n  public static currentWindow: Window | any;\n  public static parentOrigin: string | null;\n  public static parentWindow: Window | any;\n  public static childWindow: Window | null;\n  public static childOrigin: string | null;\n  public static topWindow: Window | any;\n  public static topOrigin: string | null;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nclass CommunicationPrivate {\n  public static parentMessageQueue: MessageRequest[] = [];\n  public static childMessageQueue: MessageRequest[] = [];\n  public static topMessageQueue: MessageRequest[] = [];\n  public static nextMessageId = 0;\n  public static callbacks: Map<MessageUUID, Function> = new Map();\n  public static promiseCallbacks: Map<MessageUUID, (value?: unknown) => void> = new Map();\n  public static portCallbacks: Map<MessageUUID, (port?: MessagePort, args?: unknown[]) => void> = new Map();\n  public static messageListener: Function;\n  public static legacyMessageIdsToUuidMap: {\n    [legacyId: MessageID]: MessageUUID;\n  } = {};\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\ninterface InitializeResponse {\n  context: FrameContexts;\n  clientType: string;\n  runtimeConfig: string;\n  clientSupportedSDKVersion: string;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function initializeCommunication(\n  validMessageOrigins: string[] | undefined,\n  apiVersionTag: string,\n): Promise<InitializeResponse> {\n  // Listen for messages post to our window\n  CommunicationPrivate.messageListener = (evt: DOMMessageEvent): Promise<void> => processIncomingMessage(evt);\n\n  // If we are in an iframe, our parent window is the one hosting us (i.e., window.parent); otherwise,\n  // it's the window that opened us (i.e., window.opener)\n  Communication.currentWindow = Communication.currentWindow || ssrSafeWindow();\n  Communication.parentWindow =\n    Communication.currentWindow.parent !== Communication.currentWindow.self\n      ? Communication.currentWindow.parent\n      : Communication.currentWindow.opener;\n  Communication.topWindow = Communication.currentWindow.top;\n\n  // Listen to messages from the parent or child frame.\n  // Frameless windows will only receive this event from child frames and if validMessageOrigins is passed.\n  if (Communication.parentWindow || validMessageOrigins) {\n    Communication.currentWindow.addEventListener('message', CommunicationPrivate.messageListener, false);\n  }\n\n  if (!Communication.parentWindow) {\n    const extendedWindow = Communication.currentWindow as unknown as ExtendedWindow;\n    if (extendedWindow.nativeInterface) {\n      GlobalVars.isFramelessWindow = true;\n      extendedWindow.onNativeMessage = handleIncomingMessageFromParent;\n    } else {\n      // at this point we weren't able to find a parent to talk to, no way initialization will succeed\n      return Promise.reject(new Error('Initialization Failed. No Parent window found.'));\n    }\n  }\n\n  try {\n    // Send the initialized message to any origin, because at this point we most likely don't know the origin\n    // of the parent window, and this message contains no data that could pose a security risk.\n    Communication.parentOrigin = '*';\n    return sendMessageToParentAsync<[FrameContexts, string, string, string]>(apiVersionTag, 'initialize', [\n      version,\n      latestRuntimeApiVersion,\n      validMessageOrigins,\n    ]).then(\n      ([context, clientType, runtimeConfig, clientSupportedSDKVersion]: [FrameContexts, string, string, string]) => {\n        tryPolyfillWithNestedAppAuthBridge(clientSupportedSDKVersion, Communication.currentWindow, {\n          onMessage: processAuthBridgeMessage,\n          sendPostMessage: sendNestedAuthRequestToTopWindow,\n        });\n        return { context, clientType, runtimeConfig, clientSupportedSDKVersion };\n      },\n    );\n  } finally {\n    Communication.parentOrigin = null;\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function uninitializeCommunication(): void {\n  if (Communication.currentWindow) {\n    Communication.currentWindow.removeEventListener('message', CommunicationPrivate.messageListener, false);\n  }\n\n  Communication.currentWindow = null;\n  Communication.parentWindow = null;\n  Communication.parentOrigin = null;\n  Communication.childWindow = null;\n  Communication.childOrigin = null;\n  CommunicationPrivate.parentMessageQueue = [];\n  CommunicationPrivate.childMessageQueue = [];\n  CommunicationPrivate.nextMessageId = 0;\n  CommunicationPrivate.callbacks.clear();\n  CommunicationPrivate.promiseCallbacks.clear();\n  CommunicationPrivate.portCallbacks.clear();\n  CommunicationPrivate.legacyMessageIdsToUuidMap = {};\n}\n\n/**\n * @hidden\n * Send a message to parent and then unwrap result. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendAndUnwrap<T>(apiVersionTag: string, actionName: string, ...args: any[]): Promise<T> {\n  return sendMessageToParentAsync(apiVersionTag, actionName, args).then(([result]: [T]) => result);\n}\n\n/**\n * @hidden\n * Send a message to parent and then handle status and reason. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n */\nexport function sendAndHandleStatusAndReason(apiVersionTag: string, actionName: string, ...args: any[]): Promise<void> {\n  return sendMessageToParentAsync(apiVersionTag, actionName, args).then(\n    ([wasSuccessful, reason]: [boolean, string]) => {\n      if (!wasSuccessful) {\n        throw new Error(reason);\n      }\n    },\n  );\n}\n\n/**\n * @hidden\n * Send a message to parent and then handle status and reason with default error. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendAndHandleStatusAndReasonWithDefaultError(\n  apiVersionTag: string,\n  actionName: string,\n  defaultError: string,\n  ...args: any[]\n): Promise<void> {\n  return sendMessageToParentAsync(apiVersionTag, actionName, args).then(\n    ([wasSuccessful, reason]: [boolean, string]) => {\n      if (!wasSuccessful) {\n        throw new Error(reason ? reason : defaultError);\n      }\n    },\n  );\n}\n\n/**\n * @hidden\n * Send a message to parent and then handle SDK error. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendAndHandleSdkError<T>(apiVersionTag: string, actionName: string, ...args: any[]): Promise<T> {\n  return sendMessageToParentAsync(apiVersionTag, actionName, args).then(([error, result]: [SdkError, T]) => {\n    if (error) {\n      throw error;\n    }\n    return result;\n  });\n}\n\n/**\n * @hidden\n * Send a message to parent asynchronously. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendMessageToParentAsync<T>(\n  apiVersionTag: string,\n  actionName: string,\n  args: any[] | undefined = undefined,\n): Promise<T> {\n  if (!isFollowingApiVersionTagFormat(apiVersionTag)) {\n    throw Error(\n      `apiVersionTag: ${apiVersionTag} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`,\n    );\n  }\n\n  return new Promise((resolve) => {\n    const request = sendMessageToParentHelper(apiVersionTag, actionName, args);\n    resolve(waitForResponse<T>(request.uuid));\n  });\n}\n\n/**\n * @hidden\n * Send a message to parent requesting a MessageChannel Port.\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function requestPortFromParentWithVersion(\n  apiVersionTag: string,\n  actionName: string,\n  args: any[] | undefined = undefined,\n): Promise<MessagePort> {\n  if (!isFollowingApiVersionTagFormat(apiVersionTag)) {\n    throw Error(\n      `apiVersionTag: ${apiVersionTag} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`,\n    );\n  }\n  const request = sendMessageToParentHelper(apiVersionTag, actionName, args);\n  return waitForPort(request.uuid);\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction waitForPort(requestUuid: MessageUUID): Promise<MessagePort> {\n  return new Promise<MessagePort>((resolve, reject) => {\n    CommunicationPrivate.portCallbacks.set(requestUuid, (port: MessagePort | undefined, args?: unknown[]) => {\n      if (port instanceof MessagePort) {\n        resolve(port);\n      } else {\n        // First arg is the error message, if present\n        reject(args && args.length > 0 ? args[0] : new Error('Host responded without port or error details.'));\n      }\n    });\n  });\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction waitForResponse<T>(requestUuid: MessageUUID): Promise<T> {\n  return new Promise<T>((resolve) => {\n    CommunicationPrivate.promiseCallbacks.set(requestUuid, resolve);\n  });\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendMessageToParent(apiVersionTag: string, actionName: string, callback?: Function): void;\n\n/**\n * @hidden\n * Send a message to parent. Uses nativeInterface on mobile to communicate with parent context\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendMessageToParent(\n  apiVersionTag: string,\n  actionName: string,\n  args: any[] | undefined,\n  callback?: Function,\n): void;\n\n/**\n * @hidden\n * Send a message to parent. Uses nativeInterface on mobile to communicate with parent context\n * Additional apiVersionTag parameter is added, which provides the ability to send api version number to parent\n * for telemetry work.\n *\n */\nexport function sendMessageToParent(\n  apiVersionTag: string,\n  actionName: string,\n  argsOrCallback?: any[] | Function,\n  callback?: Function,\n): void {\n  let args: any[] | undefined;\n  if (argsOrCallback instanceof Function) {\n    callback = argsOrCallback;\n  } else if (argsOrCallback instanceof Array) {\n    args = argsOrCallback;\n  }\n\n  if (!isFollowingApiVersionTagFormat(apiVersionTag)) {\n    throw Error(\n      `apiVersionTag: ${apiVersionTag} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`,\n    );\n  }\n\n  const request = sendMessageToParentHelper(apiVersionTag, actionName, args);\n  if (callback) {\n    CommunicationPrivate.callbacks.set(request.uuid, callback);\n  }\n}\n\nconst sendNestedAuthRequestToTopWindowLogger = communicationLogger.extend('sendNestedAuthRequestToTopWindow');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendNestedAuthRequestToTopWindow(message: string): NestedAppAuthRequest {\n  const logger = sendNestedAuthRequestToTopWindowLogger;\n\n  const targetWindow = Communication.topWindow;\n  const request = createNestedAppAuthRequest(message);\n\n  logger('Message %s information: %o', getMessageIdsAsLogString(request), {\n    actionName: request.func,\n  });\n\n  return sendRequestToTargetWindowHelper(targetWindow, request) as NestedAppAuthRequest;\n}\n\nconst sendRequestToTargetWindowHelperLogger = communicationLogger.extend('sendRequestToTargetWindowHelper');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction sendRequestToTargetWindowHelper(\n  targetWindow: Window,\n  messageRequest: MessageRequestWithRequiredProperties | NestedAppAuthRequest,\n): MessageRequestWithRequiredProperties | NestedAppAuthRequest {\n  const logger = sendRequestToTargetWindowHelperLogger;\n  const targetWindowName = getTargetName(targetWindow);\n  const request: SerializedMessageRequest = serializeMessageRequest(messageRequest);\n\n  if (GlobalVars.isFramelessWindow) {\n    if (Communication.currentWindow && Communication.currentWindow.nativeInterface) {\n      logger(\n        'Sending message %s to %s via framelessPostMessage interface',\n        getMessageIdsAsLogString(request),\n        targetWindowName,\n      );\n      (Communication.currentWindow as ExtendedWindow).nativeInterface.framelessPostMessage(JSON.stringify(request));\n    }\n  } else {\n    const targetOrigin = getTargetOrigin(targetWindow);\n\n    // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\n    // queue the message and send it after the origin is established\n    if (targetWindow && targetOrigin) {\n      logger('Sending message %s to %s via postMessage', getMessageIdsAsLogString(request), targetWindowName);\n      targetWindow.postMessage(request, targetOrigin);\n    } else {\n      logger('Adding message %s to %s message queue', getMessageIdsAsLogString(request), targetWindowName);\n      getTargetMessageQueue(targetWindow).push(messageRequest);\n    }\n  }\n  return messageRequest;\n}\n\nconst sendMessageToParentHelperLogger = communicationLogger.extend('sendMessageToParentHelper');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction sendMessageToParentHelper(\n  apiVersionTag: string,\n  actionName: string,\n  args: any[] | undefined,\n): MessageRequestWithRequiredProperties {\n  const logger = sendMessageToParentHelperLogger;\n\n  const targetWindow = Communication.parentWindow;\n  const request = createMessageRequest(apiVersionTag, actionName, args);\n\n  logger('Message %s information: %o', getMessageIdsAsLogString(request), { actionName, args });\n\n  return sendRequestToTargetWindowHelper(targetWindow, request);\n}\n\nconst processIncomingMessageLogger = communicationLogger.extend('processIncomingMessage');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nasync function processIncomingMessage(evt: DOMMessageEvent): Promise<void> {\n  // Process only if we received a valid message\n  if (!evt || !evt.data || typeof evt.data !== 'object') {\n    processIncomingMessageLogger(\n      'Unrecognized message format received by app, message being ignored. Message: %o',\n      evt,\n    );\n    return;\n  }\n\n  // Process only if the message is coming from a different window and a valid origin\n  // valid origins are either a pre-known origin or one specified by the app developer\n  // in their call to app.initialize\n  const messageSource = evt.source || (evt.originalEvent && evt.originalEvent.source);\n  const messageOrigin = evt.origin || (evt.originalEvent && evt.originalEvent.origin);\n\n  return shouldProcessIncomingMessage(messageSource, messageOrigin).then((result) => {\n    if (!result) {\n      processIncomingMessageLogger(\n        'Message being ignored by app because it is either coming from the current window or a different window with an invalid origin, message: %o, source: %o, origin: %o',\n        evt,\n        messageSource,\n        messageOrigin,\n      );\n      return;\n    }\n    // Update our parent and child relationships based on this message\n    updateRelationships(messageSource, messageOrigin);\n    // Handle the message\n    if (messageSource === Communication.parentWindow) {\n      handleIncomingMessageFromParent(evt);\n    } else if (messageSource === Communication.childWindow) {\n      handleIncomingMessageFromChild(evt);\n    }\n  });\n}\n\nconst processAuthBridgeMessageLogger = communicationLogger.extend('processAuthBridgeMessage');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction processAuthBridgeMessage(evt: MessageEvent, onMessageReceived: (response: string) => void): void {\n  const logger = processAuthBridgeMessageLogger;\n\n  // Process only if we received a valid message\n  if (!evt || !evt.data || typeof evt.data !== 'object') {\n    logger('Unrecognized message format received by app, message being ignored. Message: %o', evt);\n    return;\n  }\n\n  const { args } = evt.data as SerializedMessageResponse;\n  const [, message] = args ?? [];\n  const parsedData: ParsedNestedAppAuthMessageData = (() => {\n    try {\n      return JSON.parse(message);\n    } catch (e) {\n      return null;\n    }\n  })();\n\n  // Validate that it is a valid auth bridge response message\n  if (\n    !parsedData ||\n    typeof parsedData !== 'object' ||\n    parsedData.messageType !== NestedAppAuthMessageEventNames.Response\n  ) {\n    logger('Unrecognized data format received by app, message being ignored. Message: %o', evt);\n    return;\n  }\n\n  // Process only if the message is coming from a different window and a valid origin\n  // valid origins are either a pre-known origin or one specified by the app developer\n  // in their call to app.initialize\n  const messageSource = evt.source || (evt as unknown as DOMMessageEvent)?.originalEvent?.source;\n  const messageOrigin = evt.origin || (evt as unknown as DOMMessageEvent)?.originalEvent?.origin;\n  if (!messageSource) {\n    logger('Message being ignored by app because it is coming for a target that is null');\n    return;\n  }\n\n  if (!shouldProcessIncomingMessage(messageSource, messageOrigin)) {\n    logger(\n      'Message being ignored by app because it is either coming from the current window or a different window with an invalid origin',\n    );\n    return;\n  }\n\n  /**\n   * In most cases, top level window and the parent window will be same.\n   * If they're not, perform the necessary updates for the top level window.\n   *\n   * Top window logic to flush messages is kept independent so that we don't affect\n   * any of the code for the existing communication channel.\n   */\n  if (!Communication.topWindow || Communication.topWindow.closed || messageSource === Communication.topWindow) {\n    Communication.topWindow = messageSource;\n    Communication.topOrigin = messageOrigin;\n  }\n\n  // Clean up pointers to closed parent and child windows\n  if (Communication.topWindow && Communication.topWindow.closed) {\n    Communication.topWindow = null;\n    Communication.topOrigin = null;\n  }\n\n  flushMessageQueue(Communication.topWindow);\n\n  // Return the response to the registered callback\n  onMessageReceived(message);\n}\n\nconst shouldProcessIncomingMessageLogger = communicationLogger.extend('shouldProcessIncomingMessage');\n\n/**\n * @hidden\n * Validates the message source and origin, if it should be processed\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nasync function shouldProcessIncomingMessage(messageSource: Window, messageOrigin: string): Promise<boolean> {\n  // Process if message source is a different window and if origin is either in\n  // Teams' pre-known whitelist or supplied as valid origin by user during initialization\n  if (Communication.currentWindow && messageSource === Communication.currentWindow) {\n    shouldProcessIncomingMessageLogger('Should not process message because it is coming from the current window');\n    return false;\n  } else if (\n    Communication.currentWindow &&\n    Communication.currentWindow.location &&\n    messageOrigin &&\n    messageOrigin === Communication.currentWindow.location.origin\n  ) {\n    return true;\n  } else {\n    let messageOriginURL: URL;\n    try {\n      messageOriginURL = new URL(messageOrigin);\n    } catch (_) {\n      shouldProcessIncomingMessageLogger('Message has an invalid origin of %s', messageOrigin);\n      return false;\n    }\n\n    const isOriginValid = await validateOrigin(messageOriginURL);\n    if (!isOriginValid) {\n      shouldProcessIncomingMessageLogger('Message has an invalid origin of %s', messageOrigin);\n    }\n    return isOriginValid;\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction updateRelationships(messageSource: Window, messageOrigin: string): void {\n  // Determine whether the source of the message is our parent or child and update our\n  // window and origin pointer accordingly\n  // For frameless windows (i.e mobile), there is no parent frame, so the message must be from the child.\n  if (\n    !GlobalVars.isFramelessWindow &&\n    (!Communication.parentWindow || Communication.parentWindow.closed || messageSource === Communication.parentWindow)\n  ) {\n    Communication.parentWindow = messageSource;\n    Communication.parentOrigin = messageOrigin;\n  } else if (\n    !Communication.childWindow ||\n    Communication.childWindow.closed ||\n    messageSource === Communication.childWindow\n  ) {\n    Communication.childWindow = messageSource;\n    Communication.childOrigin = messageOrigin;\n  }\n\n  // Clean up pointers to closed parent and child windows\n  if (Communication.parentWindow && Communication.parentWindow.closed) {\n    Communication.parentWindow = null;\n    Communication.parentOrigin = null;\n  }\n  if (Communication.childWindow && Communication.childWindow.closed) {\n    Communication.childWindow = null;\n    Communication.childOrigin = null;\n  }\n\n  // If we have any messages in our queue, send them now\n  flushMessageQueue(Communication.parentWindow);\n  flushMessageQueue(Communication.childWindow);\n}\n\nconst handleIncomingMessageFromParentLogger = communicationLogger.extend('handleIncomingMessageFromParent');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction retrieveMessageUUIDFromResponse(response: MessageResponse): MessageUUID | undefined {\n  const logger = handleIncomingMessageFromParentLogger;\n  if (response.uuid) {\n    const responseUUID = response.uuid;\n    const callbackUUID = retrieveMessageUUIDFromCallback(CommunicationPrivate.callbacks, responseUUID);\n    if (callbackUUID) {\n      return callbackUUID;\n    }\n    const promiseCallbackUUID = retrieveMessageUUIDFromCallback(CommunicationPrivate.promiseCallbacks, responseUUID);\n    if (promiseCallbackUUID) {\n      return promiseCallbackUUID;\n    }\n    const portCallbackUUID = retrieveMessageUUIDFromCallback(CommunicationPrivate.portCallbacks, responseUUID);\n    if (portCallbackUUID) {\n      return portCallbackUUID;\n    }\n  } else {\n    return CommunicationPrivate.legacyMessageIdsToUuidMap[response.id];\n  }\n  logger('Received message %s that failed to produce a callbackId', getMessageIdsAsLogString(response));\n  return undefined;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * This function is used to compare a new MessageUUID object value to the key values in the specified callback and retrieving that key\n * We use this because two objects with the same value are not considered equivalent therefore we can't use the new MessageUUID object\n * as a key to retrieve the value associated with it and should use this function instead.\n */\nfunction retrieveMessageUUIDFromCallback(\n  map: Map<MessageUUID, Function>,\n  responseUUID?: MessageUUID,\n): MessageUUID | undefined {\n  if (responseUUID) {\n    const callback = [...map].find(([key, _value]) => {\n      return key.toString() === responseUUID.toString();\n    });\n\n    if (callback) {\n      return callback[0];\n    }\n  }\n  return undefined;\n}\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction removeMessageHandlers(message: MessageResponse, map: Map<MessageUUID, Function>): void {\n  const callbackId = retrieveMessageUUIDFromCallback(map, message.uuid);\n  if (callbackId) {\n    map.delete(callbackId);\n  }\n  if (!message.uuid) {\n    delete CommunicationPrivate.legacyMessageIdsToUuidMap[message.id];\n  } else {\n    //If we are here, then the parent is capable of sending UUIDs, therefore free up memory\n    CommunicationPrivate.legacyMessageIdsToUuidMap = {};\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction handleIncomingMessageFromParent(evt: DOMMessageEvent): void {\n  const logger = handleIncomingMessageFromParentLogger;\n\n  if ('id' in evt.data && typeof evt.data.id === 'number') {\n    // Call any associated Communication.callbacks\n    const serializedResponse = evt.data as SerializedMessageResponse;\n    const message: MessageResponse = deserializeMessageResponse(serializedResponse);\n    const callbackId = retrieveMessageUUIDFromResponse(message);\n    if (callbackId) {\n      const callback = CommunicationPrivate.callbacks.get(callbackId);\n      logger('Received a response from parent for message %s', callbackId.toString());\n      if (callback) {\n        logger(\n          'Invoking the registered callback for message %s with arguments %o',\n          callbackId.toString(),\n          message.args,\n        );\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        callback.apply(null, [...message.args, message.isPartialResponse]);\n\n        // Remove the callback to ensure that the callback is called only once and to free up memory if response is a complete response\n        if (!isPartialResponse(evt)) {\n          logger('Removing registered callback for message %s', callbackId.toString());\n          removeMessageHandlers(message, CommunicationPrivate.callbacks);\n        }\n      }\n      const promiseCallback = CommunicationPrivate.promiseCallbacks.get(callbackId);\n      if (promiseCallback) {\n        logger(\n          'Invoking the registered promise callback for message %s with arguments %o',\n          callbackId.toString(),\n          message.args,\n        );\n        promiseCallback(message.args);\n\n        logger('Removing registered promise callback for message %s', callbackId.toString());\n        removeMessageHandlers(message, CommunicationPrivate.promiseCallbacks);\n      }\n      const portCallback = CommunicationPrivate.portCallbacks.get(callbackId);\n      if (portCallback) {\n        logger(\n          'Invoking the registered port callback for message %s with arguments %o',\n          callbackId.toString(),\n          message.args,\n        );\n        let port: MessagePort | undefined;\n        if (evt.ports && evt.ports[0] instanceof MessagePort) {\n          port = evt.ports[0];\n        }\n        portCallback(port, message.args);\n\n        logger('Removing registered port callback for message %s', callbackId.toString());\n        removeMessageHandlers(message, CommunicationPrivate.portCallbacks);\n      }\n      if (message.uuid) {\n        CommunicationPrivate.legacyMessageIdsToUuidMap = {};\n      }\n    }\n  } else if ('func' in evt.data && typeof evt.data.func === 'string') {\n    // Delegate the request to the proper handler\n    const message = evt.data as MessageRequest;\n    logger('Received a message from parent %s, action: \"%s\"', getMessageIdsAsLogString(message), message.func);\n    callHandler(message.func, message.args);\n  } else {\n    logger('Received an unknown message: %O', evt);\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction isPartialResponse(evt: DOMMessageEvent): boolean {\n  return evt.data.isPartialResponse === true;\n}\n\nconst handleIncomingMessageFromChildLogger = communicationLogger.extend('handleIncomingMessageFromChild');\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction handleIncomingMessageFromChild(evt: DOMMessageEvent): void {\n  if ('id' in evt.data && 'func' in evt.data) {\n    // Try to delegate the request to the proper handler, if defined\n    const message = deserializeMessageRequest(evt.data as SerializedMessageRequest);\n    const [called, result] = callHandler(message.func, message.args);\n    if (called && typeof result !== 'undefined') {\n      handleIncomingMessageFromChildLogger(\n        'Returning message %s from child back to child, action: %s.',\n        getMessageIdsAsLogString(message),\n        message.func,\n      );\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      sendMessageResponseToChild(message.id, message.uuid, Array.isArray(result) ? result : [result]);\n    } else {\n      // No handler, proxy to parent\n\n      handleIncomingMessageFromChildLogger(\n        'Relaying message %s from child to parent, action: %s. Relayed message will have a new id.',\n        getMessageIdsAsLogString(message),\n        message.func,\n      );\n\n      sendMessageToParent(\n        getApiVersionTag(ApiVersionNumber.V_2, ApiName.Tasks_StartTask),\n        message.func,\n        message.args,\n        (...args: any[]): void => {\n          if (Communication.childWindow) {\n            const isPartialResponse = args.pop();\n            handleIncomingMessageFromChildLogger(\n              'Message from parent being relayed to child, id: %s',\n              getMessageIdsAsLogString(message),\n            );\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sendMessageResponseToChild(message.id, message.uuid, args, isPartialResponse);\n          }\n        },\n      );\n    }\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * Checks if the top window and the parent window are different.\n *\n * @returns {boolean} Returns true if the top window and the parent window are different, false otherwise.\n */\nfunction areTopAndParentWindowsDistinct(): boolean {\n  return Communication.topWindow !== Communication.parentWindow;\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction getTargetMessageQueue(targetWindow: Window | null): MessageRequest[] {\n  if (targetWindow === Communication.topWindow && areTopAndParentWindowsDistinct()) {\n    return CommunicationPrivate.topMessageQueue;\n  } else if (targetWindow === Communication.parentWindow) {\n    return CommunicationPrivate.parentMessageQueue;\n  } else if (targetWindow === Communication.childWindow) {\n    return CommunicationPrivate.childMessageQueue;\n  } else {\n    return [];\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction getTargetOrigin(targetWindow: Window | null): string | null {\n  if (targetWindow === Communication.topWindow && areTopAndParentWindowsDistinct()) {\n    return Communication.topOrigin;\n  } else if (targetWindow === Communication.parentWindow) {\n    return Communication.parentOrigin;\n  } else if (targetWindow === Communication.childWindow) {\n    return Communication.childOrigin;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction getTargetName(targetWindow: Window | null): string | null {\n  if (targetWindow === Communication.topWindow && areTopAndParentWindowsDistinct()) {\n    return 'top';\n  } else if (targetWindow === Communication.parentWindow) {\n    return 'parent';\n  } else if (targetWindow === Communication.childWindow) {\n    return 'child';\n  } else {\n    return null;\n  }\n}\n\nconst flushMessageQueueLogger = communicationLogger.extend('flushMessageQueue');\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction flushMessageQueue(targetWindow: Window | any): void {\n  const targetOrigin = getTargetOrigin(targetWindow);\n  const targetMessageQueue = getTargetMessageQueue(targetWindow);\n  const target = getTargetName(targetWindow);\n\n  while (targetWindow && targetOrigin && targetMessageQueue.length > 0) {\n    const messageRequest = targetMessageQueue.shift();\n    if (messageRequest) {\n      const request: SerializedMessageRequest = serializeMessageRequest(messageRequest);\n\n      /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n      flushMessageQueueLogger(\n        'Flushing message %s from %s message queue via postMessage.',\n        getMessageIdsAsLogString(request),\n        target,\n      );\n\n      targetWindow.postMessage(request, targetOrigin);\n    }\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function waitForMessageQueue(targetWindow: Window, callback: () => void): void {\n  let messageQueueMonitor: ReturnType<typeof setInterval>;\n  /* const cannot be used to declare messageQueueMonitor here because of the JS temporal dead zone. In order for messageQueueMonitor to be referenced inside setInterval,\n     it has to be defined before the setInterval call. */\n  /* eslint-disable-next-line prefer-const */\n  messageQueueMonitor = Communication.currentWindow.setInterval(() => {\n    if (getTargetMessageQueue(targetWindow).length === 0) {\n      clearInterval(messageQueueMonitor);\n      callback();\n    }\n  }, 100);\n}\n\n/**\n * @hidden\n * Send a response to child for a message request that was from child\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction sendMessageResponseToChild(\n  id: MessageID,\n  uuid?: MessageUUID,\n  args?: any[],\n  isPartialResponse?: boolean,\n): void {\n  const targetWindow = Communication.childWindow;\n  const response = createMessageResponse(id, uuid, args, isPartialResponse);\n  const serializedResponse = serializeMessageResponse(response);\n  const targetOrigin = getTargetOrigin(targetWindow);\n  if (targetWindow && targetOrigin) {\n    targetWindow.postMessage(serializedResponse, targetOrigin);\n  }\n}\n\n/**\n * @hidden\n * Send a custom message object that can be sent to child window,\n * instead of a response message to a child\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendMessageEventToChild(actionName: string, args?: any[]): void {\n  const targetWindow = Communication.childWindow;\n  /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n  const customEvent = createMessageEvent(actionName, args);\n  const targetOrigin = getTargetOrigin(targetWindow);\n\n  // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\n  // queue the message and send it after the origin is established\n  if (targetWindow && targetOrigin) {\n    targetWindow.postMessage(customEvent, targetOrigin);\n  } else {\n    getTargetMessageQueue(targetWindow).push(customEvent);\n  }\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction createMessageRequest(\n  apiVersionTag: string,\n  func: string,\n  args: any[] | undefined,\n): MessageRequestWithRequiredProperties {\n  const messageId: MessageID = CommunicationPrivate.nextMessageId++;\n  const messageUuid: MessageUUID = new MessageUUID();\n  CommunicationPrivate.legacyMessageIdsToUuidMap[messageId] = messageUuid;\n  return {\n    id: messageId,\n    uuid: messageUuid,\n    func: func,\n    timestamp: Date.now(),\n    args: args || [],\n    apiVersionTag: apiVersionTag,\n  };\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n *\n * Creates a nested app authentication request.\n *\n * @param {string} message - The message to be included in the request. This is typically a stringified JSON object containing the details of the authentication request.\n * The reason for using a string is to allow complex data structures to be sent as a message while avoiding potential issues with object serialization and deserialization.\n *\n * @returns {NestedAppAuthRequest} Returns a NestedAppAuthRequest object with a unique id, the function name set to 'nestedAppAuthRequest', the current timestamp, an empty args array, and the provided message as data.\n */\nfunction createNestedAppAuthRequest(message: string): NestedAppAuthRequest {\n  const messageId: MessageID = CommunicationPrivate.nextMessageId++;\n  const messageUuid: MessageUUID = new MessageUUID();\n  CommunicationPrivate.legacyMessageIdsToUuidMap[messageId] = messageUuid;\n  return {\n    id: messageId,\n    uuid: messageUuid,\n    func: 'nestedAppAuth.execute',\n    timestamp: Date.now(),\n    // Since this is a nested app auth request, we don't need to send any args.\n    // We avoid overloading the args array with the message to avoid potential issues processing of these messages on the hubSDK.\n    args: [],\n    data: message,\n  };\n}\n\n/**\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction createMessageResponse(\n  id: MessageID,\n  uuid?: MessageUUID,\n  args?: any[] | undefined,\n  isPartialResponse?: boolean,\n): MessageResponse {\n  return {\n    id: id,\n    uuid: uuid,\n    args: args || [],\n    isPartialResponse,\n  };\n}\n\n/**\n * @hidden\n * Creates a message object without any id and api version, used for custom actions being sent to child frame/window\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction createMessageEvent(func: string, args?: any[]): MessageRequest {\n  return {\n    func: func,\n    args: args || [],\n  };\n}\n\nfunction getMessageIdsAsLogString(\n  message:\n    | SerializedMessageRequest\n    | SerializedMessageResponse\n    | MessageRequestWithRequiredProperties\n    | MessageRequest\n    | MessageResponse\n    | NestedAppAuthRequest,\n): string {\n  if ('uuidAsString' in message) {\n    return `${message.uuidAsString} (legacy id: ${message.id})`;\n  } else if ('uuid' in message && message.uuid !== undefined) {\n    return `${message.uuid.toString()} (legacy id: ${message.id})`;\n  } else {\n    return `legacy id: ${message.id} (no uuid)`;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { errorNotSupportedOnPlatform } from '../public/constants';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n * Namespace to interact with the logging part of the SDK.\n * This object is used to send the app logs on demand to the host client\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst logsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace logs {\n  /**\n   * @hidden\n   *\n   * Registers a handler for getting app log\n   *\n   * @param handler - The handler to invoke to get the app log\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerGetLogHandler(handler: () => string): void {\n    // allow for registration cleanup even when not finished initializing\n    !isNullOrUndefined(handler) && ensureInitialized(runtime);\n    if (!isNullOrUndefined(handler) && !isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (handler) {\n      registerHandler(\n        getApiVersionTag(logsTelemetryVersionNumber, ApiName.Logs_RegisterLogRequestHandler),\n        'log.request',\n        () => {\n          const log: string = handler();\n          sendMessageToParent(getApiVersionTag(logsTelemetryVersionNumber, ApiName.Logs_Receive), 'log.receive', [log]);\n        },\n      );\n    } else {\n      removeHandler('log.request');\n    }\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the logs capability is supported by the host\n   * @returns boolean to represent whether the logs capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.logs ? true : false;\n  }\n}\n","import { FileOpenPreference, TeamInformation } from '../public/interfaces';\n\n/**\n * @hidden\n *\n * Information about all members in a chat\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface ChatMembersInformation {\n  members: ThreadMember[];\n}\n\n/**\n * @hidden\n *\n * Information about a chat member\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface ThreadMember {\n  /**\n   * @hidden\n   * The member's user principal name in the current tenant.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  upn: string;\n}\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport enum NotificationTypes {\n  fileDownloadStart = 'fileDownloadStart',\n  fileDownloadComplete = 'fileDownloadComplete',\n}\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface ShowNotificationParameters {\n  message: string;\n  notificationType: NotificationTypes;\n}\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport enum ViewerActionTypes {\n  view = 'view',\n  edit = 'edit',\n  editNew = 'editNew',\n}\n\n/**\n * @hidden\n *\n * User setting changes that can be subscribed to\n */\nexport enum UserSettingTypes {\n  /**\n   * @hidden\n   * Use this key to subscribe to changes in user's file open preference\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  fileOpenPreference = 'fileOpenPreference',\n  /**\n   * @hidden\n   * Use this key to subscribe to theme changes\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  theme = 'theme',\n}\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface FilePreviewParameters {\n  /**\n   * @hidden\n   * The developer-defined unique ID for the file.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  entityId?: string;\n\n  /**\n   * @hidden\n   * The display name of the file.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  title?: string;\n\n  /**\n   * @hidden\n   * An optional description of the file.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  description?: string;\n\n  /**\n   * @hidden\n   * The file extension; e.g. pptx, docx, etc.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  type: string;\n\n  /**\n   * @hidden\n   * The size of the file in bytes.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  sizeInBytes?: number;\n\n  /**\n   * @hidden\n   * A url to the source of the file, used to open the content in the user's default browser\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  objectUrl: string;\n\n  /**\n   * @hidden\n   * Optional; an alternate self-authenticating url used to preview the file in Mobile clients and offer it for download by the user\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  downloadUrl?: string;\n\n  /**\n   * @hidden\n   * Optional; an alternate url optimized for previewing the file in web and desktop clients\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  webPreviewUrl?: string;\n\n  /**\n   * @hidden\n   * Optional; an alternate url that allows editing of the file in web and desktop clients\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  webEditUrl?: string;\n\n  /**\n   * @hidden\n   * Optional; the base url of the site where the file is hosted\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  baseUrl?: string;\n\n  /**\n   * @hidden\n   * Deprecated; prefer using {@linkcode viewerAction} instead\n   * Optional; indicates whether the file should be opened in edit mode\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  editFile?: boolean;\n\n  /**\n   * @hidden\n   * Optional; the developer-defined unique ID for the sub-entity to return to when the file stage closes.\n   * This field should be used to restore to a specific state within an entity, such as scrolling to or activating a specific piece of content.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  subEntityId?: string;\n\n  /**\n   * @hidden\n   * Optional; indicates the mode in which file should be opened. Takes precedence over edit mode.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  viewerAction?: ViewerActionTypes;\n\n  /**\n   * @hidden\n   * Optional; indicates how user prefers to open the file\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  fileOpenPreference?: FileOpenPreference;\n\n  /**\n   * @hidden\n   * Optional; id required to enable conversation button in files. Will be channel id in case file is shared in a channel or the chat id in p2p chat case.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  conversationId?: string;\n}\n\n/**\n * @hidden\n *\n * Query parameters used when fetching team information\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface TeamInstanceParameters {\n  /**\n   * @hidden\n   * Flag allowing to select favorite teams only\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  favoriteTeamsOnly?: boolean;\n}\n\n/**\n * @hidden\n *\n * Information on userJoined Teams\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface UserJoinedTeamsInformation {\n  /**\n   * @hidden\n   * List of team information\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  userJoinedTeams: TeamInformation[];\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Communication, sendMessageEventToChild, sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { FilePreviewParameters, UserSettingTypes } from './interfaces';\n\n/**\n * @hidden\n * Upload a custom App manifest directly to both team and personal scopes.\n * This method works just for the first party Apps.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst privateAPIsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport function uploadCustomApp(manifestBlob: Blob, onComplete?: (status: boolean, reason?: string) => void): void {\n  ensureInitialized(runtime);\n\n  sendMessageToParent(\n    getApiVersionTag(privateAPIsTelemetryVersionNumber, ApiName.PrivateAPIs_UploadCustomApp),\n    'uploadCustomApp',\n    [manifestBlob],\n    onComplete ? onComplete : getGenericOnCompleteHandler(),\n  );\n}\n\n/**\n * @hidden\n * Sends a custom action MessageRequest to host or parent window\n *\n * @param actionName - Specifies name of the custom action to be sent\n * @param args - Specifies additional arguments passed to the action\n * @param callback - Optionally specify a callback to receive response parameters from the parent\n * @returns id of sent message\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendCustomMessage(actionName: string, args?: any[], callback?: (...args: any[]) => void): void {\n  ensureInitialized(runtime);\n\n  sendMessageToParent(\n    getApiVersionTag(privateAPIsTelemetryVersionNumber, ApiName.PrivateAPIs_SendCustomMessage),\n    actionName,\n    args,\n    callback,\n  );\n}\n\n/**\n * @hidden\n * Sends a custom action MessageEvent to a child iframe/window, only if you are not using auth popup.\n * Otherwise it will go to the auth popup (which becomes the child)\n *\n * @param actionName - Specifies name of the custom action to be sent\n * @param args - Specifies additional arguments passed to the action\n * @returns id of sent message\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function sendCustomEvent(actionName: string, args?: any[]): void {\n  ensureInitialized(runtime);\n\n  //validate childWindow\n  if (!Communication.childWindow) {\n    throw new Error('The child window has not yet been initialized or is not present');\n  }\n  sendMessageEventToChild(actionName, args);\n}\n\n/**\n * @hidden\n * Adds a handler for an action sent by a child window or parent window\n *\n * @param actionName - Specifies name of the action message to handle\n * @param customHandler - The callback to invoke when the action message is received. The return value is sent to the child\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerCustomHandler(actionName: string, customHandler: (...args: any[]) => any[]): void {\n  ensureInitialized(runtime);\n  registerHandler(\n    getApiVersionTag(privateAPIsTelemetryVersionNumber, ApiName.PrivateAPIs_RegisterCustomHandler),\n    actionName,\n    (...args: any[]) => {\n      return customHandler.apply(this, args);\n    },\n  );\n}\n\n/**\n * @hidden\n * register a handler to be called when a user setting changes. The changed setting type & value is provided in the callback.\n *\n * @param settingTypes - List of user setting changes to subscribe\n * @param handler - When a subscribed setting is updated this handler is called\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function registerUserSettingsChangeHandler(\n  settingTypes: UserSettingTypes[],\n  handler: (settingType: UserSettingTypes, value: any) => void,\n): void {\n  ensureInitialized(runtime);\n\n  registerHandler(\n    getApiVersionTag(privateAPIsTelemetryVersionNumber, ApiName.PrivateAPIs_RegisterUserSettingsChangeHandler),\n    'userSettingsChange',\n    handler,\n    true,\n    [settingTypes],\n  );\n}\n\n/**\n * @hidden\n * Opens a client-friendly preview of the specified file.\n *\n * @param file - The file to preview.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function openFilePreview(filePreviewParameters: FilePreviewParameters): void {\n  ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n  const params = [\n    filePreviewParameters.entityId,\n    filePreviewParameters.title,\n    filePreviewParameters.description,\n    filePreviewParameters.type,\n    filePreviewParameters.objectUrl,\n    filePreviewParameters.downloadUrl,\n    filePreviewParameters.webPreviewUrl,\n    filePreviewParameters.webEditUrl,\n    filePreviewParameters.baseUrl,\n    filePreviewParameters.editFile,\n    filePreviewParameters.subEntityId,\n    filePreviewParameters.viewerAction,\n    filePreviewParameters.fileOpenPreference,\n    filePreviewParameters.conversationId,\n    filePreviewParameters.sizeInBytes,\n  ];\n\n  sendMessageToParent(\n    getApiVersionTag(privateAPIsTelemetryVersionNumber, ApiName.PrivateAPIs_OpenFilePreview),\n    'openFilePreview',\n    params,\n  );\n}\n","import { sendAndHandleStatusAndReason, sendAndUnwrap, sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { ChatMembersInformation } from './interfaces';\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst conversationsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport interface OpenConversationRequest {\n  /**\n   * @hidden\n   * The Id of the subEntity where the conversation is taking place\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  subEntityId: string;\n\n  /**\n   * @hidden\n   * The title of the conversation\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  title: string;\n\n  /**\n   * @hidden\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  conversationId?: string;\n\n  /**\n   * @hidden\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  channelId?: string;\n\n  /**\n   * @hidden\n   * The entity Id of the tab\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  entityId: string;\n\n  /**\n   * @hidden\n   * A function that is called once the conversation Id has been created\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  onStartConversation?: (conversationResponse: ConversationResponse) => void;\n\n  /**\n   * @hidden\n   * A function that is called if the pane is closed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  onCloseConversation?: (conversationResponse: ConversationResponse) => void;\n}\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport interface ConversationResponse {\n  /**\n   * @hidden\n   *\n   * Limited to Microsoft-internal use\n   * The Id of the subEntity where the conversation is taking place\n   */\n  subEntityId: string;\n\n  /**\n   * @hidden\n   * The Id of the conversation. This is optional and should be specified whenever a previous conversation about a specific sub-entity has already been started before\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  conversationId?: string;\n\n  /**\n   * @hidden\n   * The Id of the channel. This is optional and should be specified whenever a conversation is started or opened in a personal app scope\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  channelId?: string;\n\n  /**\n   * @hidden\n   * The entity Id of the tab\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  entityId?: string;\n}\n\n/**\n * @hidden\n * Namespace to interact with the conversational subEntities inside the tab\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace conversations {\n  /**\n   * @hidden\n   * Hide from docs\n   * --------------\n   * Allows the user to start or continue a conversation with each subentity inside the tab\n   *\n   * @returns Promise resolved upon completion\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function openConversation(openConversationRequest: OpenConversationRequest): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      const sendPromise = sendAndHandleStatusAndReason(\n        getApiVersionTag(conversationsTelemetryVersionNumber, ApiName.Conversations_OpenConversation),\n        'conversations.openConversation',\n        {\n          title: openConversationRequest.title,\n          subEntityId: openConversationRequest.subEntityId,\n          conversationId: openConversationRequest.conversationId,\n          channelId: openConversationRequest.channelId,\n          entityId: openConversationRequest.entityId,\n        },\n      );\n      if (openConversationRequest.onStartConversation) {\n        registerHandler(\n          getApiVersionTag(conversationsTelemetryVersionNumber, ApiName.Conversations_RegisterStartConversationHandler),\n          'startConversation',\n          (subEntityId: string, conversationId: string, channelId: string, entityId: string) =>\n            openConversationRequest.onStartConversation?.({\n              subEntityId,\n              conversationId,\n              channelId,\n              entityId,\n            }),\n        );\n      }\n      if (openConversationRequest.onCloseConversation) {\n        registerHandler(\n          getApiVersionTag(conversationsTelemetryVersionNumber, ApiName.Conversations_RegisterCloseConversationHandler),\n          'closeConversation',\n          (subEntityId: string, conversationId?: string, channelId?: string, entityId?: string) =>\n            openConversationRequest.onCloseConversation?.({\n              subEntityId,\n              conversationId,\n              channelId,\n              entityId,\n            }),\n        );\n      }\n      resolve(sendPromise);\n    });\n  }\n\n  /**\n   * @hidden\n   *\n   * Allows the user to close the conversation in the right pane\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function closeConversation(): void {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(conversationsTelemetryVersionNumber, ApiName.Conversations_CloseConversation),\n      'conversations.closeConversation',\n    );\n    removeHandler('startConversation');\n    removeHandler('closeConversation');\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   * Allows retrieval of information for all chat members.\n   * NOTE: This value should be used only as a hint as to who the members are\n   * and never as proof of membership in case your app is being hosted by a malicious party.\n   *\n   * @returns Promise resolved with information on all chat members\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getChatMembers(): Promise<ChatMembersInformation> {\n    return new Promise<ChatMembersInformation>((resolve) => {\n      ensureInitialized(runtime);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      resolve(\n        sendAndUnwrap(\n          getApiVersionTag(conversationsTelemetryVersionNumber, ApiName.Conversations_GetChatMember),\n          'getChatMembers',\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if the conversations capability is supported by the host\n   * @returns boolean to represent whether conversations capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.conversations ? true : false;\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { errorNotSupportedOnPlatform } from '../public/constants';\nimport { AppEligibilityInformation } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * @beta\n * @hidden\n * Namespace to delegate copilot app specific APIs\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace copilot {\n  /**\n   * @beta\n   * @hidden\n   * User information required by specific apps\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export namespace eligibility {\n    /**\n     * @hidden\n     * @internal\n     * Limited to Microsoft-internal use\n     * @beta\n     * @returns boolean to represent whether copilot.eligibility capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && !!runtime.hostVersionsInfo?.appEligibilityInformation;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * Limited to Microsoft-internal use\n     * @beta\n     * @returns the copilot eligibility information about the user\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function getEligibilityInfo(): AppEligibilityInformation {\n      ensureInitialized(runtime);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      return runtime.hostVersionsInfo!.appEligibilityInformation!;\n    }\n  }\n}\n","import { sendMessageToParentAsync } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { validateId, validateUrl } from '../internal/utils';\nimport { AppId } from '../public';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst externalAppAuthenticationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Namespace to delegate authentication and message extension requests to the host\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace externalAppAuthentication {\n  /*********** BEGIN REQUEST TYPE ************/\n  /**\n   * @hidden\n   * Information about the bot request that should be resent by the host\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type IOriginalRequestInfo = IQueryMessageExtensionRequest | IActionExecuteInvokeRequest;\n\n  /**\n   * @hidden\n   * Parameters OauthWindow\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type OauthWindowProperties = {\n    /**\n     * The preferred width for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    width?: number;\n    /**\n     * The preferred height for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    height?: number;\n    /**\n     * Some identity providers restrict their authentication pages from being displayed in embedded browsers (e.g., a web view inside of a native application)\n     * If the identity provider you are using prevents embedded browser usage, this flag should be set to `true` to enable the authentication page\n     * to be opened in an external browser. If this flag is `false`, the page will be opened directly within the current hosting application.\n     *\n     * This flag is ignored when the host for the application is a web app (as opposed to a native application) as the behavior is unnecessary in a web-only\n     * environment without an embedded browser.\n     */\n    isExternal?: boolean;\n  };\n  /**\n   * @hidden\n   * Parameters for the authentication pop-up. This interface is used exclusively with the externalAppAuthentication APIs\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type AuthenticatePopUpParameters = {\n    /**\n     * The URL for the authentication pop-up.\n     */\n    url: URL;\n    /**\n     * The preferred width for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    width?: number;\n    /**\n     * The preferred height for the pop-up. This value can be ignored if outside the acceptable bounds.\n     */\n    height?: number;\n    /**\n     * Some identity providers restrict their authentication pages from being displayed in embedded browsers (e.g., a web view inside of a native application)\n     * If the identity provider you are using prevents embedded browser usage, this flag should be set to `true` to enable the authentication page specified in\n     * the {@link url} property to be opened in an external browser.\n     * If this flag is `false`, the page will be opened directly within the current hosting application.\n     *\n     * This flag is ignored when the host for the application is a web app (as opposed to a native application) as the behavior is unnecessary in a web-only\n     * environment without an embedded browser.\n     */\n    isExternal?: boolean;\n  };\n\n  /**\n   * @hidden\n   * Parameters for SSO authentication. This interface is used exclusively with the externalAppAuthentication APIs\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type AuthTokenRequestParameters = {\n    /**\n     * An optional list of claims which to pass to Microsoft Entra when requesting the access token.\n     */\n    claims?: string[];\n    /**\n     * An optional flag indicating whether to attempt the token acquisition silently or allow a prompt to be shown.\n     */\n    silent?: boolean;\n  };\n\n  /**\n   * @hidden\n   * Information about the message extension request that should be resent by the host. Corresponds to request schema in https://learn.microsoft.com/microsoftteams/platform/resources/messaging-extension-v3/search-extensions#receive-user-requests\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IQueryMessageExtensionRequest {\n    requestType: OriginalRequestType.QueryMessageExtensionRequest;\n    commandId: string;\n    parameters: {\n      name: string;\n      value: string;\n    }[];\n    queryOptions?: {\n      count: number;\n      skip: number;\n    };\n  }\n\n  /**\n   * @hidden\n   * Information about the Action.Execute request that should be resent by the host. Corresponds to schema in https://adaptivecards.io/explorer/Action.Execute.html\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IActionExecuteInvokeRequest {\n    requestType: OriginalRequestType.ActionExecuteInvokeRequest;\n    type: string; // This must be \"Action.Execute\"\n    id: string; // The unique identifier associated with the action\n    verb: string; // The card author defined verb associated with the action\n    data: string | Record<string, unknown>;\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Determines if the provided response object is an instance of IActionExecuteResponse\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param response The object to check whether it is of IActionExecuteResponse type\n   */\n  export function isActionExecuteResponse(\n    response: unknown,\n  ): response is externalAppAuthentication.IActionExecuteResponse {\n    const actionResponse = response as externalAppAuthentication.IActionExecuteResponse;\n\n    return (\n      actionResponse.responseType === externalAppAuthentication.InvokeResponseType.ActionExecuteInvokeResponse &&\n      actionResponse.value !== undefined &&\n      actionResponse.statusCode !== undefined &&\n      actionResponse.type !== undefined\n    );\n  }\n\n  /**\n   * @hidden\n   * This is the only allowed value for IActionExecuteInvokeRequest.type. Used for validation\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export const ActionExecuteInvokeRequestType = 'Action.Execute';\n\n  /**\n   * @hidden\n   * Used to differentiate between IOriginalRequestInfo types\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum OriginalRequestType {\n    ActionExecuteInvokeRequest = 'ActionExecuteInvokeRequest',\n    QueryMessageExtensionRequest = 'QueryMessageExtensionRequest',\n  }\n  /*********** END REQUEST TYPE ************/\n\n  /*********** BEGIN RESPONSE TYPE ************/\n  /**\n   * @hidden\n   * The response from the bot returned via the host\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type IInvokeResponse = IQueryMessageExtensionResponse | IActionExecuteResponse;\n\n  /**\n   * @hidden\n   * Used to differentiate between IInvokeResponse types\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum InvokeResponseType {\n    ActionExecuteInvokeResponse = 'ActionExecuteInvokeResponse',\n    QueryMessageExtensionResponse = 'QueryMessageExtensionResponse',\n  }\n\n  /**\n   * @hidden\n   * The response from the bot returned via the host for a message extension query request.\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IQueryMessageExtensionResponse {\n    responseType: InvokeResponseType.QueryMessageExtensionResponse;\n    composeExtension?: ComposeExtensionResponse;\n  }\n\n  /**\n   * @hidden\n   * The response from the bot returned via the host for an Action.Execute request.\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IActionExecuteResponse {\n    responseType: InvokeResponseType.ActionExecuteInvokeResponse;\n    value: Record<string, unknown>;\n    signature?: string;\n    statusCode: number;\n    type: string;\n  }\n\n  /**\n   * @hidden\n   * The compose extension response returned for a message extension query request. `suggestedActions` will be present only when the type is is 'config' or 'auth'.\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type ComposeExtensionResponse = {\n    attachmentLayout: AttachmentLayout;\n    type: ComposeResultTypes;\n    attachments?: QueryMessageExtensionAttachment[];\n    suggestedActions?: QueryMessageExtensionSuggestedActions;\n    text?: string;\n  };\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type QueryMessageExtensionSuggestedActions = {\n    actions: Action[];\n  };\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type Action = {\n    type: string;\n    title: string;\n    value: string;\n  };\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type QueryMessageExtensionCard = {\n    contentType: string;\n    content: Record<string, unknown>;\n    fallbackHtml?: string;\n    signature?: string;\n  };\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type QueryMessageExtensionAttachment = QueryMessageExtensionCard & {\n    preview?: QueryMessageExtensionCard;\n  };\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type AttachmentLayout = 'grid' | 'list';\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type ComposeResultTypes = 'auth' | 'config' | 'message' | 'result' | 'silentAuth';\n  /*********** END RESPONSE TYPE ************/\n\n  /*********** BEGIN ERROR TYPE ***********/\n  export interface InvokeError {\n    errorCode: InvokeErrorCode;\n    message?: string;\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Determines if the provided error object is an instance of InvokeError\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param err The error object to check whether it is of InvokeError type\n   */\n  export function isInvokeError(err: unknown): err is externalAppAuthentication.InvokeError {\n    if (typeof err !== 'object' || err === null) {\n      return false;\n    }\n\n    const error = err as externalAppAuthentication.InvokeError;\n\n    return (\n      Object.values(externalAppAuthentication.InvokeErrorCode).includes(error.errorCode) &&\n      (error.message === undefined || typeof error.message === 'string')\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum InvokeErrorCode {\n    INTERNAL_ERROR = 'INTERNAL_ERROR', // Generic error\n  }\n\n  /**\n   * @hidden\n   * Wrapper to differentiate between InvokeError and IInvokeResponse response from host\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type InvokeErrorWrapper = InvokeError & { responseType: undefined };\n\n  /*********** END ERROR TYPE ***********/\n\n  /**\n   * @hidden\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  function validateOriginalRequestInfo(originalRequestInfo: IOriginalRequestInfo): void {\n    if (originalRequestInfo.requestType === OriginalRequestType.ActionExecuteInvokeRequest) {\n      const actionExecuteRequest = originalRequestInfo as IActionExecuteInvokeRequest;\n      if (actionExecuteRequest.type !== ActionExecuteInvokeRequestType) {\n        const error: InvokeError = {\n          errorCode: InvokeErrorCode.INTERNAL_ERROR,\n          message: `Invalid action type ${actionExecuteRequest.type}. Action type must be \"${ActionExecuteInvokeRequestType}\"`,\n        };\n        throw error;\n      }\n    } else if (originalRequestInfo.requestType === OriginalRequestType.QueryMessageExtensionRequest) {\n      if (originalRequestInfo.commandId.length > 64) {\n        throw new Error('originalRequestInfo.commandId exceeds the maximum size of 64 characters');\n      }\n      if (originalRequestInfo.parameters.length > 5) {\n        throw new Error('originalRequestInfo.parameters exceeds the maximum size of 5');\n      }\n      for (const parameter of originalRequestInfo.parameters) {\n        if (parameter.name.length > 64) {\n          throw new Error('originalRequestInfo.parameters.name exceeds the maximum size of 64 characters');\n        }\n        if (parameter.value.length > 512) {\n          throw new Error('originalRequestInfo.parameters.value exceeds the maximum size of 512 characters');\n        }\n      }\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform authentication using the given authentication parameters and then resend the request to the application specified by the app ID with the authentication result.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application backend to which the request and authentication response should be sent. This must be a UUID\n   * @param authenticateParameters Parameters for the authentication pop-up\n   * @param originalRequestInfo Information about the original request that should be resent\n   * @returns A promise that resolves to the IInvokeResponse from the application backend and rejects with InvokeError if the host encounters an error while authenticating or resending the request\n   */\n  export function authenticateAndResendRequest(\n    appId: string,\n    authenticateParameters: AuthenticatePopUpParameters,\n    originalRequestInfo: IOriginalRequestInfo,\n  ): Promise<IInvokeResponse> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n    validateOriginalRequestInfo(originalRequestInfo);\n\n    // Ask the parent window to open an authentication window with the parameters provided by the caller.\n    return sendMessageToParentAsync<[boolean, IInvokeResponse | InvokeErrorWrapper]>(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthentication_AuthenticateAndResendRequest,\n      ),\n      'externalAppAuthentication.authenticateAndResendRequest',\n      [\n        typeSafeAppId.toString(),\n        originalRequestInfo,\n        authenticateParameters.url.href,\n        authenticateParameters.width,\n        authenticateParameters.height,\n        authenticateParameters.isExternal,\n      ],\n    ).then(([wasSuccessful, response]: [boolean, IInvokeResponse | InvokeErrorWrapper]) => {\n      if (wasSuccessful && response.responseType != null) {\n        return response as IInvokeResponse;\n      } else {\n        const error = response as InvokeError;\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform SSO authentication for the application specified by the app ID\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application backend for which the host should attempt SSO authentication. This must be a UUID\n   * @param authTokenRequest Parameters for SSO authentication\n   * @returns A promise that resolves when authentication and succeeds and rejects with InvokeError on failure\n   */\n  export function authenticateWithSSO(appId: string, authTokenRequest: AuthTokenRequestParameters): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n\n    return sendMessageToParentAsync(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthentication_AuthenticateWithSSO,\n      ),\n      'externalAppAuthentication.authenticateWithSSO',\n      [typeSafeAppId.toString(), authTokenRequest.claims, authTokenRequest.silent],\n    ).then(([wasSuccessful, error]: [boolean, InvokeError]) => {\n      if (!wasSuccessful) {\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform SSO authentication for the application specified by the app ID and then resend the request to the application backend with the authentication result\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application backend for which the host should attempt SSO authentication and resend the request and authentication response. This must be a UUID.\n   * @param authTokenRequest Parameters for SSO authentication\n   * @param originalRequestInfo Information about the original request that should be resent\n   * @returns A promise that resolves to the IInvokeResponse from the application backend and rejects with InvokeError if the host encounters an error while authenticating or resending the request\n   */\n  export function authenticateWithSSOAndResendRequest(\n    appId: string,\n    authTokenRequest: AuthTokenRequestParameters,\n    originalRequestInfo: IOriginalRequestInfo,\n  ): Promise<IInvokeResponse> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n\n    validateOriginalRequestInfo(originalRequestInfo);\n\n    return sendMessageToParentAsync<[boolean, IInvokeResponse | InvokeErrorWrapper]>(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthentication_AuthenticateWithSSOAndResendRequest,\n      ),\n      'externalAppAuthentication.authenticateWithSSOAndResendRequest',\n      [typeSafeAppId.toString(), originalRequestInfo, authTokenRequest.claims, authTokenRequest.silent],\n    ).then(([wasSuccessful, response]: [boolean, IInvokeResponse | InvokeErrorWrapper]) => {\n      if (wasSuccessful && response.responseType != null) {\n        return response as IInvokeResponse;\n      } else {\n        const error = response as InvokeError;\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform Oauth2 authentication for the application specified by the title ID\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param titleId ID of the acquisition\n   * @param oauthConfigId lookup ID in token store\n   * @param oauthWindowParameters parameters for the signIn window\n   * @returns A promise that resolves when authentication succeeds and rejects with InvokeError on failure\n   */\n  export function authenticateWithOauth2(\n    titleId: string,\n    oauthConfigId: string,\n    oauthWindowParameters: OauthWindowProperties,\n  ): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(titleId, new Error('titleId is Invalid.'));\n    validateId(oauthConfigId, new Error('oauthConfigId is Invalid.'));\n\n    return sendMessageToParentAsync(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthentication_AuthenticateWithOauth2,\n      ),\n      'externalAppAuthentication.authenticateWithOauth2',\n      [\n        titleId,\n        oauthConfigId,\n        oauthWindowParameters.width,\n        oauthWindowParameters.height,\n        oauthWindowParameters.isExternal,\n      ],\n    ).then(([wasSuccessful, error]: [boolean, InvokeError]) => {\n      if (!wasSuccessful) {\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * API to authenticate power platform connector plugins\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param titleId ID of the acquisition\n   * @param signInUrl signInUrl for the connctor page listing the connector. This is optional\n   * @param oauthWindowParameters parameters for the signIn window\n   * @returns A promise that resolves when authentication succeeds and rejects with InvokeError on failure\n   */\n  export function authenticateWithPowerPlatformConnectorPlugins(\n    titleId: string,\n    signInUrl?: URL,\n    oauthWindowParameters?: OauthWindowProperties,\n  ): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(titleId, new Error('titleId is Invalid.'));\n\n    if (signInUrl) {\n      validateUrl(signInUrl);\n    }\n\n    return sendMessageToParentAsync(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthentication_AuthenticateWithPowerPlatformConnectorPlugins,\n      ),\n      'externalAppAuthentication.authenticateWithPowerPlatformConnectorPlugins',\n      [\n        titleId,\n        signInUrl?.toString(),\n        oauthWindowParameters?.width,\n        oauthWindowParameters?.height,\n        oauthWindowParameters?.isExternal,\n      ],\n    ).then(([wasSuccessful, error]: [boolean, InvokeError]) => {\n      if (!wasSuccessful) {\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   * Checks if the externalAppAuthentication capability is supported by the host\n   * @returns boolean to represent whether externalAppAuthentication capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.externalAppAuthentication ? true : false;\n  }\n}\n","import { sendAndUnwrap } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { validateId } from '../internal/utils';\nimport { AppId } from '../public';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { externalAppAuthentication } from './externalAppAuthentication';\n\nconst externalAppAuthenticationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Namespace to delegate authentication requests to the host for custom engine agents\n * @internal\n * Limited to Microsoft-internal use\n * @beta\n */\nexport namespace externalAppAuthenticationForCEA {\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform SSO authentication for the application specified by the app ID, and then send the authResult to the application backend.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId App ID of the app upon whose behalf Copilot is requesting authentication. This must be a UUID.\n   * @param conversationId ConversationId To tell the bot what conversation the calls are coming from\n   * @param authTokenRequest Parameters for SSO authentication\n   * @throws InvokeError if the host encounters an error while authenticating\n   * @returns A promise that resolves when authentication succeeds and rejects with InvokeError on failure\n   */\n  export async function authenticateWithSSO(\n    appId: AppId,\n    conversationId: string,\n    authTokenRequest: externalAppAuthentication.AuthTokenRequestParameters,\n  ): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(conversationId, new Error('conversation id is not valid.'));\n\n    const error = await sendAndUnwrap<externalAppAuthentication.InvokeError | undefined>(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithSSO,\n      ),\n      ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithSSO,\n      appId.toString(),\n      conversationId,\n      authTokenRequest.claims,\n      authTokenRequest.silent,\n    );\n    if (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform authentication using the given authentication parameters and then send the auth result to the application backend.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId App ID of the app upon whose behalf Copilot is requesting authentication. This must be a UUID.\n   * @param conversationId ConversationId To tell the bot what conversation the calls are coming from\n   * @param authenticateParameters Parameters for the authentication pop-up\n   * @throws InvokeError if the host encounters an error while authenticating\n   * @returns A promise that resolves from the application backend and rejects with InvokeError if the host encounters an error while authenticating\n   */\n  export async function authenticateWithOauth(\n    appId: AppId,\n    conversationId: string,\n    authenticateParameters: externalAppAuthentication.AuthenticatePopUpParameters,\n  ): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(conversationId, new Error('conversation id is not valid.'));\n\n    // Ask the parent window to open an authentication window with the parameters provided by the caller.\n    const error = await sendAndUnwrap<externalAppAuthentication.InvokeError | undefined>(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithOauth,\n      ),\n      ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithOauth,\n      appId.toString(),\n      conversationId,\n      authenticateParameters.url.href,\n      authenticateParameters.width,\n      authenticateParameters.height,\n      authenticateParameters.isExternal,\n    );\n    if (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform authentication using the given authentication parameters and then resend the request to the application backend with the authentication result.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId App ID of the app upon whose behalf Copilot is requesting authentication. This must be a UUID.\n   * @param conversationId ConversationId To tell the bot what conversation the calls are coming from\n   * @param authenticateParameters Parameters for the authentication pop-up\n   * @param originalRequestInfo Information about the original request that should be resent\n   * @throws InvokeError if the host encounters an error while authenticating or resending the request\n   * @returns A promise that resolves to the IActionExecuteResponse from the application backend and rejects with InvokeError if the host encounters an error while authenticating or resending the request\n   */\n  export async function authenticateAndResendRequest(\n    appId: AppId,\n    conversationId: string,\n    authenticateParameters: externalAppAuthentication.AuthenticatePopUpParameters,\n    originalRequestInfo: externalAppAuthentication.IActionExecuteInvokeRequest,\n  ): Promise<externalAppAuthentication.IActionExecuteResponse> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(conversationId, new Error('conversation id is not valid.'));\n\n    validateOriginalRequestInfo(originalRequestInfo);\n\n    // Ask the parent window to open an authentication window with the parameters provided by the caller.\n    const response = await sendAndUnwrap<\n      externalAppAuthentication.InvokeError | externalAppAuthentication.IActionExecuteResponse\n    >(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthenticationForCEA_AuthenticateAndResendRequest,\n      ),\n      ApiName.ExternalAppAuthenticationForCEA_AuthenticateAndResendRequest,\n      appId.toString(),\n      conversationId,\n      originalRequestInfo,\n      authenticateParameters.url.href,\n      authenticateParameters.width,\n      authenticateParameters.height,\n      authenticateParameters.isExternal,\n    );\n    if (externalAppAuthentication.isActionExecuteResponse(response)) {\n      return response;\n    } else {\n      throw externalAppAuthentication.isInvokeError(response) ? response : defaultExternalAppError;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Signals to the host to perform SSO authentication for the application specified by the app ID and then resend the request to the application backend with the authentication result and originalRequestInfo\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId App ID of the app upon whose behalf Copilot is requesting authentication. This must be a UUID.\n   * @param conversationId ConversationId To tell the bot what conversation the calls are coming from\n   * @param authTokenRequest Parameters for SSO authentication\n   * @param originalRequestInfo Information about the original request that should be resent\n   * @throws InvokeError if the host encounters an error while authenticating or resending the request\n   * @returns A promise that resolves to the IActionExecuteResponse from the application backend and rejects with InvokeError if the host encounters an error while authenticating or resending the request\n   */\n  export async function authenticateWithSSOAndResendRequest(\n    appId: AppId,\n    conversationId: string,\n    authTokenRequest: externalAppAuthentication.AuthTokenRequestParameters,\n    originalRequestInfo: externalAppAuthentication.IActionExecuteInvokeRequest,\n  ): Promise<externalAppAuthentication.IActionExecuteResponse> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    validateId(conversationId, new Error('conversation id is not valid.'));\n\n    validateOriginalRequestInfo(originalRequestInfo);\n\n    const response = await sendAndUnwrap<\n      externalAppAuthentication.IActionExecuteResponse | externalAppAuthentication.InvokeError\n    >(\n      getApiVersionTag(\n        externalAppAuthenticationTelemetryVersionNumber,\n        ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithSSOAndResendRequest,\n      ),\n      ApiName.ExternalAppAuthenticationForCEA_AuthenticateWithSSOAndResendRequest,\n      appId.toString(),\n      conversationId,\n      originalRequestInfo,\n      authTokenRequest.claims,\n      authTokenRequest.silent,\n    );\n    if (externalAppAuthentication.isActionExecuteResponse(response)) {\n      return response;\n    } else {\n      throw externalAppAuthentication.isInvokeError(response) ? response : defaultExternalAppError;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Checks if the externalAppAuthenticationForCEA capability is supported by the host\n   * @returns boolean to represent whether externalAppAuthenticationForCEA capability is supported\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.externalAppAuthenticationForCEA ? true : false;\n  }\n\n  /**\n   * @hidden\n   * @internal\n   * Limited to Microsoft-internal use\n   * @beta\n   */\n  function validateOriginalRequestInfo(\n    actionExecuteRequest: externalAppAuthentication.IActionExecuteInvokeRequest,\n  ): void {\n    if (actionExecuteRequest.type !== externalAppAuthentication.ActionExecuteInvokeRequestType) {\n      const error: externalAppAuthentication.InvokeError = {\n        errorCode: externalAppAuthentication.InvokeErrorCode.INTERNAL_ERROR,\n        message: `Invalid action type ${actionExecuteRequest.type}. Action type must be \"${externalAppAuthentication.ActionExecuteInvokeRequestType}\"`,\n      };\n      throw error;\n    }\n  }\n\n  /**\n   * @hidden\n   * @internal\n   * Limited to Microsoft-internal use\n   * @beta\n   */\n  const defaultExternalAppError = {\n    errorCode: externalAppAuthentication.InvokeErrorCode.INTERNAL_ERROR,\n    message: 'No valid response received',\n  };\n}\n","import { sendMessageToParentAsync } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { AppId } from '../public';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { ExternalAppErrorCode } from './constants';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst externalAppCardActionsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Namespace to delegate adaptive card action execution to the host\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace externalAppCardActions {\n  /**\n   * @hidden\n   * The type of deeplink action that was executed by the host\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum ActionOpenUrlType {\n    DeepLinkDialog = 'DeepLinkDialog',\n    DeepLinkOther = 'DeepLinkOther',\n    DeepLinkStageView = 'DeepLinkStageView',\n    GenericUrl = 'GenericUrl',\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Error that can be thrown from IExternalAppCardActionService.handleActionOpenUrl\n   * and IExternalAppCardActionForCEAService.handleActionOpenUrl\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ActionOpenUrlError {\n    errorCode: ActionOpenUrlErrorCode;\n    message?: string;\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Error codes that can be thrown from IExternalAppCardActionService.handleActionOpenUrl\n   * and IExternalAppCardActionForCEAService.handleActionOpenUrl\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum ActionOpenUrlErrorCode {\n    INTERNAL_ERROR = 'INTERNAL_ERROR', // Generic error\n    INVALID_LINK = 'INVALID_LINK', // Deep link is invalid\n    NOT_SUPPORTED = 'NOT_SUPPORTED', // Deep link is not supported\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * The payload that is used when executing an Adaptive Card Action.Submit\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IAdaptiveCardActionSubmit {\n    id: string;\n    data: string | Record<string, unknown>;\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Error that can be thrown from IExternalAppCardActionService.handleActionSubmit\n   * and IExternalAppCardActionForCEAService.handleActionSubmit\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ActionSubmitError {\n    errorCode: ExternalAppErrorCode;\n    message?: string;\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Delegates an Adaptive Card Action.Submit request to the host for the application with the provided app ID\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application the request is intended for. This must be a UUID\n   * @param actionSubmitPayload The Adaptive Card Action.Submit payload\n   * @param cardActionsConfig The card actions configuration. This indicates which subtypes should be handled by this API\n   * @returns Promise that resolves when the request is completed and rejects with ActionSubmitError if the request fails\n   */\n  export function processActionSubmit(appId: string, actionSubmitPayload: IAdaptiveCardActionSubmit): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n\n    return sendMessageToParentAsync<[boolean, ActionSubmitError]>(\n      getApiVersionTag(\n        externalAppCardActionsTelemetryVersionNumber,\n        ApiName.ExternalAppCardActions_ProcessActionSubmit,\n      ),\n      'externalAppCardActions.processActionSubmit',\n      [typeSafeAppId.toString(), actionSubmitPayload],\n    ).then(([wasSuccessful, error]: [boolean, ActionSubmitError]) => {\n      if (!wasSuccessful) {\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Delegates an Adaptive Card Action.OpenUrl request to the host for the application with the provided app ID.\n   * If `fromElement` is not provided, the information from the manifest is used to determine whether the URL can\n   * be processed by the host. Deep link URLs for plugins are not supported and will result in an error.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application the request is intended for. This must be a UUID\n   * @param url The URL to open\n   * @param fromElement The element on behalf of which the M365 app is making the request.\n   * @returns Promise that resolves to ActionOpenUrlType indicating the type of URL that was opened on success and rejects with ActionOpenUrlError if the request fails\n   */\n  export function processActionOpenUrl(\n    appId: string,\n    url: URL,\n    fromElement?: { name: 'composeExtensions' | 'plugins' },\n  ): Promise<ActionOpenUrlType> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n    return sendMessageToParentAsync<[ActionOpenUrlError, ActionOpenUrlType]>(\n      getApiVersionTag(\n        externalAppCardActionsTelemetryVersionNumber,\n        ApiName.ExternalAppCardActions_ProcessActionOpenUrl,\n      ),\n      'externalAppCardActions.processActionOpenUrl',\n      [typeSafeAppId.toString(), url.href, fromElement],\n    ).then(([error, response]: [ActionOpenUrlError, ActionOpenUrlType]) => {\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   * Checks if the externalAppCardActions capability is supported by the host\n   * @returns boolean to represent whether externalAppCardActions capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.externalAppCardActions ? true : false;\n  }\n}\n","import { sendAndUnwrap, sendMessageToParentAsync } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { validateId } from '../internal/utils';\nimport { AppId } from '../public';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { externalAppCardActions } from './externalAppCardActions';\n\n/**\n * All of APIs in this capability file should send out API version v2 ONLY\n */\nconst externalAppCardActionsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n/**\n * @beta\n * @hidden\n * Namespace to delegate adaptive card action for Custom Engine Agent execution to the host\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace externalAppCardActionsForCEA {\n  /**\n   * @beta\n   * @hidden\n   * Delegates an Adaptive Card Action.OpenUrl request to the host for the application with the provided app ID.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application the request is intended for. This must be a UUID\n   * @param conversationId To tell the bot what conversation the calls are coming from\n   * @param url The URL to open\n   * @throws Error if the response has not successfully completed\n   * @returns Promise that resolves to ActionOpenUrlType indicating the type of URL that was opened on success and rejects with ActionOpenUrlError if the request fails\n   */\n  export async function processActionOpenUrl(\n    appId: AppId,\n    conversationId: string,\n    url: URL,\n  ): Promise<externalAppCardActions.ActionOpenUrlType> {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    validateId(conversationId, new Error('conversation id is not valid.'));\n    const [error, response] = await sendMessageToParentAsync<\n      [externalAppCardActions.ActionOpenUrlError, externalAppCardActions.ActionOpenUrlType]\n    >(\n      getApiVersionTag(\n        externalAppCardActionsTelemetryVersionNumber,\n        ApiName.ExternalAppCardActionsForCEA_ProcessActionOpenUrl,\n      ),\n      ApiName.ExternalAppCardActionsForCEA_ProcessActionOpenUrl,\n      [appId.toString(), conversationId, url.href],\n    );\n    if (error) {\n      throw error;\n    } else {\n      return response;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Delegates an Adaptive Card Action.Submit request to the host for the application with the provided app ID\n   * @internal\n   * Limited to Microsoft-internal use\n   * @param appId ID of the application the request is intended for. This must be a UUID\n   * @param conversationId To tell the bot what conversation the calls are coming from\n   * @param actionSubmitPayload The Adaptive Card Action.Submit payload\n   * @throws Error if host notifies of an error\n   * @returns Promise that resolves when the request is completed and rejects with ActionSubmitError if the request fails\n   */\n  export async function processActionSubmit(\n    appId: AppId,\n    conversationId: string,\n    actionSubmitPayload: externalAppCardActions.IAdaptiveCardActionSubmit,\n  ): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    validateId(conversationId, new Error('conversation id is not valid.'));\n    const error = await sendAndUnwrap<externalAppCardActions.ActionSubmitError | undefined>(\n      getApiVersionTag(\n        externalAppCardActionsTelemetryVersionNumber,\n        ApiName.ExternalAppCardActionsForCEA_ProcessActionSubmit,\n      ),\n      ApiName.ExternalAppCardActionsForCEA_ProcessActionSubmit,\n      appId.toString(),\n      conversationId,\n      actionSubmitPayload,\n    );\n    if (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * @beta\n   * @hidden\n   * Checks if the externalAppCardActionsForCEA capability is supported by the host\n   * @returns boolean to represent whether externalAppCardActions capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.externalAppCardActionsForCEA ? true : false;\n  }\n}\n","import { sendMessageToParentAsync } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { AppId } from '../public';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { ExternalAppErrorCode } from './constants';\nimport { externalAppAuthentication } from './externalAppAuthentication';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst externalAppCommandsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Namespace to delegate the ActionCommand to the host\n * @internal\n * Limited to Microsoft-internal use\n *\n * @beta\n */\nexport namespace externalAppCommands {\n  /**\n   * @hidden\n   * The payload of IActionCommandResponse\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export type IActionCommandResponse = ITextActionCommandResponse | ICardActionCommandResponse;\n\n  /**\n   * @hidden\n   * The payload of IBaseActionCommandResponse\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface IBaseActionCommandResponse {\n    taskModuleClosedReason: TaskModuleClosedReason;\n  }\n\n  /**\n   * @hidden\n   * The text result type\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface ITextActionCommandResponse extends IBaseActionCommandResponse {\n    resultType: 'text';\n    text: string | undefined;\n  }\n\n  /**\n   * @hidden\n   * The card result type\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface ICardActionCommandResponse extends IBaseActionCommandResponse {\n    resultType: 'card';\n    attachmentLayout: externalAppAuthentication.AttachmentLayout;\n    attachments: externalAppAuthentication.QueryMessageExtensionAttachment[];\n  }\n\n  /**\n   * @hidden\n   * The result type for the ActionCommandResultType\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export type ActionCommandResultType = 'card' | 'text';\n\n  /**\n   * @hidden\n   * The reason for the TaskModuleClosedReason\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export type TaskModuleClosedReason = 'Done' | 'CancelledByUser';\n\n  /**\n   *\n   * @hidden\n   * Error that can be thrown from IExternalAppCommandsService.processActionCommand\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface ActionCommandError {\n    errorCode: ExternalAppErrorCode;\n    message?: string;\n  }\n\n  /**\n   * @internal\n   * Limited to Microsoft-internal use\n   * @hidden\n   * This API delegates an ActionCommand request to the host for the application with the provided following parameters:\n   *\n   * @param appId ID of the application the request is intended for. This must be a UUID\n   * @param commandId extensibilityProvider use this ID to look up the command declared by ActionME\n   * @param extractedParameters are the key-value pairs that the dialog will be prepopulated with\n   *\n   * @returns Promise that resolves with the {@link IActionCommandResponse} when the request is completed and rejects with {@link ActionCommandError} if the request fails\n   *\n   * @beta\n   */\n  export async function processActionCommand(\n    appId: string,\n    commandId: string,\n    extractedParameters: Record<string, string>,\n  ): Promise<IActionCommandResponse> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const typeSafeAppId: AppId = new AppId(appId);\n\n    const [error, response] = await sendMessageToParentAsync<[ActionCommandError, IActionCommandResponse]>(\n      getApiVersionTag(externalAppCommandsTelemetryVersionNumber, ApiName.ExternalAppCommands_ProcessActionCommands),\n      ApiName.ExternalAppCommands_ProcessActionCommands,\n      [typeSafeAppId.toString(), commandId, extractedParameters],\n    );\n    if (error) {\n      throw error;\n    } else {\n      return response;\n    }\n  }\n\n  /**\n   * @hidden\n   * Checks if the externalAppCommands capability is supported by the host\n   * @returns boolean to represent whether externalAppCommands capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.externalAppCommands ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from '../public/constants';\nimport { ErrorCode, FileOpenPreference, SdkError } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n *\n * Namespace to interact with the files specific part of the SDK.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst filesTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace files {\n  /**\n   * @hidden\n   *\n   * Cloud storage providers registered with Microsoft Teams\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum CloudStorageProvider {\n    Dropbox = 'DROPBOX',\n    Box = 'BOX',\n    Sharefile = 'SHAREFILE',\n    GoogleDrive = 'GOOGLEDRIVE',\n    Egnyte = 'EGNYTE',\n    SharePoint = 'SharePoint',\n  }\n  interface IWopiThumbnail {\n    size: number;\n    url: string;\n  }\n\n  interface IWopiService {\n    name: string;\n    description: string;\n    thumbnails: IWopiThumbnail[];\n  }\n\n  /**\n   * @hidden\n   *\n   * External third-party cloud storages providers interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IExternalProvider extends IWopiService {\n    providerType: CloudStorageProviderType;\n    providerCode: CloudStorageProvider;\n  }\n\n  /**\n   * @hidden\n   *\n   * Cloud storage provider type enums\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum CloudStorageProviderType {\n    Sharepoint = 0,\n    WopiIntegration,\n    Google,\n    OneDrive,\n    Recent,\n    Aggregate,\n    FileSystem, // Used for Downloaded files on Desktop\n    Search, // Used by P2P files with OSearch\n    AllFiles, // Used by P2P files with AllFiles API\n    SharedWithMe,\n  }\n\n  /**\n   * @hidden\n   *\n   * Cloud storage folder interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageFolder {\n    /**\n     * @hidden\n     * ID of the cloud storage folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    id: string;\n    /**\n     * @hidden\n     * Display Name/Title of the cloud storage folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    title: string;\n    /**\n     * @hidden\n     * ID of the cloud storage folder in the provider\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    folderId: string;\n    /**\n     * @hidden\n     * Type of the cloud storage folder provider integration\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    providerType: CloudStorageProviderType;\n    /**\n     * @hidden\n     * Code of the supported cloud storage folder provider\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    providerCode: CloudStorageProvider;\n    /**\n     * @hidden\n     * Display name of the owner of the cloud storage folder provider\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    ownerDisplayName: string;\n    /**\n     * @hidden\n     * Sharepoint specific siteURL of the folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    siteUrl?: string;\n    /**\n     * @hidden\n     * Sharepoint specific serverRelativeUrl of the folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    serverRelativeUrl?: string;\n    /**\n     * @hidden\n     * Sharepoint specific libraryType of the folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    libraryType?: string;\n    /**\n     * @hidden\n     * Sharepoint specific accessType of the folder\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    accessType?: string;\n  }\n\n  /**\n   * @hidden\n   *\n   * Cloud storage item interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageFolderItem {\n    /**\n     * @hidden\n     * ID of the item in the provider\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    id: string;\n    /**\n     * @hidden\n     * Display name/title\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    title: string;\n    /**\n     * @hidden\n     * Key to differentiate files and subdirectory\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    isSubdirectory: boolean;\n    /**\n     * @hidden\n     * File extension\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    type: string;\n    /**\n     * @hidden\n     * Last modifed time of the item\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    lastModifiedTime: string;\n    /**\n     * @hidden\n     * Display size of the items in bytes\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    size: number;\n    /**\n     * @hidden\n     * URL of the file\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    objectUrl: string;\n    /**\n     * @hidden\n     * Temporary access token for the item\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    accessToken?: string;\n  }\n\n  /**\n   * @hidden\n   *\n   * Files entity user interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IFilesEntityUser {\n    /**\n     * @hidden\n     * User name.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    displayName: string;\n    /**\n     * @hidden\n     * User email.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    email: string;\n\n    /**\n     * @hidden\n     * User MRI.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    mri: string;\n  }\n\n  /**\n   * @hidden\n   *\n   * Special Document Library enum\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum SpecialDocumentLibraryType {\n    ClassMaterials = 'classMaterials',\n  }\n\n  /**\n   * @hidden\n   *\n   * Document Library Access enum\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum DocumentLibraryAccessType {\n    Readonly = 'readonly',\n  }\n\n  /**\n   * @hidden\n   *\n   * SharePoint file interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ISharePointFile {\n    siteId?: string;\n    siteUrl: string;\n    objectId: string;\n    objectUrl: string;\n    openInWindowFileUrl: string;\n    title: string;\n    isFolder: boolean;\n    serverRelativeUrl: string;\n    lastModifiedByUser: IFilesEntityUser;\n    lastModifiedTime: string;\n    sentByUser: IFilesEntityUser;\n    createdByUser: IFilesEntityUser;\n    createdTime: string;\n    size: number;\n    type: string;\n    spItemUrl?: string;\n    libraryType?: SpecialDocumentLibraryType;\n    accessType?: DocumentLibraryAccessType;\n    etag?: string;\n    remoteItem?: string;\n    listUrl?: string;\n  }\n\n  /**\n   * @hidden\n   *\n   * Download status enum\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum FileDownloadStatus {\n    Downloaded = 'Downloaded',\n    Downloading = 'Downloading',\n    Failed = 'Failed',\n  }\n\n  /**\n   * @hidden\n   *\n   * Download Files interface\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IFileItem {\n    /**\n     * @hidden\n     * ID of the file metadata\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    objectId?: string;\n    /**\n     * @hidden\n     * Path of the file\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    path?: string;\n    /**\n     * @hidden\n     * Size of the file in bytes\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    sizeInBytes?: number;\n    /**\n     * @hidden\n     * Download status\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    status?: FileDownloadStatus;\n    /**\n     * @hidden\n     * Download timestamp\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    timestamp: Date;\n    /**\n     * @hidden\n     * File name\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    title: string;\n    /**\n     * @hidden\n     * Type of file i.e. the file extension.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    extension: string;\n  }\n\n  /**\n   * @hidden\n   * Object used to represent a file\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface File extends Blob {\n    /**\n     * A number that represents the number of milliseconds since the Unix epoch\n     */\n    lastModified: number;\n    /**\n     * Name of the file\n     */\n    name: string;\n    /**\n     * A string containing the path of the file relative to the ancestor directory the user selected\n     */\n    webkitRelativePath?: string;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Actions specific to 3P cloud storage provider file and / or account\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum CloudStorageProviderFileAction {\n    Download = 'DOWNLOAD',\n    Upload = 'UPLOAD',\n    Delete = 'DELETE',\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Interface for 3P cloud storage provider request content type\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderRequest<T> {\n    content: T;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Base interface for 3P cloud storage provider action request content\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderContent {\n    providerCode: CloudStorageProvider;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Interface representing 3P cloud storage provider add new file action.\n   * The file extension represents type of file e.g. docx, pptx etc. and need not be prefixed with dot(.)\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderNewFileContent extends CloudStorageProviderContent {\n    newFileName: string;\n    newFileExtension: string;\n    destinationFolder: CloudStorageFolderItem | ISharePointFile;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Interface representing 3P cloud storage provider rename existing file action\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderRenameFileContent extends CloudStorageProviderContent {\n    existingFile: CloudStorageFolderItem | ISharePointFile;\n    newFile: CloudStorageFolderItem | ISharePointFile;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Interface representing 3P cloud storage provider delete existing file(s) action\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderDeleteFileContent extends CloudStorageProviderContent {\n    itemList: CloudStorageFolderItem[] | ISharePointFile[];\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Interface representing 3P cloud storage provider download existing file(s) action\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderDownloadFileContent extends CloudStorageProviderContent {\n    itemList: CloudStorageFolderItem[] | ISharePointFile[];\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * @beta\n   *\n   * Interface representing 3P cloud storage provider upload existing file(s) action\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface CloudStorageProviderUploadFileContent extends CloudStorageProviderContent {\n    itemList: File[];\n    destinationFolder: CloudStorageFolderItem | ISharePointFile;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Gets a list of cloud storage folders added to the channel. This function will not timeout;\n   * the callback will only return when the host responds with a list of folders or error.\n   *\n   * @param channelId - ID of the channel whose cloud storage folders should be retrieved\n   * @param callback - Callback that will be triggered post folders load\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getCloudStorageFolders(\n    channelId: string,\n    callback: (error: SdkError, folders: CloudStorageFolder[]) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!channelId || channelId.length === 0) {\n      throw new Error('[files.getCloudStorageFolders] channelId name cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.getCloudStorageFolders] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_GetCloudStorageFolders),\n      'files.getCloudStorageFolders',\n      [channelId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   * Initiates the add cloud storage folder flow\n   *\n   * @param channelId - ID of the channel to add cloud storage folder\n   * @param callback - Callback that will be triggered post add folder flow is compelete\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function addCloudStorageFolder(\n    channelId: string,\n    callback: (error: SdkError, isFolderAdded: boolean, folders: CloudStorageFolder[]) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!channelId || channelId.length === 0) {\n      throw new Error('[files.addCloudStorageFolder] channelId name cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.addCloudStorageFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_AddCloudStorageFolder),\n      'files.addCloudStorageFolder',\n      [channelId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   *\n   * Deletes a cloud storage folder from channel\n   *\n   * @param channelId - ID of the channel where folder is to be deleted\n   * @param folderToDelete - cloud storage folder to be deleted\n   * @param callback - Callback that will be triggered post delete\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function deleteCloudStorageFolder(\n    channelId: string,\n    folderToDelete: CloudStorageFolder,\n    callback: (error: SdkError, isFolderDeleted: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!channelId) {\n      throw new Error('[files.deleteCloudStorageFolder] channelId name cannot be null or empty');\n    }\n    if (!folderToDelete) {\n      throw new Error('[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.deleteCloudStorageFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_DeleteCloudStorageFolder),\n      'files.deleteCloudStorageFolder',\n      [channelId, folderToDelete],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   *\n   * Fetches the contents of a Cloud storage folder (CloudStorageFolder) / sub directory\n   *\n   * @param folder - Cloud storage folder (CloudStorageFolder) / sub directory (CloudStorageFolderItem)\n   * @param providerCode - Code of the cloud storage folder provider\n   * @param callback - Callback that will be triggered post contents are loaded\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getCloudStorageFolderContents(\n    folder: CloudStorageFolder | CloudStorageFolderItem,\n    providerCode: CloudStorageProvider,\n    callback: (error: SdkError, items: CloudStorageFolderItem[]) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!folder || !providerCode) {\n      throw new Error('[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[files.getCloudStorageFolderContents] Callback cannot be null');\n    }\n\n    if ('isSubdirectory' in folder && !folder.isSubdirectory) {\n      throw new Error('[files.getCloudStorageFolderContents] provided folder is not a subDirectory');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_GetCloudStorageFolderContents),\n      'files.getCloudStorageFolderContents',\n      [folder, providerCode],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * ------\n   *\n   * Open a cloud storage file in Teams\n   *\n   * @param file - cloud storage file that should be opened\n   * @param providerCode - Code of the cloud storage folder provider\n   * @param fileOpenPreference - Whether file should be opened in web/inline\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function openCloudStorageFile(\n    file: CloudStorageFolderItem,\n    providerCode: CloudStorageProvider,\n    fileOpenPreference?: FileOpenPreference.Web | FileOpenPreference.Inline,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!file || !providerCode) {\n      throw new Error('[files.openCloudStorageFile] file/providerCode cannot be null or empty');\n    }\n\n    if (file.isSubdirectory) {\n      throw new Error('[files.openCloudStorageFile] provided file is a subDirectory');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_OpenCloudStorageFile),\n      'files.openCloudStorageFile',\n      [file, providerCode, fileOpenPreference],\n    );\n  }\n\n  /**\n   * @hidden\n   * Allow 1st party apps to call this function to get the external\n   * third party cloud storage accounts that the tenant supports\n   * @param excludeAddedProviders: return a list of support third party\n   * cloud storages that hasn't been added yet.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getExternalProviders(\n    excludeAddedProviders = false,\n    callback: (error: SdkError, providers: IExternalProvider[]) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.getExternalProviders] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_GetExternalProviders),\n      'files.getExternalProviders',\n      [excludeAddedProviders],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Allow 1st party apps to call this function to move files\n   * among SharePoint and third party cloud storages.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function copyMoveFiles(\n    selectedFiles: CloudStorageFolderItem[] | ISharePointFile[],\n    providerCode: CloudStorageProvider,\n    destinationFolder: CloudStorageFolderItem | ISharePointFile,\n    destinationProviderCode: CloudStorageProvider,\n    isMove = false,\n    callback: (error?: SdkError) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!selectedFiles || selectedFiles.length === 0) {\n      throw new Error('[files.copyMoveFiles] selectedFiles cannot be null or empty');\n    }\n    if (!providerCode) {\n      throw new Error('[files.copyMoveFiles] providerCode cannot be null or empty');\n    }\n    if (!destinationFolder) {\n      throw new Error('[files.copyMoveFiles] destinationFolder cannot be null or empty');\n    }\n    if (!destinationProviderCode) {\n      throw new Error('[files.copyMoveFiles] destinationProviderCode cannot be null or empty');\n    }\n    if (!callback) {\n      throw new Error('[files.copyMoveFiles] callback cannot be null');\n    }\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_CopyMoveFiles),\n      'files.copyMoveFiles',\n      [selectedFiles, providerCode, destinationFolder, destinationProviderCode, isMove],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *  ------\n   *\n   * Gets list of downloads for current user\n   * @param callback Callback that will be triggered post downloads load\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getFileDownloads(callback: (error?: SdkError, files?: IFileItem[]) => void): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.getFileDownloads] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_GetFileDownloads),\n      'files.getFileDownloads',\n      [],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Open download preference folder if fileObjectId value is undefined else open folder containing the file with id fileObjectId\n   * @param fileObjectId - Id of the file whose containing folder should be opened\n   * @param callback Callback that will be triggered post open download folder/path\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function openDownloadFolder(\n    fileObjectId: string | undefined = undefined,\n    callback: (error?: SdkError) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw new Error('[files.openDownloadFolder] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_OpenDownloadFolder),\n      'files.openDownloadFolder',\n      [fileObjectId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates add 3P cloud storage provider flow, where a pop up window opens for user to select required\n   * 3P provider from the configured policy supported 3P provider list, following which user authentication\n   * for selected 3P provider is performed on success of which the selected 3P provider support is added for user\n   * @beta\n   *\n   * @param callback Callback that will be triggered post add 3P cloud storage provider action.\n   * If the error is encountered (and hence passed back), no provider value is sent back.\n   * For success scenarios, error value will be passed as null and a valid provider value is sent.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function addCloudStorageProvider(callback: (error?: SdkError, provider?: CloudStorageProvider) => void): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.addCloudStorageProvider] callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_AddCloudStorageProvider),\n      'files.addCloudStorageProvider',\n      [],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates signout of 3P cloud storage provider flow, which will remove the selected\n   * 3P cloud storage provider from the list of added providers. No other user input and / or action\n   * is required except the 3P cloud storage provider to signout from\n   *\n   * @param logoutRequest 3P cloud storage provider remove action request content\n   * @param callback Callback that will be triggered post signout of 3P cloud storage provider action\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function removeCloudStorageProvider(\n    logoutRequest: CloudStorageProviderRequest<CloudStorageProviderContent>,\n    callback: (error?: SdkError) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.removeCloudStorageProvider] callback cannot be null');\n    }\n\n    if (!(logoutRequest && logoutRequest.content)) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.removeCloudStorageProvider] 3P cloud storage provider request content is missing',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_RemoveCloudStorageProvider),\n      'files.removeCloudStorageProvider',\n      [logoutRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates the add 3P cloud storage file flow, which will add a new file for the given 3P provider\n   *\n   * @param addNewFileRequest 3P cloud storage provider add action request content\n   * @param callback Callback that will be triggered post adding a new file flow is finished\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function addCloudStorageProviderFile(\n    addNewFileRequest: CloudStorageProviderRequest<CloudStorageProviderNewFileContent>,\n    callback: (error?: SdkError, actionStatus?: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.addCloudStorageProviderFile] callback cannot be null');\n    }\n\n    if (!(addNewFileRequest && addNewFileRequest.content)) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.addCloudStorageProviderFile] 3P cloud storage provider request content is missing',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_AddCloudStorageProviderFile),\n      'files.addCloudStorageProviderFile',\n      [addNewFileRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates the rename 3P cloud storage file flow, which will rename an existing file in the given 3P provider\n   *\n   * @param renameFileRequest 3P cloud storage provider rename action request content\n   * @param callback Callback that will be triggered post renaming an existing file flow is finished\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function renameCloudStorageProviderFile(\n    renameFileRequest: CloudStorageProviderRequest<CloudStorageProviderRenameFileContent>,\n    callback: (error?: SdkError, actionStatus?: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.renameCloudStorageProviderFile] callback cannot be null');\n    }\n\n    if (!(renameFileRequest && renameFileRequest.content)) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.renameCloudStorageProviderFile] 3P cloud storage provider request content is missing',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_RenameCloudStorageProviderFile),\n      'files.renameCloudStorageProviderFile',\n      [renameFileRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates the delete 3P cloud storage file(s) / folder (folder has to be empty) flow,\n   * which will delete existing file(s) / folder from the given 3P provider\n   *\n   * @param deleteFileRequest 3P cloud storage provider delete action request content\n   * @param callback Callback that will be triggered post deleting existing file(s) flow is finished\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function deleteCloudStorageProviderFile(\n    deleteFileRequest: CloudStorageProviderRequest<CloudStorageProviderDeleteFileContent>,\n    callback: (error?: SdkError, actionStatus?: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.deleteCloudStorageProviderFile] callback cannot be null');\n    }\n\n    if (\n      !(\n        deleteFileRequest &&\n        deleteFileRequest.content &&\n        deleteFileRequest.content.itemList &&\n        deleteFileRequest.content.itemList.length > 0\n      )\n    ) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.deleteCloudStorageProviderFile] 3P cloud storage provider request content details are missing',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_DeleteCloudStorageProviderFile),\n      'files.deleteCloudStorageProviderFile',\n      [deleteFileRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates the download 3P cloud storage file(s) flow,\n   * which will download existing file(s) from the given 3P provider in the teams client side without sharing any file info in the callback\n   *\n   * @param downloadFileRequest 3P cloud storage provider download file(s) action request content\n   * @param callback Callback that will be triggered post downloading existing file(s) flow is finished\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function downloadCloudStorageProviderFile(\n    downloadFileRequest: CloudStorageProviderRequest<CloudStorageProviderDownloadFileContent>,\n    callback: (error?: SdkError, actionStatus?: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.downloadCloudStorageProviderFile] callback cannot be null',\n      );\n    }\n\n    if (\n      !(\n        downloadFileRequest &&\n        downloadFileRequest.content &&\n        downloadFileRequest.content.itemList &&\n        downloadFileRequest.content.itemList.length > 0\n      )\n    ) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.downloadCloudStorageProviderFile] 3P cloud storage provider request content details are missing',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_DownloadCloudStorageProviderFile),\n      'files.downloadCloudStorageProviderFile',\n      [downloadFileRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Initiates the upload 3P cloud storage file(s) flow, which will upload file(s) to the given 3P provider\n   * @beta\n   *\n   * @param uploadFileRequest 3P cloud storage provider upload file(s) action request content\n   * @param callback Callback that will be triggered post uploading file(s) flow is finished\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function uploadCloudStorageProviderFile(\n    uploadFileRequest: CloudStorageProviderRequest<CloudStorageProviderUploadFileContent>,\n    callback: (error?: SdkError, actionStatus?: boolean) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!callback) {\n      throw getSdkError(ErrorCode.INVALID_ARGUMENTS, '[files.uploadCloudStorageProviderFile] callback cannot be null');\n    }\n\n    if (\n      !(\n        uploadFileRequest &&\n        uploadFileRequest.content &&\n        uploadFileRequest.content.itemList &&\n        uploadFileRequest.content.itemList.length > 0\n      )\n    ) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.uploadCloudStorageProviderFile] 3P cloud storage provider request content details are missing',\n      );\n    }\n\n    if (!uploadFileRequest.content.destinationFolder) {\n      throw getSdkError(\n        ErrorCode.INVALID_ARGUMENTS,\n        '[files.uploadCloudStorageProviderFile] Invalid destination folder details',\n      );\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_UploadCloudStorageProviderFile),\n      'files.uploadCloudStorageProviderFile',\n      [uploadFileRequest],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Register a handler to be called when a user's 3P cloud storage provider list changes i.e.\n   * post adding / removing a 3P provider, list is updated\n   *\n   * @param handler - When 3P cloud storage provider list is updated this handler is called\n   *\n   * @internal Limited to Microsoft-internal use\n   */\n  export function registerCloudStorageProviderListChangeHandler(handler: () => void): void {\n    ensureInitialized(runtime);\n\n    if (!handler) {\n      throw new Error('[registerCloudStorageProviderListChangeHandler] Handler cannot be null');\n    }\n\n    registerHandler(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_RegisterCloudStorageProviderListChangeHandler),\n      'files.cloudStorageProviderListChange',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   *\n   * Register a handler to be called when a user's 3P cloud storage provider content changes i.e.\n   * when file(s) is/are added / renamed / deleted / uploaded, the list of files is updated\n   *\n   * @param handler - When 3P cloud storage provider content is updated this handler is called\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerCloudStorageProviderContentChangeHandler(handler: () => void): void {\n    ensureInitialized(runtime);\n\n    if (!handler) {\n      throw new Error('[registerCloudStorageProviderContentChangeHandler] Handler cannot be null');\n    }\n\n    registerHandler(\n      getApiVersionTag(filesTelemetryVersionNumber, ApiName.Files_RegisterCloudStorageProviderContentChangeHandler),\n      'files.cloudStorageProviderContentChange',\n      handler,\n    );\n  }\n\n  function getSdkError(errorCode: ErrorCode, message: string): SdkError {\n    const sdkError: SdkError = {\n      errorCode: errorCode,\n      message: message,\n    };\n    return sdkError;\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform } from '../public/constants';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst meetingRoomTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace meetingRoom {\n  /**\n   * @hidden\n   *\n   * Data structure to represent a meeting room.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface MeetingRoomInfo {\n    /**\n     * @hidden\n     * Endpoint id of the meeting room.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    endpointId: string;\n    /**\n     * @hidden\n     * Device name of the meeting room.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    deviceName: string;\n    /**\n     * @hidden\n     * Client type of the meeting room.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    clientType: string;\n    /**\n     * @hidden\n     * Client version of the meeting room.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    clientVersion: string;\n  }\n\n  /**\n   * @hidden\n   * Type of Media control capabilities of a meeting room.\n   */\n  type MediaControls = 'toggleMute' | 'toggleCamera' | 'toggleCaptions' | 'volume';\n\n  /**\n   * @hidden\n   * Types of Stage Layout control capabilities of a meeting room.\n   */\n\n  type StageLayoutControls =\n    | 'showVideoGallery'\n    | 'showContent'\n    | 'showVideoGalleryAndContent'\n    | 'showLargeGallery'\n    | 'showTogether';\n\n  /**\n   * @hidden\n   * Types of Meeting Control capabilities of a meeting room.\n   */\n\n  type MeetingControls = 'leaveMeeting';\n\n  /**\n   * @hidden\n   * Types of Stage Layout State of a meeting room.\n   */\n\n  type StageLayoutStates = 'Gallery' | 'Content + gallery' | 'Content' | 'Large gallery' | 'Together mode';\n\n  /**\n   * @hidden\n   * Data structure to represent capabilities of a meeting room.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface MeetingRoomCapability {\n    /**\n     * @hidden\n     * Media control capabilities, value can be \"toggleMute\", \"toggleCamera\", \"toggleCaptions\", \"volume\".\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    mediaControls: MediaControls[];\n    /**\n     * @hidden\n     * Main stage layout control capabilities, value can be \"showVideoGallery\", \"showContent\", \"showVideoGalleryAndContent\", \"showLargeGallery\", \"showTogether\".\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    stageLayoutControls: StageLayoutControls[];\n    /**\n     * @hidden\n     * Meeting control capabilities, value can be \"leaveMeeting\".\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    meetingControls: MeetingControls[];\n  }\n\n  /**\n   * @hidden\n   * Data structure to represent states of a meeting room.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface MeetingRoomState {\n    /**\n     * @hidden\n     * Current mute state, true: mute, false: unmute.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    toggleMute: boolean;\n    /**\n     * @hidden\n     * Current camera state, true: camera on, false: camera off.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    toggleCamera: boolean;\n    /**\n     * @hidden\n     * Current captions state, true: captions on, false: captions off.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    toggleCaptions: boolean;\n    /**\n     * @hidden\n     * Current main stage layout state, value can be one of \"Gallery\", \"Content + gallery\", \"Content\", \"Large gallery\" and \"Together mode\".\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    stageLayout: StageLayoutStates;\n    /**\n     * @hidden\n     * Current leaveMeeting state, true: leave, false: no-op.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    leaveMeeting: boolean;\n  }\n\n  /**\n   * @hidden\n   * Fetch the meeting room info that paired with current client.\n   *\n   * @returns Promise resolved with meeting room info or rejected with SdkError value\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getPairedMeetingRoomInfo(): Promise<MeetingRoomInfo> {\n    return new Promise<MeetingRoomInfo>((resolve) => {\n      ensureInitialized(runtime);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(meetingRoomTelemetryVersionNumber, ApiName.MeetingRoom_GetPairedMeetingRoomInfo),\n          'meetingRoom.getPairedMeetingRoomInfo',\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Send a command to paired meeting room.\n   *\n   * @param commandName The command name.\n   * @returns Promise resolved upon completion or rejected with SdkError value\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function sendCommandToPairedMeetingRoom(commandName: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (!commandName || commandName.length == 0) {\n        throw new Error('[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty');\n      }\n      ensureInitialized(runtime);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(meetingRoomTelemetryVersionNumber, ApiName.MeetingRoom_SendCommandToPairedMeetingRoom),\n          'meetingRoom.sendCommandToPairedMeetingRoom',\n          commandName,\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Registers a handler for meeting room capabilities update.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler The handler to invoke when the capabilities of meeting room update.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerMeetingRoomCapabilitiesUpdateHandler(\n    handler: (capabilities: MeetingRoomCapability) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(\n        meetingRoomTelemetryVersionNumber,\n        ApiName.MeetingRoom_RegisterMeetingRoomCapabilitiesUpdateHandler,\n      ),\n      'meetingRoom.meetingRoomCapabilitiesUpdate',\n      (capabilities: MeetingRoomCapability) => {\n        ensureInitialized(runtime);\n        handler(capabilities);\n      },\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * Registers a handler for meeting room states update.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler The handler to invoke when the states of meeting room update.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerMeetingRoomStatesUpdateHandler(handler: (states: MeetingRoomState) => void): void {\n    if (!handler) {\n      throw new Error('[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(meetingRoomTelemetryVersionNumber, ApiName.MeetingRoom_RegisterMeetingRoomStatesUpdateHandler),\n      'meetingRoom.meetingRoomStatesUpdate',\n      (states: MeetingRoomState) => {\n        ensureInitialized(runtime);\n        handler(states);\n      },\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the meetingRoom capability is supported by the host\n   * @returns boolean to represent whether the meetingRoom capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.meetingRoom ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { ShowNotificationParameters } from './interfaces';\n/**\n * @hidden\n * Hidden from Docs\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst notificationsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace notifications {\n  /**\n   * @hidden\n   * display notification API.\n   *\n   * @param message - Notification message.\n   * @param notificationType - Notification type\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function showNotification(showNotificationParameters: ShowNotificationParameters): void {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(notificationsTelemetryVersionNumber, ApiName.Notifications_ShowNotification),\n      'notifications.showNotification',\n      [showNotificationParameters],\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the notifications capability is supported by the host\n   * @returns boolean to represent whether the notifications capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.notifications ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { ErrorCode } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n * @internal\n * @beta\n * Limited to Microsoft-internal use\n *\n * This capability contains the APIs for handling events that happen to other applications on the host\n * *while* the developer's application is running. For example, if the developer wants to be notified\n * when another application has been installed.\n */\nexport namespace otherAppStateChange {\n  /**\n   * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n   */\n  const otherAppStateChangeTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n  /**\n   * @hidden\n   * @beta\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * Represent an event that has happened with other number of applications installed on this host.\n   * (e.g. a new app has been installed)\n   */\n  export interface OtherAppStateChangeEvent {\n    /** An array of app ids that this event applies to */\n    appIds: string[];\n  }\n\n  /**\n   * @hidden\n   * @beta\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * A function handler that will be called whenever an event happens with some number of applications installed on this host.\n   */\n  export type OtherAppStateChangeEventHandler = (event: OtherAppStateChangeEvent) => void;\n\n  /**\n   * @hidden\n   * @beta\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * This function allows an app to register a handler that will receive whenever other applications are installed\n   * on the host while the developer's application is running.\n   *\n   * @param appInstallHandler - This handler will be called whenever apps are installed on the host.\n   *\n   * @throws Error if {@link app.initialize} has not successfully completed, if the platform\n   * does not support the otherAppStateChange capability, or if a valid handler is not passed to the function.\n   *\n   * @example\n   * ``` ts\n   * if (otherAppStateChange.isSupported()) {\n   *  otherAppStateChange.registerAppInstallationHandler((event: otherAppStateChange.OtherAppStateChangeEvent) => {\n   *    // code to handle the event goes here\n   *  });\n   * }\n   * ```\n   */\n  export function registerAppInstallationHandler(appInstallHandler: OtherAppStateChangeEventHandler): void {\n    if (!isSupported()) {\n      throw new Error(ErrorCode.NOT_SUPPORTED_ON_PLATFORM.toString());\n    }\n\n    if (isNullOrUndefined(appInstallHandler)) {\n      throw new Error(ErrorCode.INVALID_ARGUMENTS.toString());\n    }\n\n    registerHandler(\n      getApiVersionTag(otherAppStateChangeTelemetryVersionNumber, ApiName.OtherAppStateChange_Install),\n      ApiName.OtherAppStateChange_Install,\n      appInstallHandler,\n    );\n  }\n\n  /**\n   * @hidden\n   * @beta\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * This function can be called so that the handler passed to {@link registerAppInstallationHandler}\n   * will no longer receive app installation events. If this is called before registering a handler\n   * it will have no effect.\n   *\n   * @throws Error if {@link app.initialize} has not successfully completed or if the platform\n   * does not support the otherAppStateChange capability.\n   */\n  export function unregisterAppInstallationHandler(): void {\n    if (!isSupported()) {\n      throw new Error(ErrorCode.NOT_SUPPORTED_ON_PLATFORM.toString());\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(otherAppStateChangeTelemetryVersionNumber, ApiName.OtherAppStateChange_UnregisterInstall),\n      ApiName.OtherAppStateChange_UnregisterInstall,\n    );\n\n    removeHandler(ApiName.OtherAppStateChange_Install);\n  }\n\n  /**\n   * Checks if the otherAppStateChange capability is supported by the host\n   * @returns boolean to represent whether the otherAppStateChange capability is supported\n   *\n   * @throws Error if {@link app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.otherAppStateChange ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { SdkError } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * @hidden\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst remoteCameraTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace remoteCamera {\n  /**\n   * @hidden\n   * Data structure to represent patricipant details needed to request control of camera.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface Participant {\n    /**\n     * @hidden\n     * Id of participant.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    id: string;\n    /**\n     * @hidden\n     * Display name of participant.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    displayName?: string;\n    /**\n     * @hidden\n     * Active indicates whether the participant's device is actively being controlled.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    active?: boolean;\n  }\n\n  /**\n   * @hidden\n   * Enum used to indicate possible camera control commands.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum ControlCommand {\n    Reset = 'Reset',\n    ZoomIn = 'ZoomIn',\n    ZoomOut = 'ZoomOut',\n    PanLeft = 'PanLeft',\n    PanRight = 'PanRight',\n    TiltUp = 'TiltUp',\n    TiltDown = 'TiltDown',\n  }\n\n  /**\n   * @hidden\n   * Data structure to indicate the current state of the device.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface DeviceState {\n    /**\n     * @hidden\n     * All operation are available to apply.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    available: boolean;\n    /**\n     * @hidden\n     * Either camera doesnt support to get state or It unable to apply command.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    error: boolean;\n    /**\n     * @hidden\n     * Reset max out or already applied. Client Disable Reset.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    reset: boolean;\n    /**\n     * @hidden\n     * ZoomIn maxed out.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    zoomIn: boolean;\n    /**\n     * @hidden\n     * ZoomOut maxed out.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    zoomOut: boolean;\n    /**\n     * @hidden\n     * PanLeft reached max left.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    panLeft: boolean;\n    /**\n     * @hidden\n     * PanRight reached max right.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    panRight: boolean;\n    /**\n     * @hidden\n     * TiltUp reached top.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    tiltUp: boolean;\n    /**\n     * @hidden\n     * TiltDown reached bottom.\n     *\n     * @internal Limited to Microsoft-internal use\n     */\n    tiltDown: boolean;\n  }\n\n  /**\n   * @hidden\n   * Enum used to indicate the reason for the error.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum ErrorReason {\n    CommandResetError,\n    CommandZoomInError,\n    CommandZoomOutError,\n    CommandPanLeftError,\n    CommandPanRightError,\n    CommandTiltUpError,\n    CommandTiltDownError,\n    SendDataError,\n  }\n\n  /**\n   * @hidden\n   * Data structure to indicate the status of the current session.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface SessionStatus {\n    /**\n     * @hidden\n     * Whether the far-end user is controlling a  device.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    inControl: boolean;\n    /**\n     * @hidden\n     * Reason the  control session was terminated.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    terminatedReason?: SessionTerminatedReason;\n  }\n\n  /**\n   * @hidden\n   * Enum used to indicate the reason the session was terminated.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum SessionTerminatedReason {\n    None,\n    ControlDenied,\n    ControlNoResponse,\n    ControlBusy,\n    AckTimeout,\n    ControlTerminated,\n    ControllerTerminated,\n    DataChannelError,\n    ControllerCancelled,\n    ControlDisabled,\n    ControlTerminatedToAllowOtherController,\n  }\n\n  /**\n   * @hidden\n   * Fetch a list of the participants with controllable-cameras in a meeting.\n   *\n   * @param callback - Callback contains 2 parameters, error and participants.\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\n   * participants can either contain an array of Participant objects, incase of a successful fetch or null when it fails\n   * participants: object that contains an array of participants with controllable-cameras\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getCapableParticipants(\n    callback: (error: SdkError | null, participants: Participant[] | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[remoteCamera.getCapableParticipants] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_GetCapableParticipants),\n      'remoteCamera.getCapableParticipants',\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Request control of a participant's camera.\n   *\n   * @param participant - Participant specifies the participant to send the request for camera control.\n   * @param callback - Callback contains 2 parameters, error and requestResponse.\n   * error can either contain an error of type SdkError, incase of an error, or null when fetch is successful\n   * requestResponse can either contain the true/false value, incase of a successful request or null when it fails\n   * requestResponse: True means request was accepted and false means request was denied\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function requestControl(\n    participant: Participant,\n    callback: (error: SdkError | null, requestResponse: boolean | null) => void,\n  ): void {\n    if (!participant) {\n      throw new Error('[remoteCamera.requestControl] Participant cannot be null');\n    }\n    if (!callback) {\n      throw new Error('[remoteCamera.requestControl] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_RequestControl),\n      'remoteCamera.requestControl',\n      [participant],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Send control command to the participant's camera.\n   *\n   * @param ControlCommand - ControlCommand specifies the command for controling the camera.\n   * @param callback - Callback to invoke when the command response returns.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function sendControlCommand(ControlCommand: ControlCommand, callback: (error: SdkError | null) => void): void {\n    if (!ControlCommand) {\n      throw new Error('[remoteCamera.sendControlCommand] ControlCommand cannot be null');\n    }\n    if (!callback) {\n      throw new Error('[remoteCamera.sendControlCommand] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_SendControlCommand),\n      'remoteCamera.sendControlCommand',\n      [ControlCommand],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Terminate the remote  session\n   *\n   * @param callback - Callback to invoke when the command response returns.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function terminateSession(callback: (error: SdkError | null) => void): void {\n    if (!callback) {\n      throw new Error('[remoteCamera.terminateSession] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_TerminateSession),\n      'remoteCamera.terminateSession',\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Registers a handler for change in participants with controllable-cameras.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when the list of participants with controllable-cameras changes.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerOnCapableParticipantsChangeHandler(\n    handler: (participantChange: Participant[]) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnCapableParticipantsChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(\n        remoteCameraTelemetryVersionNumber,\n        ApiName.RemoteCamera_RegisterOnCapableParticipantsChangeHandler,\n      ),\n      'remoteCamera.capableParticipantsChange',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   * Registers a handler for error.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when there is an error from the camera handler.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerOnErrorHandler(handler: (error: ErrorReason) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnErrorHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_RegisterOnErrorHandler),\n      'remoteCamera.handlerError',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   * Registers a handler for device state change.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when the controlled device changes state.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerOnDeviceStateChangeHandler(handler: (deviceStateChange: DeviceState) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnDeviceStateChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_RegisterOnDeviceStateChangeHandler),\n      'remoteCamera.deviceStateChange',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   * Registers a handler for session status change.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when the current session status changes.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerOnSessionStatusChangeHandler(handler: (sessionStatusChange: SessionStatus) => void): void {\n    if (!handler) {\n      throw new Error('[remoteCamera.registerOnSessionStatusChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(remoteCameraTelemetryVersionNumber, ApiName.RemoteCamera_RegisterOnSessionStatusChangeHandler),\n      'remoteCamera.sessionStatusChange',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the remoteCamera capability is supported by the host\n   * @returns boolean to represent whether the remoteCamera capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.remoteCamera ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { SdkError } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst appEntityTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * @hidden\n * Namespace to interact with the application entities specific part of the SDK.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport namespace appEntity {\n  /**\n   * @hidden\n   *\n   * Information on an app entity\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface AppEntity {\n    /**\n     * @hidden\n     * ID of the application\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    appId: string;\n\n    /**\n     * @hidden\n     * URL for the application's icon\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    appIconUrl: string;\n\n    /**\n     * @hidden\n     * Content URL for the app entity\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    contentUrl: string;\n\n    /**\n     * @hidden\n     * The display name for the app entity\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    displayName: string;\n\n    /**\n     * @hidden\n     * Website URL for the app entity. It is meant to be opened by the user in a browser.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    websiteUrl: string;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * --------\n   * Open the Tab Gallery and retrieve the app entity\n   * @param threadId ID of the thread where the app entity will be created\n   * @param categories A list of application categories that will be displayed in the opened tab gallery\n   * @param subEntityId An object that will be made available to the application being configured\n   *                      through the Context's subEntityId field.\n   * @param callback Callback that will be triggered once the app entity information is available.\n   *                 The callback takes two arguments: an SdkError in case something happened (i.e.\n   *                 no permissions to execute the API) and the app entity configuration, if available\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function selectAppEntity(\n    threadId: string,\n    categories: string[],\n    subEntityId: string,\n    callback: (sdkError?: SdkError, appEntity?: AppEntity) => void,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (!threadId || threadId.length == 0) {\n      throw new Error('[appEntity.selectAppEntity] threadId name cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[appEntity.selectAppEntity] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(appEntityTelemetryVersionNumber, ApiName.AppEntity_SelectAppEntity),\n      'appEntity.selectAppEntity',\n      [threadId, categories, subEntityId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the appEntity capability is supported by the host\n   * @returns boolean to represent whether the appEntity capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.appEntity ? true : false;\n  }\n}\n","import { sendAndUnwrap, sendMessageToParent } from '../internal/communication';\nimport { getUserJoinedTeamsSupportedAndroidClientVersion } from '../internal/constants';\nimport { GlobalVars } from '../internal/globalVars';\nimport { ensureInitialized, isCurrentSDKVersionAtLeast } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts, HostClientType } from '../public/constants';\nimport { ErrorCode, SdkError } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\nimport { TeamInstanceParameters, UserJoinedTeamsInformation } from './interfaces';\n\n/**\n * @hidden\n * Namespace to interact with the `teams` specific part of the SDK.\n *\n * @internal\n * Limited to Microsoft-internal use\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst teamsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace teams {\n  export enum ChannelType {\n    Regular = 0,\n    Private = 1,\n    Shared = 2,\n  }\n\n  /**\n   * @hidden\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ChannelInfo {\n    siteUrl: string;\n    objectId: string;\n    folderRelativeUrl: string;\n    displayName: string;\n    channelType: ChannelType;\n  }\n\n  /**\n   * @hidden\n   * Get a list of channels belong to a Team\n   *\n   * @param groupId - a team's objectId\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getTeamChannels(groupId: string, callback: (error: SdkError, channels: ChannelInfo[]) => void): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (!groupId) {\n      throw new Error('[teams.getTeamChannels] groupId cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[teams.getTeamChannels] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(teamsTelemetryVersionNumber, ApiName.Teams_GetTeamChannels),\n      'teams.getTeamChannels',\n      [groupId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Allow 1st party apps to call this function when they receive migrated errors to inform the Hub/Host to refresh the siteurl\n   * when site admin renames siteurl.\n   *\n   * @param threadId - ID of the thread where the app entity will be created; if threadId is not\n   * provided, the threadId from route params will be used.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function refreshSiteUrl(threadId: string, callback: (error: SdkError) => void): void {\n    ensureInitialized(runtime);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (!threadId) {\n      throw new Error('[teams.refreshSiteUrl] threadId cannot be null or empty');\n    }\n\n    if (!callback) {\n      throw new Error('[teams.refreshSiteUrl] Callback cannot be null');\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(teamsTelemetryVersionNumber, ApiName.Teams_RefreshSiteUrl),\n      'teams.refreshSiteUrl',\n      [threadId],\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if teams capability is supported by the host\n   * @returns boolean to represent whether the teams capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.teams ? true : false;\n  }\n\n  /**\n   * @hidden\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export namespace fullTrust {\n    /**\n     * @hidden\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export namespace joinedTeams {\n      /**\n       * @hidden\n       * Allows an app to retrieve information of all user joined teams\n       *\n       * @param teamInstanceParameters - Optional flags that specify whether to scope call to favorite teams\n       * @returns Promise that resolves with information about the user joined teams or rejects with an error when the operation has completed\n       *\n       * @internal\n       * Limited to Microsoft-internal use\n       */\n      export function getUserJoinedTeams(\n        teamInstanceParameters?: TeamInstanceParameters,\n      ): Promise<UserJoinedTeamsInformation> {\n        return new Promise<UserJoinedTeamsInformation>((resolve) => {\n          ensureInitialized(runtime);\n          if (!isSupported()) {\n            throw errorNotSupportedOnPlatform;\n          }\n\n          if (\n            (GlobalVars.hostClientType === HostClientType.android ||\n              GlobalVars.hostClientType === HostClientType.teamsRoomsAndroid ||\n              GlobalVars.hostClientType === HostClientType.teamsPhones ||\n              GlobalVars.hostClientType === HostClientType.teamsDisplays) &&\n            !isCurrentSDKVersionAtLeast(getUserJoinedTeamsSupportedAndroidClientVersion)\n          ) {\n            const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n            throw new Error(JSON.stringify(oldPlatformError));\n          }\n\n          /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n          resolve(\n            sendAndUnwrap(\n              getApiVersionTag(teamsTelemetryVersionNumber, ApiName.Teams_FullTrust_JoinedTeams_GetUserJoinedTeams),\n              'getUserJoinedTeams',\n              /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n              teamInstanceParameters,\n            ),\n          );\n        });\n      }\n      /**\n       * @hidden\n       *\n       * Checks if teams.fullTrust.joinedTeams capability is supported by the host\n       * @returns boolean to represent whether the teams.fullTrust.joinedTeams capability is supported\n       *\n       * @throws Error if {@linkcode app.initialize} has not successfully completed\n       *\n       * @internal\n       * Limited to Microsoft-internal use\n       */\n      export function isSupported(): boolean {\n        return ensureInitialized(runtime) && runtime.supports.teams\n          ? runtime.supports.teams.fullTrust\n            ? runtime.supports.teams.fullTrust.joinedTeams\n              ? true\n              : false\n            : false\n          : false;\n      }\n    }\n\n    /**\n     * @hidden\n     * Allows an app to get the configuration setting value\n     *\n     * @param key - The key for the config setting\n     * @returns Promise that resolves with the value for the provided configuration setting or rejects with an error when the operation has completed\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function getConfigSetting(key: string): Promise<string> {\n      return new Promise<string>((resolve) => {\n        ensureInitialized(runtime);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n        resolve(\n          sendAndUnwrap(\n            getApiVersionTag(teamsTelemetryVersionNumber, ApiName.Teams_FullTrust_GetConfigSetting),\n            'getConfigSetting',\n            key,\n          ),\n        );\n      });\n    }\n\n    /**\n     * @hidden\n     *\n     * Checks if teams.fullTrust capability is supported by the host\n     * @returns boolean to represent whether the teams.fullTrust capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.teams\n        ? runtime.supports.teams.fullTrust\n          ? true\n          : false\n        : false;\n    }\n  }\n}\n","import { generateGUID } from './utils';\n\nexport class VideoFrameTick {\n  private static readonly setTimeoutCallbacks: {\n    [key: string]: {\n      callback: () => void;\n      startedAtInMs: number;\n      timeoutInMs: number;\n    };\n  } = {};\n\n  public static setTimeout(callback: () => void, timeoutInMs: number): string {\n    const startedAtInMs = performance.now();\n    const id = generateGUID();\n    VideoFrameTick.setTimeoutCallbacks[id] = {\n      callback,\n      timeoutInMs,\n      startedAtInMs,\n    };\n    return id;\n  }\n\n  public static clearTimeout(id: string): void {\n    delete VideoFrameTick.setTimeoutCallbacks[id];\n  }\n\n  public static setInterval(callback: () => void, intervalInMs: number): void {\n    VideoFrameTick.setTimeout(function next() {\n      callback();\n      VideoFrameTick.setTimeout(next, intervalInMs);\n    }, intervalInMs);\n  }\n\n  /**\n   * Call this function whenever a frame comes in, it will check if any timeout is due and call the callback\n   */\n  public static tick(): void {\n    const now = performance.now();\n    const timeoutIds: string[] = [];\n    // find all the timeouts that are due,\n    // not to invoke them in the loop to avoid modifying the collection while iterating\n    for (const key in VideoFrameTick.setTimeoutCallbacks) {\n      const callback = VideoFrameTick.setTimeoutCallbacks[key];\n      const start = callback.startedAtInMs;\n      if (now - start >= callback.timeoutInMs) {\n        timeoutIds.push(key);\n      }\n    }\n    // invoke the callbacks\n    for (const id of timeoutIds) {\n      const callback = VideoFrameTick.setTimeoutCallbacks[id];\n      callback.callback();\n      delete VideoFrameTick.setTimeoutCallbacks[id];\n    }\n  }\n}\n","import { VideoFrameTick } from './videoFrameTick';\n\nexport type VideoPerformanceStatisticsResult = {\n  effectId: string;\n  effectParam?: string;\n  frameWidth: number;\n  frameHeight: number;\n  /**\n   * The duration in milliseconds that the data were collected\n   */\n  duration: number;\n  /**\n   * The number of frames that were processed in the duration\n   */\n  sampleCount: number;\n  /**\n   * An array that presents counts of frames that were finished in n milliseconds:\n   * distributionBins[frameProcessingDurationInMs]=frameCount.\n   * For example, distributionBins[10] = 5 means that 5 frames were processed in 10 milliseconds.\n   */\n  distributionBins: Uint32Array;\n};\n\nexport class VideoPerformanceStatistics {\n  private static readonly initialSessionTimeoutInMs = 1000;\n  private static readonly maxSessionTimeoutInMs = 1000 * 30;\n\n  private currentSession: {\n    startedAtInMs: number;\n    timeoutInMs: number;\n    effectId: string;\n    effectParam?: string;\n    frameWidth: number;\n    frameHeight: number;\n  };\n\n  private frameProcessingStartedAt: number;\n  private distributionBins: Uint32Array;\n  private sampleCount = 0;\n  private timeoutId: string;\n\n  public constructor(\n    distributionBinSize: number,\n    /**\n     * Function to report the statistics result\n     */\n    private reportStatisticsResult: (result: VideoPerformanceStatisticsResult) => void,\n  ) {\n    this.distributionBins = new Uint32Array(distributionBinSize);\n  }\n\n  /**\n   * Call this function before processing every frame\n   */\n  public processStarts(effectId: string, frameWidth: number, frameHeight: number, effectParam?: string): void {\n    VideoFrameTick.tick();\n    if (!this.suitableForThisSession(effectId, frameWidth, frameHeight, effectParam)) {\n      this.reportAndResetSession(this.getStatistics(), effectId, effectParam, frameWidth, frameHeight);\n    }\n    this.start();\n  }\n\n  public processEnds(): void {\n    // calculate duration of the process and record it\n    const durationInMillisecond = performance.now() - this.frameProcessingStartedAt;\n    const binIndex = Math.floor(Math.max(0, Math.min(this.distributionBins.length - 1, durationInMillisecond)));\n    this.distributionBins[binIndex] += 1;\n    this.sampleCount += 1;\n  }\n\n  private getStatistics(): VideoPerformanceStatisticsResult | null {\n    if (!this.currentSession) {\n      return null;\n    }\n    return {\n      effectId: this.currentSession.effectId,\n      effectParam: this.currentSession.effectParam,\n      frameHeight: this.currentSession.frameHeight,\n      frameWidth: this.currentSession.frameWidth,\n      duration: performance.now() - this.currentSession.startedAtInMs,\n      sampleCount: this.sampleCount,\n      distributionBins: this.distributionBins.slice(),\n    };\n  }\n\n  private start(): void {\n    this.frameProcessingStartedAt = performance.now();\n  }\n\n  private suitableForThisSession(\n    effectId: string,\n    frameWidth: number,\n    frameHeight: number,\n    effectParam?: string,\n  ): boolean {\n    return (\n      this.currentSession &&\n      this.currentSession.effectId === effectId &&\n      this.currentSession.effectParam === effectParam &&\n      this.currentSession.frameWidth === frameWidth &&\n      this.currentSession.frameHeight === frameHeight\n    );\n  }\n\n  private reportAndResetSession(result, effectId, effectParam, frameWidth, frameHeight): void {\n    result && this.reportStatisticsResult(result);\n    this.resetCurrentSession(\n      this.getNextTimeout(effectId, this.currentSession),\n      effectId,\n      effectParam,\n      frameWidth,\n      frameHeight,\n    );\n    if (this.timeoutId) {\n      VideoFrameTick.clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = VideoFrameTick.setTimeout(\n      (() => this.reportAndResetSession(this.getStatistics(), effectId, effectParam, frameWidth, frameHeight)).bind(\n        this,\n      ),\n      this.currentSession.timeoutInMs,\n    );\n  }\n\n  private resetCurrentSession(\n    timeoutInMs: number,\n    effectId: string,\n    effectParam: string,\n    frameWidth: number,\n    frameHeight: number,\n  ): void {\n    this.currentSession = {\n      startedAtInMs: performance.now(),\n      timeoutInMs,\n      effectId,\n      effectParam,\n      frameWidth,\n      frameHeight,\n    };\n    this.sampleCount = 0;\n    this.distributionBins.fill(0);\n  }\n\n  // send the statistics result every n second, where n starts from 1, 2, 4...and finally stays at every 30 seconds.\n  private getNextTimeout(effectId: string, currentSession?: { timeoutInMs: number; effectId: string }): number {\n    // only reset timeout when new session or effect changed\n    if (!currentSession || currentSession.effectId !== effectId) {\n      return VideoPerformanceStatistics.initialSessionTimeoutInMs;\n    }\n    return Math.min(VideoPerformanceStatistics.maxSessionTimeoutInMs, currentSession.timeoutInMs * 2);\n  }\n}\n","import { ApiName, ApiVersionNumber, getApiVersionTag } from './telemetry';\nimport { VideoFrameTick } from './videoFrameTick';\nimport { VideoPerformanceStatistics } from './videoPerformanceStatistics';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst videoPerformanceMonitorTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * This class is used to monitor the performance of video processing, and report performance events.\n */\nexport class VideoPerformanceMonitor {\n  private static readonly distributionBinSize = 1000;\n  private static readonly calculateFPSInterval = 1000;\n\n  private isFirstFrameProcessed = false;\n\n  // The effect that the user last selected:\n  private applyingEffect?: {\n    effectId: string;\n    effectParam?: string;\n  };\n\n  // The effect that is currently applied to the video:\n  private appliedEffect?: {\n    effectId: string;\n    effectParam?: string;\n  };\n\n  private frameProcessTimeLimit = 100;\n  private gettingTextureStreamStartedAt: number;\n  private currentStreamId: string;\n  private frameProcessingStartedAt = 0;\n  private frameProcessingTimeCost = 0;\n  private processedFrameCount = 0;\n\n  private performanceStatistics: VideoPerformanceStatistics;\n\n  public constructor(\n    private reportPerformanceEvent: (apiVersionTag: string, actionName: string, args: unknown[]) => void,\n  ) {\n    this.performanceStatistics = new VideoPerformanceStatistics(VideoPerformanceMonitor.distributionBinSize, (result) =>\n      this.reportPerformanceEvent(\n        getApiVersionTag(videoPerformanceMonitorTelemetryVersionNumber, ApiName.VideoPerformanceMonitor_Constructor),\n        'video.performance.performanceDataGenerated',\n        [result],\n      ),\n    );\n  }\n\n  /**\n   * Start to check frame processing time intervally\n   * and report performance event if the average frame processing time is too long.\n   */\n  public startMonitorSlowFrameProcessing(): void {\n    VideoFrameTick.setInterval(() => {\n      if (this.processedFrameCount === 0) {\n        return;\n      }\n      const averageFrameProcessingTime = this.frameProcessingTimeCost / this.processedFrameCount;\n      if (averageFrameProcessingTime > this.frameProcessTimeLimit) {\n        this.reportPerformanceEvent(\n          getApiVersionTag(\n            videoPerformanceMonitorTelemetryVersionNumber,\n            ApiName.VideoPerformanceMonitor_StartMonitorSlowFrameProcessing,\n          ),\n          'video.performance.frameProcessingSlow',\n          [averageFrameProcessingTime],\n        );\n      }\n      this.frameProcessingTimeCost = 0;\n      this.processedFrameCount = 0;\n    }, VideoPerformanceMonitor.calculateFPSInterval);\n  }\n\n  /**\n   * Define the time limit of frame processing.\n   * When the average frame processing time is longer than the time limit, a \"video.performance.frameProcessingSlow\" event will be reported.\n   * @param timeLimit\n   */\n  public setFrameProcessTimeLimit(timeLimit: number): void {\n    this.frameProcessTimeLimit = timeLimit;\n  }\n\n  /**\n   * Call this function when the app starts to switch to the new video effect\n   */\n  public reportApplyingVideoEffect(effectId: string, effectParam?: string): void {\n    if (this.applyingEffect?.effectId === effectId && this.applyingEffect?.effectParam === effectParam) {\n      return;\n    }\n    this.applyingEffect = {\n      effectId,\n      effectParam,\n    };\n    this.appliedEffect = undefined;\n  }\n\n  /**\n   * Call this function when the new video effect is ready\n   */\n  public reportVideoEffectChanged(effectId: string, effectParam?: string): void {\n    if (\n      this.applyingEffect === undefined ||\n      (this.applyingEffect.effectId !== effectId && this.applyingEffect.effectParam !== effectParam)\n    ) {\n      // don't handle obsoleted event\n      return;\n    }\n    this.appliedEffect = {\n      effectId,\n      effectParam,\n    };\n    this.applyingEffect = undefined;\n    this.isFirstFrameProcessed = false;\n  }\n\n  /**\n   * Call this function when the app starts to process a video frame\n   */\n  public reportStartFrameProcessing(frameWidth: number, frameHeight: number): void {\n    VideoFrameTick.tick();\n    if (!this.appliedEffect) {\n      return;\n    }\n    this.frameProcessingStartedAt = performance.now();\n    this.performanceStatistics.processStarts(\n      this.appliedEffect.effectId,\n      frameWidth,\n      frameHeight,\n      this.appliedEffect.effectParam,\n    );\n  }\n\n  /**\n   * Call this function when the app finishes successfully processing a video frame\n   */\n  public reportFrameProcessed(): void {\n    if (!this.appliedEffect) {\n      return;\n    }\n    this.processedFrameCount++;\n    this.frameProcessingTimeCost += performance.now() - this.frameProcessingStartedAt;\n    this.performanceStatistics.processEnds();\n    if (!this.isFirstFrameProcessed) {\n      this.isFirstFrameProcessed = true;\n      this.reportPerformanceEvent(\n        getApiVersionTag(\n          videoPerformanceMonitorTelemetryVersionNumber,\n          ApiName.VideoPerformanceMonitor_ReportFrameProcessed,\n        ),\n        'video.performance.firstFrameProcessed',\n        [Date.now(), this.appliedEffect.effectId, this.appliedEffect?.effectParam],\n      );\n    }\n  }\n\n  /**\n   * Call this function when the app starts to get the texture stream\n   */\n  public reportGettingTextureStream(streamId: string): void {\n    this.gettingTextureStreamStartedAt = performance.now();\n    this.currentStreamId = streamId;\n  }\n\n  /**\n   * Call this function when the app finishes successfully getting the texture stream\n   */\n  public reportTextureStreamAcquired(): void {\n    if (this.gettingTextureStreamStartedAt !== undefined) {\n      const timeTaken = performance.now() - this.gettingTextureStreamStartedAt;\n      this.reportPerformanceEvent(\n        getApiVersionTag(\n          videoPerformanceMonitorTelemetryVersionNumber,\n          ApiName.VideoPerformanceMonitor_ReportTextureStreamAcquired,\n        ),\n        'video.performance.textureStreamAcquired',\n        [this.currentStreamId, timeTaken],\n      );\n    }\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { inServerSideRenderingEnvironment, ssrSafeWindow } from '../internal/utils';\nimport { createEffectParameterChangeCallback, processMediaStream } from '../internal/videoEffectsUtils';\nimport { VideoPerformanceMonitor } from '../internal/videoPerformanceMonitor';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst videoEffectsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to video extensibility of the SDK\n * @beta\n */\nexport namespace videoEffects {\n  const videoPerformanceMonitor = inServerSideRenderingEnvironment()\n    ? undefined\n    : new VideoPerformanceMonitor(sendMessageToParent);\n\n  /** Notify video frame processed function type */\n  export type notifyVideoFrameProcessedFunctionType = () => void;\n  /** Notify error function type */\n  export type notifyErrorFunctionType = (errorMessage: string) => void;\n\n  /**\n   * Represents a video frame\n   * @beta\n   */\n  export interface VideoBufferData {\n    /**\n     * Video frame width\n     */\n    width: number;\n    /**\n     * Video frame height\n     */\n    height: number;\n    /**\n     * Video frame buffer\n     */\n    videoFrameBuffer: Uint8ClampedArray;\n    /**\n     * NV12 luma stride, valid only when video frame format is NV12\n     */\n    lumaStride?: number;\n    /**\n     * NV12 chroma stride, valid only when video frame format is NV12\n     */\n    chromaStride?: number;\n    /**\n     * RGB stride, valid only when video frame format is RGB\n     */\n    stride?: number;\n    /**\n     * The time stamp of the current video frame\n     */\n    timestamp?: number;\n  }\n\n  /**\n   * Video frame format enum, currently only support NV12\n   * @beta\n   */\n  export enum VideoFrameFormat {\n    /** Video format used for encoding and decoding YUV color data in video streaming and storage applications. */\n    NV12 = 'NV12',\n  }\n\n  /**\n   * Video frame configuration supplied to the host to customize the generated video frame parameters, like format\n   * @beta\n   */\n  export interface VideoFrameConfig {\n    /**\n     * Video format\n     */\n    format: VideoFrameFormat;\n  }\n\n  /**\n   * Video effect change type enum\n   * @beta\n   */\n  export enum EffectChangeType {\n    /**\n     * Current video effect changed\n     */\n    EffectChanged = 'EffectChanged',\n    /**\n     * Disable the video effect\n     */\n    EffectDisabled = 'EffectDisabled',\n  }\n\n  /**\n   * Predefined failure reasons for preparing the selected video effect\n   * @beta\n   */\n  export enum EffectFailureReason {\n    /**\n     * A wrong effect id is provide.\n     * Use this reason when the effect id is not found or empty, this may indicate a mismatch between the app and its manifest or a bug of the host.\n     */\n    InvalidEffectId = 'InvalidEffectId',\n    /**\n     * The effect can't be initialized\n     */\n    InitializationFailure = 'InitializationFailure',\n  }\n\n  /**\n   * Video effect change call back function definition\n   * Return a Promise which will be resolved when the effect is prepared, or throw an {@link EffectFailureReason} on error.\n   * @beta\n   */\n  export type VideoEffectCallback = (effectId: string | undefined) => Promise<void>;\n\n  /**\n   * @beta\n   * Video frame call back function definition\n   * The callback will be called on every frame when running on the supported host.\n   * We require the frame rate of the video to be at least 22fps for 720p, thus the callback should process a frame timely.\n   * The video app should call `notifyVideoFrameProcessed` to notify a successfully processed video frame.\n   * The video app should call `notifyError` to notify a failure. When the failures accumulate to a certain number, the host will see the app is \"frozen\" and ask the user to close it or not.\n   */\n  export type VideoBufferHandler = (\n    videoBufferData: VideoBufferData,\n    notifyVideoFrameProcessed: notifyVideoFrameProcessedFunctionType,\n    notifyError: notifyErrorFunctionType,\n  ) => void;\n\n  /**\n   * @beta\n   * VideoFrame definition, align with the W3C spec: https://www.w3.org/TR/webcodecs/#videoframe-interface.\n   * The current version of typescript doesn't have the definition of VideoFrame so we have to define it here.\n   * At runtime it can be cast to VideoFrame directly: `(videoFrame as VideoFrame)`.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface VideoFrame {}\n\n  /**\n   * @beta\n   * Video frame data extracted from the media stream. More properties may be added in the future.\n   */\n  export type VideoFrameData = {\n    /**\n     * The video frame from the media stream.\n     */\n    videoFrame: VideoFrame;\n  };\n\n  /**\n   * @beta\n   * Video frame call back function definition.\n   * The callback will be called on every frame when running on the supported host.\n   * We require the frame rate of the video to be at least 22fps for 720p, thus the callback should process a frame timely.\n   * The video app should resolve the promise to notify a successfully processed video frame.\n   * The video app should reject the promise to notify a failure. When the failures accumulate to a certain number, the host will see the app is \"frozen\" and ask the user to close it or not.\n   */\n  export type VideoFrameHandler = (receivedVideoFrame: VideoFrameData) => Promise<VideoFrame>;\n\n  /**\n   * @beta\n   * Callbacks and configuration supplied to the host to process the video frames.\n   */\n  export type RegisterForVideoFrameParameters = {\n    /**\n     * Callback function to process the video frames extracted from a media stream.\n     */\n    videoFrameHandler: VideoFrameHandler;\n    /**\n     * Callback function to process the video frames shared by the host.\n     */\n    videoBufferHandler: VideoBufferHandler;\n    /**\n     * Video frame configuration supplied to the host to customize the generated video frame parameters, like format\n     */\n    config: VideoFrameConfig;\n  };\n\n  /**\n   * Register callbacks to process the video frames if the host supports it.\n   * @beta\n   * @param parameters - Callbacks and configuration to process the video frames. A host may support either {@link VideoFrameHandler} or {@link VideoBufferHandler}, but not both.\n   * To ensure the video effect works on all supported hosts, the video app must provide both {@link VideoFrameHandler} and {@link VideoBufferHandler}.\n   * The host will choose the appropriate callback based on the host's capability.\n   *\n   * @example\n   * ```typescript\n   * videoEffects.registerForVideoFrame({\n   *   videoFrameHandler: async (videoFrameData) => {\n   *     const originalFrame = videoFrameData.videoFrame as VideoFrame;\n   *     try {\n   *       const processedFrame = await processFrame(originalFrame);\n   *       return processedFrame;\n   *     } catch (e) {\n   *       throw e;\n   *     }\n   *   },\n   *   videoBufferHandler: (\n   *     bufferData: VideoBufferData,\n   *     notifyVideoFrameProcessed: notifyVideoFrameProcessedFunctionType,\n   *     notifyError: notifyErrorFunctionType\n   *     ) => {\n   *       try {\n   *         processFrameInplace(bufferData);\n   *         notifyVideoFrameProcessed();\n   *       } catch (e) {\n   *         notifyError(e);\n   *       }\n   *     },\n   *   config: {\n   *     format: videoEffects.VideoPixelFormat.NV12,\n   *   }\n   * });\n   * ```\n   */\n  export function registerForVideoFrame(parameters: RegisterForVideoFrameParameters): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!parameters.videoFrameHandler || !parameters.videoBufferHandler) {\n      throw new Error('Both videoFrameHandler and videoBufferHandler must be provided');\n    }\n    registerHandler(\n      getApiVersionTag(\n        videoEffectsTelemetryVersionNumber,\n        ApiName.VideoEffects_RegisterSetFrameProcessTimeLimitHandler,\n      ),\n      'video.setFrameProcessTimeLimit',\n      (timeLimitInfo: { timeLimit: number }) =>\n        videoPerformanceMonitor?.setFrameProcessTimeLimit(timeLimitInfo.timeLimit),\n      false,\n    );\n    if (doesSupportMediaStream()) {\n      registerForMediaStream(parameters.videoFrameHandler, parameters.config);\n    } else if (doesSupportSharedFrame()) {\n      registerForVideoBuffer(parameters.videoBufferHandler, parameters.config);\n    } else {\n      // should not happen if isSupported() is true\n      throw errorNotSupportedOnPlatform;\n    }\n    videoPerformanceMonitor?.startMonitorSlowFrameProcessing();\n  }\n\n  /**\n   * Video extension should call this to notify host that the current selected effect parameter changed.\n   * If it's pre-meeting, host will call videoEffectCallback immediately then use the videoEffect.\n   * If it's the in-meeting scenario, we will call videoEffectCallback when apply button clicked.\n   * @beta\n   * @param effectChangeType - the effect change type.\n   * @param effectId - Newly selected effect id.\n   */\n  export function notifySelectedVideoEffectChanged(\n    effectChangeType: EffectChangeType,\n    effectId: string | undefined,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_NotifySelectedVideoEffectChanged),\n      'video.videoEffectChanged',\n      [effectChangeType, effectId],\n    );\n  }\n\n  /**\n   * Register a callback to be notified when a new video effect is applied.\n   * @beta\n   * @param callback - Function to be called when new video effect is applied.\n   */\n  export function registerForVideoEffect(callback: VideoEffectCallback): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    registerHandler(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_RegisterEffectParameterChangeHandler),\n      'video.effectParameterChange',\n      createEffectParameterChangeCallback(callback, videoPerformanceMonitor),\n      false,\n    );\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_RegisterForVideoEffect),\n      'video.registerForVideoEffect',\n    );\n  }\n\n  /**\n   * Sending notification to host finished the video frame processing, now host can render this video frame\n   * or pass the video frame to next one in video pipeline\n   * @beta\n   */\n  function notifyVideoFrameProcessed(timestamp?: number): void {\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_NotifyVideoFrameProcessed),\n      'video.videoFrameProcessed',\n      [timestamp],\n    );\n  }\n\n  /**\n   * Sending error notification to host\n   * @beta\n   * @param errorMessage - The error message that will be sent to the host\n   */\n  function notifyError(errorMessage: string): void {\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_NotifyError),\n      'video.notifyError',\n      [errorMessage],\n    );\n  }\n\n  /**\n   * Checks if video capability is supported by the host.\n   * @beta\n   * @returns boolean to represent whether the video capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   */\n  export function isSupported(): boolean {\n    return (\n      ensureInitialized(runtime) &&\n      !!runtime.supports.video &&\n      /** A host should support either mediaStream or sharedFrame sub-capability to support the video capability */\n      (!!runtime.supports.video.mediaStream || !!runtime.supports.video.sharedFrame)\n    );\n  }\n\n  function registerForMediaStream(videoFrameHandler: VideoFrameHandler, config: VideoFrameConfig): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported() || !doesSupportMediaStream()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    registerHandler(\n      getApiVersionTag(\n        videoEffectsTelemetryVersionNumber,\n        ApiName.VideoEffects_RegisterStartVideoExtensibilityVideoStreamHandler,\n      ),\n      'video.startVideoExtensibilityVideoStream',\n      async (mediaStreamInfo: { streamId: string }) => {\n        // when a new streamId is ready:\n        const { streamId } = mediaStreamInfo;\n        const monitoredVideoFrameHandler = createMonitoredVideoFrameHandler(videoFrameHandler, videoPerformanceMonitor);\n        await processMediaStream(streamId, monitoredVideoFrameHandler, notifyError, videoPerformanceMonitor);\n      },\n      false,\n    );\n\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_MediaStream_RegisterForVideoFrame),\n      'video.mediaStream.registerForVideoFrame',\n      [config],\n    );\n  }\n\n  function createMonitoredVideoFrameHandler(\n    videoFrameHandler: VideoFrameHandler,\n    videoPerformanceMonitor?: VideoPerformanceMonitor,\n  ): VideoFrameHandler {\n    return async (videoFrameData: VideoFrameData): Promise<VideoFrame> => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const originalFrame = videoFrameData.videoFrame as any;\n      videoPerformanceMonitor?.reportStartFrameProcessing(originalFrame.codedWidth, originalFrame.codedHeight);\n      const processedFrame = await videoFrameHandler(videoFrameData);\n      videoPerformanceMonitor?.reportFrameProcessed();\n      return processedFrame;\n    };\n  }\n\n  /**\n   * Old video frame data structure, almost identical to the {@link VideoBufferData} except `videoFrameBuffer` is named as `data`.\n   * Old host like the old Teams passes this data to the SDK. It will be deprecated in the future.\n   */\n  type LegacyVideoBufferData = Omit<VideoBufferData, 'videoFrameBuffer'> & {\n    /**\n     * Video frame buffer\n     */\n    data: Uint8ClampedArray;\n  };\n\n  function registerForVideoBuffer(videoBufferHandler: VideoBufferHandler, config: VideoFrameConfig): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported() || !doesSupportSharedFrame()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    registerHandler(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_RegisterForVideoBufferHandler),\n      'video.newVideoFrame',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (videoBufferData: VideoBufferData | LegacyVideoBufferData) => {\n        if (videoBufferData) {\n          const timestamp = videoBufferData.timestamp;\n          videoPerformanceMonitor?.reportStartFrameProcessing(videoBufferData.width, videoBufferData.height);\n          videoBufferHandler(\n            normalizeVideoBufferData(videoBufferData),\n            () => {\n              videoPerformanceMonitor?.reportFrameProcessed();\n              notifyVideoFrameProcessed(timestamp);\n            },\n            notifyError,\n          );\n        }\n      },\n      false,\n    );\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsTelemetryVersionNumber, ApiName.VideoEffects_RegisterForVideoFrame),\n      'video.registerForVideoFrame',\n      [config],\n    );\n  }\n\n  function normalizeVideoBufferData(videoBufferData: VideoBufferData | LegacyVideoBufferData): VideoBufferData {\n    if ('videoFrameBuffer' in videoBufferData) {\n      return videoBufferData;\n    } else {\n      // The host may pass the VideoFrame with the old definition which has `data` instead of `videoFrameBuffer`\n      const { data, ...newVideoBufferData } = videoBufferData;\n      return {\n        ...newVideoBufferData,\n        videoFrameBuffer: data,\n      };\n    }\n  }\n\n  function doesSupportMediaStream(): boolean {\n    return (\n      ensureInitialized(runtime, FrameContexts.sidePanel) &&\n      isTextureStreamAvailable() &&\n      !!runtime.supports.video?.mediaStream\n    );\n  }\n\n  function isTextureStreamAvailable(): boolean {\n    return !!(\n      ssrSafeWindow()['chrome']?.webview?.getTextureStream && ssrSafeWindow()['chrome']?.webview?.registerTextureStream\n    );\n  }\n\n  function doesSupportSharedFrame(): boolean {\n    return ensureInitialized(runtime, FrameContexts.sidePanel) && !!runtime.supports.video?.sharedFrame;\n  }\n} //end of video namespace\n","import { videoEffectsEx } from '../private/videoEffectsEx';\nimport { errorNotSupportedOnPlatform } from '../public/constants';\nimport { videoEffects } from '../public/videoEffects';\nimport { sendMessageToParent } from './communication';\nimport { registerHandler } from './handlers';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from './telemetry';\nimport { inServerSideRenderingEnvironment, ssrSafeWindow } from './utils';\nimport {\n  AllowSharedBufferSource,\n  PlaneLayout,\n  VideoFrameBufferInit,\n  VideoFrameCopyToOptions,\n  VideoFrameInit,\n  VideoPixelFormat,\n} from './VideoFrameTypes';\nimport { VideoPerformanceMonitor } from './videoPerformanceMonitor';\n\n/**\n * @hidden\n * Align with the W3C spec: https://www.w3.org/TR/webcodecs/\n *\n * @internal\n * Limited to Microsoft-internal use\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst videoEffectsUtilTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\ninterface VideoFrame {\n  /**\n   * The width of the VideoFrame in pixels, potentially including non-visible padding, and prior to\n   * considering potential ratio adjustments.\n   */\n  readonly codedWidth: number;\n  /**\n   * The height of the VideoFrame in pixels, potentially including non-visible padding, and prior to\n   * considering potential ratio adjustments.\n   */\n  readonly codedHeight: number;\n  /**\n   * The pixel format of the VideoFrame.\n   */\n  readonly format: VideoPixelFormat | null;\n  /**\n   * An integer indicating the timestamp of the video in microseconds.\n   */\n  readonly timestamp: number;\n  /**\n   * Clears all states and releases the reference to the media resource\n   */\n  close(): void;\n  /**\n   * Copies the contents of the VideoFrame to an ArrayBuffer\n   * @param destination An ArrayBuffer, a TypedArray, or a DataView to copy to.\n   * @param options An object containing rect - the rectangle of pixels to copy from the VideoFrame.\n   */\n  copyTo(destination: AllowSharedBufferSource, options?: VideoFrameCopyToOptions): Promise<PlaneLayout[]>;\n}\n\n/**\n * @hidden\n */\n// eslint-disable-next-line strict-null-checks/all\ndeclare const VideoFrame: {\n  prototype: videoEffects.VideoFrame;\n  new (source: CanvasImageSource, init?: VideoFrameInit): videoEffects.VideoFrame;\n  new (data: AllowSharedBufferSource, init: VideoFrameBufferInit): videoEffects.VideoFrame;\n};\n\n/**\n * @hidden\n * Create a MediaStreamTrack from the media stream with the given streamId and processed by videoFrameHandler.\n */\nexport async function processMediaStream(\n  streamId: string,\n  videoFrameHandler: videoEffects.VideoFrameHandler,\n  notifyError: (string) => void,\n  videoPerformanceMonitor?: VideoPerformanceMonitor,\n): Promise<void> {\n  const generator = createProcessedStreamGeneratorWithoutSource();\n  !inServerSideRenderingEnvironment() && window['chrome']?.webview?.registerTextureStream(streamId, generator);\n  pipeVideoSourceToGenerator(\n    await getInputVideoTrack(streamId, notifyError, videoPerformanceMonitor),\n    new DefaultTransformer(notifyError, videoFrameHandler),\n    generator.writable,\n  );\n}\n\n/**\n * @hidden\n * Create a MediaStreamTrack from the media stream with the given streamId and processed by videoFrameHandler.\n * The videoFrameHandler will receive metadata of the video frame.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport async function processMediaStreamWithMetadata(\n  streamId: string,\n  videoFrameHandler: videoEffectsEx.VideoFrameHandler,\n  notifyError: (string) => void,\n  videoPerformanceMonitor?: VideoPerformanceMonitor,\n): Promise<void> {\n  const generator = createProcessedStreamGeneratorWithoutSource();\n  !inServerSideRenderingEnvironment() && window['chrome']?.webview?.registerTextureStream(streamId, generator);\n  pipeVideoSourceToGenerator(\n    await getInputVideoTrack(streamId, notifyError, videoPerformanceMonitor),\n    new TransformerWithMetadata(notifyError, videoFrameHandler),\n    generator.writable,\n  );\n}\n\n/**\n * Get the video track from the media stream gotten from chrome.webview.getTextureStream(streamId).\n */\nasync function getInputVideoTrack(\n  streamId: string,\n  notifyError: (string) => void,\n  videoPerformanceMonitor?: VideoPerformanceMonitor,\n): Promise<MediaStreamTrack> {\n  if (inServerSideRenderingEnvironment()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = ssrSafeWindow()['chrome'] as any;\n  try {\n    videoPerformanceMonitor?.reportGettingTextureStream(streamId);\n    const mediaStream = await chrome.webview.getTextureStream(streamId);\n    const tracks = mediaStream.getVideoTracks();\n    if (tracks.length === 0) {\n      throw new Error(`No video track in stream ${streamId}`);\n    }\n    videoPerformanceMonitor?.reportTextureStreamAcquired();\n    return tracks[0];\n  } catch (error) {\n    const errorMsg = `Failed to get video track from stream ${streamId}, error: ${error}`;\n    notifyError(errorMsg);\n    throw new Error(`Internal error: can't get video track from stream ${streamId}`);\n  }\n}\n\n/**\n * The function to create a MediaStreamTrack generator.\n * The generator can then get the processed frames as media stream source.\n * The generator can be registered back to the media stream so that the host can get the processed frames.\n */\nfunction createProcessedStreamGeneratorWithoutSource(): MediaStreamTrack & { writable: WritableStream } {\n  if (inServerSideRenderingEnvironment()) {\n    throw errorNotSupportedOnPlatform;\n  }\n  const MediaStreamTrackGenerator = window['MediaStreamTrackGenerator'];\n  if (!MediaStreamTrackGenerator) {\n    throw errorNotSupportedOnPlatform;\n  }\n  return new MediaStreamTrackGenerator({ kind: 'video' });\n}\n\n/**\n * The function to create a processed video track from the original video track.\n * It reads frames from the video track and pipes them to the video frame callback to process the frames.\n * The processed frames are then enqueued to the generator.\n */\nfunction pipeVideoSourceToGenerator(\n  videoTrack: unknown,\n  transformer: TransformerWithMetadata | DefaultTransformer,\n  sink: WritableStream,\n): void {\n  const MediaStreamTrackProcessor = ssrSafeWindow()['MediaStreamTrackProcessor'];\n  const processor = new MediaStreamTrackProcessor({ track: videoTrack });\n  const source = processor.readable;\n\n  source.pipeThrough(new TransformStream(transformer)).pipeTo(sink);\n}\n\n/**\n * @hidden\n * Error messages during video frame transformation.\n */\nconst enum VideoFrameTransformErrors {\n  TimestampIsNull = 'timestamp of the original video frame is null',\n  UnsupportedVideoFramePixelFormat = 'Unsupported video frame pixel format',\n}\n\nclass DefaultTransformer {\n  public constructor(\n    private notifyError: (string) => void,\n    private videoFrameHandler: videoEffects.VideoFrameHandler,\n  ) {}\n\n  public transform = async (originalFrame, controller): Promise<void> => {\n    const timestamp = originalFrame.timestamp;\n    if (timestamp !== null) {\n      try {\n        const frameProcessedByApp = await this.videoFrameHandler({ videoFrame: originalFrame });\n        // the current typescript version(4.6.4) dosn't support webcodecs API fully, we have to do type conversion here.\n        const processedFrame = new VideoFrame(frameProcessedByApp as unknown as CanvasImageSource, {\n          // we need the timestamp to be unchanged from the oirginal frame, so we explicitly set it here.\n          timestamp: timestamp,\n        });\n        controller.enqueue(processedFrame);\n        originalFrame.close();\n        (frameProcessedByApp as VideoFrame).close();\n      } catch (error) {\n        originalFrame.close();\n        this.notifyError(error);\n      }\n    } else {\n      this.notifyError(VideoFrameTransformErrors.TimestampIsNull);\n    }\n  };\n}\n\n/**\n * @hidden\n * Utility class to parse the header of a one-texture-input texture.\n */\nclass OneTextureHeader {\n  private readonly headerDataView: Uint32Array;\n  // Identifier for the texture layout, which is the 4-byte ASCII string \"oti1\" hardcoded by the host\n  // (oti1 stands for \"one texture input version 1\")\n  private readonly ONE_TEXTURE_INPUT_ID = 0x6f746931;\n  private readonly INVALID_HEADER_ERROR = 'Invalid video frame header';\n  private readonly UNSUPPORTED_LAYOUT_ERROR = 'Unsupported texture layout';\n  public constructor(\n    private readonly headerBuffer: ArrayBuffer,\n    private readonly notifyError: (string) => void,\n  ) {\n    this.headerDataView = new Uint32Array(headerBuffer);\n    // headerDataView will contain the following data:\n    // 0: oneTextureLayoutId\n    // 1: version\n    // 2: frameRowOffset\n    // 3: frameFormat\n    // 4: frameWidth\n    // 5: frameHeight\n    // 6: multiStreamHeaderRowOffset\n    // 7: multiStreamCount\n    if (this.headerDataView.length < 8) {\n      this.notifyError(this.INVALID_HEADER_ERROR);\n      throw new Error(this.INVALID_HEADER_ERROR);\n    }\n    // ensure the texture layout is supported\n    if (this.headerDataView[0] !== this.ONE_TEXTURE_INPUT_ID) {\n      this.notifyError(this.UNSUPPORTED_LAYOUT_ERROR);\n      throw new Error(this.UNSUPPORTED_LAYOUT_ERROR);\n    }\n  }\n\n  public get oneTextureLayoutId(): number {\n    return this.headerDataView[0];\n  }\n\n  public get version(): number {\n    return this.headerDataView[1];\n  }\n\n  public get frameRowOffset(): number {\n    return this.headerDataView[2];\n  }\n\n  public get frameFormat(): number {\n    return this.headerDataView[3];\n  }\n\n  public get frameWidth(): number {\n    return this.headerDataView[4];\n  }\n\n  public get frameHeight(): number {\n    return this.headerDataView[5];\n  }\n\n  public get multiStreamHeaderRowOffset(): number {\n    return this.headerDataView[6];\n  }\n\n  public get multiStreamCount(): number {\n    return this.headerDataView[7];\n  }\n}\n\n/**\n * @hidden\n * Utility class to parse the metadata of a one-texture-input texture.\n */\nclass OneTextureMetadata {\n  private readonly metadataMap: Map<number, Uint8Array> = new Map();\n  // Stream id for audio inference metadata, which is the 4-byte ASCII string \"1dia\" hardcoded by the host\n  // (1dia stands for \"audio inference data version 1\")\n  private readonly AUDIO_INFERENCE_RESULT_STREAM_ID = 0x31646961;\n  private readonly ATTRIBUTE_ID_MAP_STREAM_ID = 0x4d444941;\n  public constructor(metadataBuffer: ArrayBuffer, streamCount: number) {\n    const metadataDataView = new Uint32Array(metadataBuffer);\n    for (let i = 0, index = 0; i < streamCount; i++) {\n      const streamId = metadataDataView[index++];\n      const streamDataOffset = metadataDataView[index++];\n      const streamDataSize = metadataDataView[index++];\n      const streamData = new Uint8Array(metadataBuffer, streamDataOffset, streamDataSize);\n      this.metadataMap.set(streamId, streamData);\n    }\n  }\n\n  public get audioInferenceResult(): Uint8Array | undefined {\n    return this.metadataMap.get(this.AUDIO_INFERENCE_RESULT_STREAM_ID);\n  }\n\n  /**\n   * @hidden\n   * Additional attributes on the video frame are string-indexed, with their stream Id dynamically generated.\n   * The mapping of attribute Ids to their stream Ids is itself stored as frame metadata with layout:\n   *\n   * | attribute count  | attribute stream Id  | attribute id                                              | ...   |\n   * | :---:            | :---:                | :---:                                                     | :---: |\n   * | 4 bytes          | 4 bytes              | variable length string (null terminated, 4 byte aligned)  | ...   |\n   *\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  public get attributes(): ReadonlyMap<string, Uint8Array> | undefined {\n    const data = this.metadataMap.get(this.ATTRIBUTE_ID_MAP_STREAM_ID);\n    if (data === undefined) {\n      return undefined;\n    }\n\n    const map: Map<string, Uint8Array> = new Map();\n    const textDecoder = new TextDecoder('utf-8');\n\n    let offset = 0;\n    const count = data[offset] + (data[++offset] << 8) + (data[++offset] << 16) + (data[++offset] << 24);\n\n    for (let i = 0; i < count && offset < data.length - 1; i++) {\n      const streamId = data[++offset] + (data[++offset] << 8) + (data[++offset] << 16) + (data[++offset] << 24);\n\n      // Find start of null-terminator for the subsequent variable-length string entry\n      const nullTerminatorStartIndex = data.findIndex((value, index, _) => {\n        return value == 0 && index > offset;\n      });\n\n      const attributeId = textDecoder.decode(data.slice(++offset, nullTerminatorStartIndex));\n\n      // Read attribute value from metadata map\n      const metadata = this.metadataMap.get(streamId);\n      if (metadata !== undefined) {\n        map.set(attributeId, metadata);\n      }\n\n      // Variable length attribute Id strings are null-terminated to a 4-byte alignment\n      const stringByteLength = nullTerminatorStartIndex - offset;\n      const paddingSize = 4 - (stringByteLength % 4);\n\n      // Set offset to index of last trailing zero\n      offset = nullTerminatorStartIndex + (paddingSize - 1);\n    }\n\n    return map;\n  }\n}\n\nclass TransformerWithMetadata {\n  private shouldDiscardAudioInferenceResult = false;\n\n  public constructor(\n    private notifyError: (string) => void,\n    private videoFrameHandler: videoEffectsEx.VideoFrameHandler,\n  ) {\n    registerHandler(\n      getApiVersionTag(\n        videoEffectsUtilTelemetryVersionNumber,\n        ApiName.VideoEffectsUtils_TransformerWithMetadata_Constructor,\n      ),\n      'video.mediaStream.audioInferenceDiscardStatusChange',\n      ({ discardAudioInferenceResult }: { discardAudioInferenceResult: boolean }) => {\n        this.shouldDiscardAudioInferenceResult = discardAudioInferenceResult;\n      },\n    );\n  }\n\n  public transform = async (originalFrame, controller): Promise<void> => {\n    const timestamp = originalFrame.timestamp;\n    if (timestamp !== null) {\n      try {\n        const { videoFrame, metadata: { audioInferenceResult, attributes } = {} } =\n          await this.extractVideoFrameAndMetadata(originalFrame);\n        const frameProcessedByApp = await this.videoFrameHandler({ videoFrame, audioInferenceResult, attributes });\n        // the current typescript version(4.6.4) dosn't support webcodecs API fully, we have to do type conversion here.\n        const processedFrame = new VideoFrame(frameProcessedByApp as unknown as CanvasImageSource, {\n          // we need the timestamp to be unchanged from the oirginal frame, so we explicitly set it here.\n          timestamp: timestamp,\n        });\n        controller.enqueue(processedFrame);\n        videoFrame.close();\n        originalFrame.close();\n        (frameProcessedByApp as VideoFrame).close();\n      } catch (error) {\n        originalFrame.close();\n        this.notifyError(error);\n      }\n    } else {\n      this.notifyError(VideoFrameTransformErrors.TimestampIsNull);\n    }\n  };\n\n  /**\n   * @hidden\n   * Extract video frame and metadata from the given texture.\n   * The given texure should be in NV12 format and the layout of the texture should be:\n   * | Texture layout        |\n   * | :---                  |\n   * | Header                |\n   * | Real video frame data |\n   * | Metadata              |\n   *\n   * The header data is in the first two rows with the following format:\n   * | oneTextureLayoutId | version | frameRowOffset | frameFormat | frameWidth | frameHeight | multiStreamHeaderRowOffset | multiStreamCount | ...   |\n   * |    :---:           | :---:   | :---:          |  :---:      |  :---:     |  :---:      |  :---:                     |  :---:           | :---: |\n   * | 4 bytes            | 4 bytes | 4 bytes        | 4 bytes     | 4 bytes    | 4 bytes     | 4 bytes                    | 4 bytes          | ...   |\n   *\n   * After header, it comes with the real video frame data.\n   * At the end of the texture, it comes with the metadata. The metadata section can contain multiple types of metadata.\n   * Each type of metadata is called a stream. The section is in the following format:\n   * | stream1.id | stream1.dataOffset | stream1.dataSize | stream2.id | stream2.dataOffset | stream2.dataSize | ... | stream1.data | stream2.data | ... |\n   * | :---:      | :---:              | :---:            |  :---:     |  :---:             |  :---:           |:---:|  :---:       | :---:        |:---:|\n   * | 4 bytes    | 4 bytes            | 4 bytes          | 4 bytes    | 4 bytes            | 4 bytes          | ... | ...          | ...          | ... |\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  private extractVideoFrameAndMetadata = async (\n    texture: VideoFrame,\n  ): Promise<{\n    videoFrame: VideoFrame;\n    metadata: { audioInferenceResult?: Uint8Array; attributes?: ReadonlyMap<string, Uint8Array> };\n  }> => {\n    if (inServerSideRenderingEnvironment()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (texture.format !== 'NV12') {\n      this.notifyError(VideoFrameTransformErrors.UnsupportedVideoFramePixelFormat);\n      throw new Error(VideoFrameTransformErrors.UnsupportedVideoFramePixelFormat);\n    }\n\n    // The rectangle of pixels to copy from the texture. The first two rows are the header.\n    const headerRect = { x: 0, y: 0, width: texture.codedWidth, height: 2 };\n    // allocate buffer for the header\n    // The texture is in NV12 format (https://learn.microsoft.com/windows/win32/medfound/recommended-8-bit-yuv-formats-for-video-rendering#nv12).\n    // NV12 has one luma \"luminance\" plane Y and one UV plane with U and V values interleaved.\n    // In NV12, chroma planes (blue and red) are subsampled in both the horizontal and vertical dimensions by a factor of 2.\n    // So for a 2×2 group of pixels, you have 4 Y samples and 1 U and 1 V sample, each sample being 1 byte.\n    // for a 10×10 NV12 frame: there are 100 Y samples followed by 25 U and 25 V samples interleaved.\n    // The graphical representation of the memory layout of a 2×2 NV12 frame is as follows:\n    // | Y0 | Y1 | Y2 | Y3 | U0 | V0 |\n    // The number of pixels of the header is (headerRect.width * headerRect.height), so the number of bytes of the header is\n    // (the size of the Y plane + the size of the UV plane)\n    // which is (headerRect.width * headerRect.height) + (headerRect.width * headerRect.height) / 2\n    //            = (headerRect.width * headerRect.height * 3) / 2\n    const headerBuffer = new ArrayBuffer((headerRect.width * headerRect.height * 3) / 2);\n    await texture.copyTo(headerBuffer, { rect: headerRect });\n    const header = new OneTextureHeader(headerBuffer, this.notifyError);\n\n    // The rectangle of pixels to copy from the texture. Metadata are at the bottom.\n    const metadataRect = {\n      x: 0,\n      y: header.multiStreamHeaderRowOffset,\n      width: texture.codedWidth,\n      height: texture.codedHeight - header.multiStreamHeaderRowOffset,\n    };\n    // Allocate buffer for the metadata. The number of pixels of the metadata section is\n    // (metadataRect.width * metadataRect.height), so the number of bytes of the metadata section is\n    // (the size of the Y plane + the size of the UV plane), which is\n    // (metadataRect.width * metadataRect.height) + (metadataRect.width * metadataRect.height) / 2\n    //   = (metadataRect.width * metadataRect.height * 3) / 2\n    const metadataBuffer = new ArrayBuffer((metadataRect.width * metadataRect.height * 3) / 2);\n    await texture.copyTo(metadataBuffer, { rect: metadataRect });\n    const metadata = new OneTextureMetadata(metadataBuffer, header.multiStreamCount);\n    return {\n      videoFrame: new VideoFrame(texture as unknown as CanvasImageSource, {\n        timestamp: texture.timestamp,\n        visibleRect: {\n          x: 0,\n          y: header.frameRowOffset,\n          width: header.frameWidth,\n          height: header.frameHeight,\n        },\n      }) as VideoFrame,\n      metadata: {\n        audioInferenceResult: this.shouldDiscardAudioInferenceResult ? undefined : metadata.audioInferenceResult,\n        attributes: metadata.attributes,\n      },\n    };\n  };\n}\n\n/**\n * @hidden\n * Video effect change call back function definition\n * @beta\n *\n * @internal\n * Limited to Microsoft-internal use\n */\ntype VideoEffectCallBack = (effectId: string | undefined, effectParam?: string) => Promise<void>;\n\n/**\n * @hidden\n */\nexport function createEffectParameterChangeCallback(\n  callback: VideoEffectCallBack,\n  videoPerformanceMonitor?: VideoPerformanceMonitor,\n) {\n  return (effectId: string | undefined, effectParam?: string): void => {\n    videoPerformanceMonitor?.reportApplyingVideoEffect(effectId || '', effectParam);\n\n    callback(effectId, effectParam)\n      .then(() => {\n        videoPerformanceMonitor?.reportVideoEffectChanged(effectId || '', effectParam);\n        sendMessageToParent(\n          getApiVersionTag(videoEffectsUtilTelemetryVersionNumber, ApiName.VideoEffectsUtils_ReportVideoEffectChanged),\n          'video.videoEffectReadiness',\n          [true, effectId, undefined, effectParam],\n        );\n      })\n      .catch((reason) => {\n        const validReason =\n          reason in videoEffects.EffectFailureReason ? reason : videoEffects.EffectFailureReason.InitializationFailure;\n        sendMessageToParent(\n          getApiVersionTag(videoEffectsUtilTelemetryVersionNumber, ApiName.VideoEffectsUtils_EffectFailure),\n          'video.videoEffectReadiness',\n          [false, effectId, validReason, effectParam],\n        );\n      });\n  };\n}\n\nexport { VideoEffectCallBack as DefaultVideoEffectCallBack };\n","import { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { inServerSideRenderingEnvironment } from '../internal/utils';\nimport {\n  createEffectParameterChangeCallback,\n  DefaultVideoEffectCallBack as VideoEffectCallBack,\n  processMediaStream,\n  processMediaStreamWithMetadata,\n} from '../internal/videoEffectsUtils';\nimport { VideoPerformanceMonitor } from '../internal/videoPerformanceMonitor';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\nimport { videoEffects } from '../public/videoEffects';\n\n/**\n * @hidden\n * Extended video API\n * @beta\n *\n * @internal\n * Limited to Microsoft-internal use\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst videoEffectsExTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport namespace videoEffectsEx {\n  export const frameProcessingTimeoutInMs = 2000;\n\n  const videoPerformanceMonitor = inServerSideRenderingEnvironment()\n    ? undefined\n    : new VideoPerformanceMonitor(sendMessageToParent);\n  /**\n   * @hidden\n   * Error level when notifying errors to the host, the host will decide what to do acording to the error level.\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export enum ErrorLevel {\n    Fatal = 'fatal',\n    Warn = 'warn',\n  }\n  /**\n   * @hidden\n   * Video frame configuration supplied to the host to customize the generated video frame parameters\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface VideoFrameConfig extends videoEffects.VideoFrameConfig {\n    /**\n     * @hidden\n     * Flag to indicate use camera stream to synthesize video frame or not.\n     * Default value is true.\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    requireCameraStream?: boolean;\n    /**\n     * @hidden\n     * Machine learning model to run in the host to do audio inference for you\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    audioInferenceModel?: ArrayBuffer;\n    /**\n     * @hidden\n     * Specifies additional capabilities that should be applied to the video frame\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    requiredCapabilities?: string[];\n  }\n\n  /**\n   * @hidden\n   * Represents a video frame\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface VideoBufferData extends videoEffects.VideoBufferData {\n    /**\n     * @hidden\n     * The model output if you passed in an {@linkcode VideoFrameConfig.audioInferenceModel}\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    audioInferenceResult?: Uint8Array;\n  }\n\n  /**\n   * Old video frame data structure, almost identical to the {@link VideoBufferData} except `videoFrameBuffer` is named as `data`.\n   * Old host like the old Teams passes this data to the SDK. It will be deprecated in the future.\n   */\n  type LegacyVideoBufferData = Omit<VideoBufferData, 'videoFrameBuffer'> & {\n    /**\n     * Video frame buffer\n     */\n    data: Uint8ClampedArray;\n  };\n\n  /**\n   * @hidden\n   * The callback will be called on every frame when running on the supported host.\n   * We require the frame rate of the video to be at least 22fps for 720p, thus the callback should process a frame timely.\n   * The video app should call `notifyVideoFrameProcessed` to notify a successfully processed video frame.\n   * The video app should call `notifyError` to notify a failure. When the failures accumulate to a certain number(determined by the host), the host will see the app is \"frozen\" and give the user the option to close the app.\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type VideoBufferHandler = (\n    videoBufferData: VideoBufferData,\n    notifyVideoFrameProcessed: () => void,\n    notifyError: (errorMessage: string) => void,\n  ) => void;\n\n  /**\n   * @hidden\n   * Video frame data extracted from the media stream. More properties may be added in the future.\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type VideoFrameData = videoEffects.VideoFrameData & {\n    /**\n     * @hidden\n     * The model output if you passed in an {@linkcode VideoFrameConfig.audioInferenceModel}\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    audioInferenceResult?: Uint8Array;\n    /**\n     * @hidden\n     * Additional metadata determined by capabilities specified in {@linkcode VideoFrameConfig.requiredCapabilities}\n     * @beta\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     */\n    attributes?: ReadonlyMap<string, Uint8Array>;\n  };\n\n  /**\n   * @hidden\n   * The callback will be called on every frame when running on the supported host.\n   * We require the frame rate of the video to be at least 22fps for 720p, thus the callback should process a frame timely.\n   * The video app should resolve the promise to notify a successfully processed video frame.\n   * The video app should reject the promise to notify a failure. When the failures accumulate to a certain number(determined by the host), the host will see the app is \"frozen\" and give the user the option to close the app.\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type VideoFrameHandler = (receivedVideoFrame: VideoFrameData) => Promise<videoEffects.VideoFrame>;\n\n  /**\n   * @hidden\n   * @beta\n   * Callbacks and configuration supplied to the host to process the video frames.\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export type RegisterForVideoFrameParameters = {\n    /**\n     * Callback function to process the video frames extracted from a media stream.\n     */\n    videoFrameHandler: VideoFrameHandler;\n    /**\n     * Callback function to process the video frames shared by the host.\n     */\n    videoBufferHandler: VideoBufferHandler;\n    /**\n     * Video frame configuration supplied to the host to customize the generated video frame parameters, like format\n     */\n    config: VideoFrameConfig;\n  };\n\n  /**\n   * @hidden\n   * Register to process video frames\n   * @beta\n   *\n   * @param parameters - Callbacks and configuration to process the video frames. A host may support either {@link VideoFrameHandler} or {@link VideoBufferHandler}, but not both.\n   * To ensure the video effect works on all supported hosts, the video app must provide both {@link VideoFrameHandler} and {@link VideoBufferHandler}.\n   * The host will choose the appropriate callback based on the host's capability.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerForVideoFrame(parameters: RegisterForVideoFrameParameters): void {\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!parameters.videoFrameHandler || !parameters.videoBufferHandler) {\n      throw new Error('Both videoFrameHandler and videoBufferHandler must be provided');\n    }\n\n    if (ensureInitialized(runtime, FrameContexts.sidePanel)) {\n      registerHandler(\n        getApiVersionTag(\n          videoEffectsExTelemetryVersionNumber,\n          ApiName.VideoEffectsEx_RegisterSetFrameProcessTimeLimitHandler,\n        ),\n        'video.setFrameProcessTimeLimit',\n        (timeLimit: number) => videoPerformanceMonitor?.setFrameProcessTimeLimit(timeLimit),\n        false,\n      );\n      if (runtime.supports.video?.mediaStream) {\n        registerHandler(\n          getApiVersionTag(\n            videoEffectsExTelemetryVersionNumber,\n            ApiName.VideoEffectsEx_RegisterStartVideoExtensibilityVideoStreamHandler,\n          ),\n          'video.startVideoExtensibilityVideoStream',\n          async (mediaStreamInfo: { streamId: string; metadataInTexture?: boolean }) => {\n            const { streamId, metadataInTexture } = mediaStreamInfo;\n            const handler = videoPerformanceMonitor\n              ? createMonitoredVideoFrameHandler(parameters.videoFrameHandler, videoPerformanceMonitor)\n              : parameters.videoFrameHandler;\n            metadataInTexture\n              ? await processMediaStreamWithMetadata(streamId, handler, notifyError, videoPerformanceMonitor)\n              : await processMediaStream(streamId, handler, notifyError, videoPerformanceMonitor);\n          },\n          false,\n        );\n        sendMessageToParent(\n          getApiVersionTag(\n            videoEffectsExTelemetryVersionNumber,\n            ApiName.VideoEffectsEx_MediaStream_RegisterForVideoFrame,\n          ),\n          'video.mediaStream.registerForVideoFrame',\n          [parameters.config],\n        );\n      } else if (runtime.supports.video?.sharedFrame) {\n        registerHandler(\n          getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_RegisterNewVideoFrameHandler),\n          'video.newVideoFrame',\n          (videoBufferData: VideoBufferData | LegacyVideoBufferData) => {\n            if (videoBufferData) {\n              videoPerformanceMonitor?.reportStartFrameProcessing(videoBufferData.width, videoBufferData.height);\n              const clearProcessingTimeout = createFrameProcessingTimeout();\n              const timestamp = videoBufferData.timestamp;\n              parameters.videoBufferHandler(\n                normalizedVideoBufferData(videoBufferData),\n                () => {\n                  clearProcessingTimeout();\n                  videoPerformanceMonitor?.reportFrameProcessed();\n                  notifyVideoFrameProcessed(timestamp);\n                },\n                notifyError,\n              );\n            }\n          },\n          false,\n        );\n        sendMessageToParent(\n          getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_RegisterForVideoFrame),\n          'video.registerForVideoFrame',\n          [parameters.config],\n        );\n      } else {\n        // should not happen if isSupported() is true\n        throw errorNotSupportedOnPlatform;\n      }\n      videoPerformanceMonitor?.startMonitorSlowFrameProcessing();\n    }\n  }\n\n  function createFrameProcessingTimeout(): () => void {\n    const frameProcessingTimer = setTimeout(() => {\n      notifyError(`Frame not processed in ${frameProcessingTimeoutInMs}ms`, ErrorLevel.Warn);\n    }, frameProcessingTimeoutInMs);\n\n    return function clearTimer() {\n      clearTimeout(frameProcessingTimer);\n    };\n  }\n\n  function createMonitoredVideoFrameHandler(\n    videoFrameHandler: VideoFrameHandler,\n    videoPerformanceMonitor: VideoPerformanceMonitor,\n  ): VideoFrameHandler {\n    return async (receivedVideoFrame: VideoFrameData): Promise<videoEffects.VideoFrame> => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const originalFrame = receivedVideoFrame.videoFrame as any;\n      videoPerformanceMonitor.reportStartFrameProcessing(originalFrame.codedWidth, originalFrame.codedHeight);\n      const clearProcessingTimeout = createFrameProcessingTimeout();\n      const processedFrame = await videoFrameHandler(receivedVideoFrame);\n      clearProcessingTimeout();\n      videoPerformanceMonitor.reportFrameProcessed();\n      return processedFrame;\n    };\n  }\n\n  function normalizedVideoBufferData(videoBufferData: VideoBufferData | LegacyVideoBufferData): VideoBufferData {\n    videoBufferData['videoFrameBuffer'] = videoBufferData['videoFrameBuffer'] || videoBufferData['data'];\n    delete videoBufferData['data'];\n    return videoBufferData as VideoBufferData;\n  }\n\n  /**\n   * @hidden\n   * Video extension should call this to notify host that the current selected effect parameter changed.\n   * If it's pre-meeting, host will call videoEffectCallback immediately then use the videoEffect.\n   * If it's the in-meeting scenario, we will call videoEffectCallback when apply button clicked.\n   * @beta\n   * @param effectChangeType - the effect change type.\n   * @param effectId - Newly selected effect id. {@linkcode VideoEffectCallBack}\n   * @param effectParam Variant for the newly selected effect. {@linkcode VideoEffectCallBack}\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function notifySelectedVideoEffectChanged(\n    effectChangeType: videoEffects.EffectChangeType,\n    effectId: string | undefined,\n    effectParam?: string,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_NotifySelectedVideoEffectChanged),\n      'video.videoEffectChanged',\n      [effectChangeType, effectId, effectParam],\n    );\n  }\n\n  /**\n   * @hidden\n   * Register the video effect callback, host uses this to notify the video extension the new video effect will by applied\n   * @beta\n   * @param callback - The VideoEffectCallback to invoke when registerForVideoEffect has completed\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function registerForVideoEffect(callback: VideoEffectCallBack): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    registerHandler(\n      getApiVersionTag(\n        videoEffectsExTelemetryVersionNumber,\n        ApiName.VideoEffectsEx_RegisterEffectParameterChangeHandler,\n      ),\n      'video.effectParameterChange',\n      createEffectParameterChangeCallback(callback, videoPerformanceMonitor),\n      false,\n    );\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_RegisterForVideoEffect),\n      'video.registerForVideoEffect',\n    );\n  }\n\n  /**\n   * @hidden\n   * Personalized video effect\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface PersonalizedEffect {\n    /**\n     * Personalized effect id\n     */\n    id: string;\n    /**\n     * Display name\n     */\n    name: string;\n    /**\n     * Effect type defined by app\n     */\n    type: string;\n    /**\n     * Data URI of the thumbnail image content encoded in ASCII format using the base64 scheme\n     */\n    thumbnail: string;\n  }\n\n  /**\n   * @hidden\n   * Send personalized effects to Teams client\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function updatePersonalizedEffects(effects: PersonalizedEffect[]): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    if (!videoEffects.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_UpdatePersonalizedEffects),\n      'video.personalizedEffectsChanged',\n      [effects],\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if video capability is supported by the host\n   * @beta\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @returns boolean to represent whether the video capability is supported\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function isSupported(): boolean {\n    ensureInitialized(runtime);\n    return videoEffects.isSupported();\n  }\n\n  /**\n   * @hidden\n   * Sending notification to host finished the video frame processing, now host can render this video frame\n   * or pass the video frame to next one in video pipeline\n   * @beta\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  function notifyVideoFrameProcessed(timestamp?: number): void {\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_NotifyVideoFrameProcessed),\n      'video.videoFrameProcessed',\n      [timestamp],\n    );\n  }\n\n  /**\n   * @hidden\n   * Sending error notification to host\n   * @beta\n   * @param errorMessage - The error message that will be sent to the host\n   * @param errorLevel - The error level that will be sent to the host\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  function notifyError(errorMessage: string, errorLevel: ErrorLevel = ErrorLevel.Warn): void {\n    sendMessageToParent(\n      getApiVersionTag(videoEffectsExTelemetryVersionNumber, ApiName.VideoEffectsEx_NotifyError),\n      'video.notifyError',\n      [errorMessage, errorLevel],\n    );\n  }\n\n  /**\n   * @hidden\n   * Sending fatal error notification to host. Call this function only when your app meets fatal error and can't continue.\n   * The host will stop the video pipeline and terminate this session, and optionally, show an error message to the user.\n   * @beta\n   * @param errorMessage - The error message that will be sent to the host\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function notifyFatalError(errorMessage: string): void {\n    ensureInitialized(runtime);\n    if (!videoEffects.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    notifyError(errorMessage, ErrorLevel.Fatal);\n  }\n}\n","import { sendMessageToParentAsync } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { ErrorCode, SdkError } from '../public';\nimport { isSdkError, TabInstance } from '../public/interfaces';\nimport { runtime } from '../public/runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst hostEntityTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * @internal\n * @beta\n * Limited to Microsoft-internal use\n *\n * This capability allows an app to associate apps with a host entity, such as a Teams channel or chat, and configure them as needed.\n */\nexport namespace hostEntity {\n  export enum AppTypes {\n    edu = 'EDU',\n  }\n\n  /**\n   * Id of the teams entity like channel, chat\n   */\n  interface TeamsEntityId {\n    threadId: string;\n  }\n\n  /**\n   * Id of message in which channel meeting is created\n   */\n  export interface TeamsChannelMeetingEntityIds extends TeamsEntityId {\n    parentMessageId: string;\n  }\n\n  /**\n   * Id of the host entity\n   */\n  export type HostEntityIds = TeamsEntityId | TeamsChannelMeetingEntityIds;\n\n  /**\n   * @hidden\n   * @internal\n   * @beta\n   * Limited to Microsoft-internal use\n   *\n   * CRUD operations for tabs associated with apps\n   */\n  export namespace tab {\n    /**\n     * Represents information about a static tab instance\n     */\n    export interface StaticTabInstance extends TabInstance {\n      tabType: 'StaticTab';\n    }\n\n    /**\n     * Represents information about a configurable tab instance\n     */\n    export interface ConfigurableTabInstance extends TabInstance {\n      tabType: 'ConfigurableTab';\n    }\n\n    /**\n     * Represents information about a tab instance associated with a host entity like chat, channel or meeting. Cab be a configurable tab or static tab.\n     */\n    export type HostEntityTabInstance = StaticTabInstance | ConfigurableTabInstance;\n\n    /**\n     * Represents all tabs associated with a host entity like chat, channel or meeting\n     */\n    export interface HostEntityTabInstances {\n      allTabs: HostEntityTabInstance[];\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Launches host-owned UI that lets a user select an app, installs it if required,\n     * runs through app configuration if required, and then associates the app with the threadId provided\n     *\n     * @param hostEntityIds Ids of the host entity like channel, chat or meeting\n     *\n     * @param appTypes What type of applications to show the user. If EDU is passed as appType, only apps supported by EDU tenant are shown.\n     * If no value is passed, all apps are shown.\n     *\n     * @returns The HostEntityTabInstance of the newly associated app\n     *\n     * @throws Error if host does not support this capability, library as not been initialized successfully, input parameters are invalid, user cancels operation or installing\n     * or configuring or adding tab fails\n     */\n    export function addAndConfigure(\n      hostEntityIds: HostEntityIds,\n      appTypes?: AppTypes[],\n    ): Promise<HostEntityTabInstance> {\n      ensureInitialized(runtime);\n\n      if (!isSupported()) {\n        throw new Error(`Error code: ${ErrorCode.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);\n      }\n\n      validateThreadId(hostEntityIds.threadId);\n\n      if (appTypes && appTypes.length === 0) {\n        throw new Error(`Error code: ${ErrorCode.INVALID_ARGUMENTS}, message: App types cannot be an empty array`);\n      }\n\n      return sendMessageToParentAsync<[HostEntityTabInstance | SdkError]>(\n        getApiVersionTag(hostEntityTelemetryVersionNumber, ApiName.HostEntity_Tab_addAndConfigureApp),\n        'hostEntity.tab.addAndConfigure',\n        [hostEntityIds, appTypes],\n      ).then(([response]: [HostEntityTabInstance | SdkError]) => {\n        if (isSdkError(response)) {\n          throw new Error(`Error code: ${response.errorCode}, message: ${response.message ?? 'None'}`);\n        }\n        return response as HostEntityTabInstance;\n      });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Returns all tab instances associated with a host entity\n     *\n     * @param hostEntityIds Ids of the host entity like channel, chat or meeting\n     *\n     * @returns Object with array of HostEntityTabInstance's associated with a host entity\n     *\n     * @throws Error if host does not support this capability, library as not been initialized successfully, input parameters are invalid or fetching tabs fails\n     */\n    export function getAll(hostEntityIds: HostEntityIds): Promise<HostEntityTabInstances> {\n      ensureInitialized(runtime);\n\n      if (!isSupported()) {\n        throw new Error(`Error code: ${ErrorCode.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);\n      }\n\n      validateThreadId(hostEntityIds.threadId);\n\n      return sendMessageToParentAsync<[HostEntityTabInstances | SdkError]>(\n        getApiVersionTag(hostEntityTelemetryVersionNumber, ApiName.HostEntity_Tab_getAll),\n        'hostEntity.tab.getAll',\n        [hostEntityIds],\n      ).then(([response]: [HostEntityTabInstances | SdkError]) => {\n        if (isSdkError(response)) {\n          throw new Error(`Error code: ${response.errorCode}, message: ${response.message ?? 'None'}`);\n        }\n        return response as HostEntityTabInstances;\n      });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Launches host-owned UI that lets a user re-configure the contentUrl of the tab\n     *\n     * @param tab Configurable tab instance that needs to be updated\n     *\n     * @param hostEntityIds Ids of the host entity like channel, chat or meeting\n     *\n     * @returns The HostEntityTabInstance of the updated tab\n     *\n     * @throws Error if host does not support this capability, library as not been initialized successfully, input parameters are invalid, user cancels operation,\n     * re-configuring tab fails or if tab is a static tab\n     */\n    export function reconfigure(\n      tab: ConfigurableTabInstance,\n      hostEntityIds: HostEntityIds,\n    ): Promise<ConfigurableTabInstance> {\n      ensureInitialized(runtime);\n\n      if (!isSupported()) {\n        throw new Error(`Error code: ${ErrorCode.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);\n      }\n\n      validateTab(tab);\n      validateThreadId(hostEntityIds.threadId);\n\n      return sendMessageToParentAsync<[ConfigurableTabInstance | SdkError]>(\n        getApiVersionTag(hostEntityTelemetryVersionNumber, ApiName.HostEntity_Tab_reconfigure),\n        'hostEntity.tab.reconfigure',\n        [tab, hostEntityIds],\n      ).then(([response]: [ConfigurableTabInstance | SdkError]) => {\n        if (isSdkError(response)) {\n          throw new Error(`Error code: ${response.errorCode}, message: ${response.message ?? 'None'}`);\n        }\n        return response as ConfigurableTabInstance;\n      });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Launches host-owned UI that lets a user rename the tab\n     *\n     * @param tab Configurable tab instance that needs to be updated\n     *\n     * @param hostEntityIds Ids of the host entity like channel, chat or meeting\n     *\n     * @returns The HostEntityTabInstance of the updated tab\n     *\n     * @throws Error if host does not support this capability, library as not been initialized successfully, input parameters are invalid, user cancels operation,\n     * re-naming tab fails or if tab is a static tab\n     */\n    export function rename(\n      tab: ConfigurableTabInstance,\n      hostEntityIds: HostEntityIds,\n    ): Promise<ConfigurableTabInstance> {\n      ensureInitialized(runtime);\n\n      if (!isSupported()) {\n        throw new Error(`Error code: ${ErrorCode.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);\n      }\n\n      validateTab(tab);\n      validateThreadId(hostEntityIds.threadId);\n\n      return sendMessageToParentAsync<[ConfigurableTabInstance | SdkError]>(\n        getApiVersionTag(hostEntityTelemetryVersionNumber, ApiName.HostEntity_Tab_rename),\n        'hostEntity.tab.rename',\n        [tab, hostEntityIds],\n      ).then(([response]: [ConfigurableTabInstance | SdkError]) => {\n        if (isSdkError(response)) {\n          throw new Error(`Error code: ${response.errorCode}, message: ${response.message ?? 'None'}`);\n        }\n        return response as ConfigurableTabInstance;\n      });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Launches host-owned UI that lets a user remove the tab\n     *\n     * @param tab tab instance that needs to be updated. Can be static tab or configurable tab.\n     *\n     * @param hostEntityIds Ids of the host entity like channel, chat or meeting\n     *\n     * @returns Boolean. Returns true if removing tab was successful\n     *\n     * @throws Error if host does not support this capability, library as not been initialized successfully, input parameters are invalid, user cancels operation or\n     * removing tab fails\n     */\n    export function remove(tab: HostEntityTabInstance, hostEntityIds: HostEntityIds): Promise<boolean> {\n      ensureInitialized(runtime);\n\n      if (!isSupported()) {\n        throw new Error(`Error code: ${ErrorCode.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);\n      }\n\n      validateThreadId(hostEntityIds.threadId);\n      validateTab(tab);\n\n      return sendMessageToParentAsync<[boolean | SdkError]>(\n        getApiVersionTag(hostEntityTelemetryVersionNumber, ApiName.HostEntity_Tab_remove),\n        'hostEntity.tab.remove',\n        [tab, hostEntityIds],\n      ).then(([response]: [boolean | SdkError]) => {\n        if (isSdkError(response)) {\n          throw new Error(`Error code: ${response.errorCode}, message: ${response.message ?? 'None'}`);\n        }\n        return true;\n      });\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Checks if the hostEntity.tab capability is supported by the host\n     * @returns boolean to represent whether the histEntity and hostEntity.tab capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && hostEntity.isSupported() && runtime.supports.hostEntity?.tab ? true : false;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Checks if the threadId is defined\n     * @throws Error if threadId is null, undefined or empty\n     */\n    function validateThreadId(threadId: string): void {\n      if (!threadId || threadId.length == 0) {\n        throw new Error(`Error code: ${ErrorCode.INVALID_ARGUMENTS}, message: ThreadId cannot be null or empty`);\n      }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * @beta\n     * Limited to Microsoft-internal use\n     *\n     * Checks if the tabId is defined\n     * @throws Error if tabId is null, undefined or empty\n     */\n    function validateTab(tab: HostEntityTabInstance): void {\n      if (!tab?.internalTabInstanceId || tab.internalTabInstanceId.length === 0) {\n        throw new Error(`Error code: ${ErrorCode.INVALID_ARGUMENTS}, message: TabId cannot be null or empty`);\n      }\n    }\n  }\n\n  /**\n   * @hidden\n   * @internal\n   * @beta\n   * Limited to Microsoft-internal use\n   *\n   * Checks if the hostEntity capability is supported by the host\n   * @returns boolean to represent whether the hostEntity capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.hostEntity ? true : false;\n  }\n}\n","export function validateEmailAddress(emailString: string | null | undefined): void {\n  const emailIsEmptyOrUndefined = emailString ? emailString.length <= 0 : true;\n  const atIndex = emailString?.indexOf('@');\n  const periodIndexAfterAt = emailString?.indexOf('.', atIndex);\n\n  if (emailIsEmptyOrUndefined || atIndex === -1 || periodIndexAfterAt === -1) {\n    throw new Error('Input email address does not have the correct format.');\n  }\n}\n","import { validateEmailAddress } from '../internal/emailAddressValidation';\n\n/**\n * Represents a validated email.\n */\nexport class EmailAddress {\n  /** Represents the input email address string */\n  private readonly val: string;\n\n  public constructor(val: string) {\n    this.val = val;\n    validateEmailAddress(val);\n  }\n\n  /**\n   * Retrieve the validated email address as a string.\n   */\n  public toString(): string {\n    return this.val;\n  }\n}\n","/**\n * App install dialog constants\n */\nexport const teamsDeepLinkUrlPathForAppInstall = '/l/app/';\n\n/**\n * Calendar constants\n */\nexport const teamsDeepLinkUrlPathForCalendar = '/l/meeting/new';\nexport const teamsDeepLinkAttendeesUrlParameterName = 'attendees';\nexport const teamsDeepLinkStartTimeUrlParameterName = 'startTime';\nexport const teamsDeepLinkEndTimeUrlParameterName = 'endTime';\nexport const teamsDeepLinkSubjectUrlParameterName = 'subject';\nexport const teamsDeepLinkContentUrlParameterName = 'content';\n\n/**\n * Call constants\n */\nexport const teamsDeepLinkUrlPathForCall = '/l/call/0/0';\nexport const teamsDeepLinkSourceUrlParameterName = 'source';\nexport const teamsDeepLinkWithVideoUrlParameterName = 'withVideo';\n\n/**\n * Chat constants\n */\nexport const teamsDeepLinkUrlPathForChat = '/l/chat/0/0';\nexport const teamsDeepLinkUsersUrlParameterName = 'users';\nexport const teamsDeepLinkTopicUrlParameterName = 'topicName';\nexport const teamsDeepLinkMessageUrlParameterName = 'message';\n","import { teamsDeepLinkHost, teamsDeepLinkProtocol } from './constants';\nimport {\n  teamsDeepLinkAttendeesUrlParameterName,\n  teamsDeepLinkContentUrlParameterName,\n  teamsDeepLinkEndTimeUrlParameterName,\n  teamsDeepLinkMessageUrlParameterName,\n  teamsDeepLinkSourceUrlParameterName,\n  teamsDeepLinkStartTimeUrlParameterName,\n  teamsDeepLinkSubjectUrlParameterName,\n  teamsDeepLinkTopicUrlParameterName,\n  teamsDeepLinkUrlPathForAppInstall,\n  teamsDeepLinkUrlPathForCalendar,\n  teamsDeepLinkUrlPathForCall,\n  teamsDeepLinkUrlPathForChat,\n  teamsDeepLinkUsersUrlParameterName,\n  teamsDeepLinkWithVideoUrlParameterName,\n} from './deepLinkConstants';\n\nexport function createTeamsDeepLinkForChat(users: string[], topic?: string, message?: string): string {\n  if (users.length === 0) {\n    throw new Error('Must have at least one user when creating a chat deep link');\n  }\n\n  const usersSearchParameter =\n    `${teamsDeepLinkUsersUrlParameterName}=` + users.map((user) => encodeURIComponent(user)).join(',');\n  const topicSearchParameter =\n    topic === undefined ? '' : `&${teamsDeepLinkTopicUrlParameterName}=${encodeURIComponent(topic)}`;\n  const messageSearchParameter =\n    message === undefined ? '' : `&${teamsDeepLinkMessageUrlParameterName}=${encodeURIComponent(message)}`;\n\n  return `${teamsDeepLinkProtocol}://${teamsDeepLinkHost}${teamsDeepLinkUrlPathForChat}?${usersSearchParameter}${topicSearchParameter}${messageSearchParameter}`;\n}\n\nexport function createTeamsDeepLinkForCall(targets: string[], withVideo?: boolean, source?: string): string {\n  if (targets.length === 0) {\n    throw new Error('Must have at least one target when creating a call deep link');\n  }\n  const usersSearchParameter =\n    `${teamsDeepLinkUsersUrlParameterName}=` + targets.map((user) => encodeURIComponent(user)).join(',');\n  const withVideoSearchParameter =\n    withVideo === undefined ? '' : `&${teamsDeepLinkWithVideoUrlParameterName}=${encodeURIComponent(withVideo)}`;\n  const sourceSearchParameter =\n    source === undefined ? '' : `&${teamsDeepLinkSourceUrlParameterName}=${encodeURIComponent(source)}`;\n\n  return `${teamsDeepLinkProtocol}://${teamsDeepLinkHost}${teamsDeepLinkUrlPathForCall}?${usersSearchParameter}${withVideoSearchParameter}${sourceSearchParameter}`;\n}\n\nexport function createTeamsDeepLinkForCalendar(\n  attendees?: string[],\n  startTime?: string,\n  endTime?: string,\n  subject?: string,\n  content?: string,\n): string {\n  const attendeeSearchParameter =\n    attendees === undefined\n      ? ''\n      : `${teamsDeepLinkAttendeesUrlParameterName}=` +\n        attendees.map((attendee) => encodeURIComponent(attendee)).join(',');\n  const startTimeSearchParameter =\n    startTime === undefined ? '' : `&${teamsDeepLinkStartTimeUrlParameterName}=${encodeURIComponent(startTime)}`;\n  const endTimeSearchParameter =\n    endTime === undefined ? '' : `&${teamsDeepLinkEndTimeUrlParameterName}=${encodeURIComponent(endTime)}`;\n  const subjectSearchParameter =\n    subject === undefined ? '' : `&${teamsDeepLinkSubjectUrlParameterName}=${encodeURIComponent(subject)}`;\n  const contentSearchParameter =\n    content === undefined ? '' : `&${teamsDeepLinkContentUrlParameterName}=${encodeURIComponent(content)}`;\n\n  return `${teamsDeepLinkProtocol}://${teamsDeepLinkHost}${teamsDeepLinkUrlPathForCalendar}?${attendeeSearchParameter}${startTimeSearchParameter}${endTimeSearchParameter}${subjectSearchParameter}${contentSearchParameter}`;\n}\n\nexport function createTeamsDeepLinkForAppInstallDialog(appId: string): string {\n  if (!appId) {\n    throw new Error('App ID must be set when creating an app install dialog deep link');\n  }\n  return `${teamsDeepLinkProtocol}://${teamsDeepLinkHost}${teamsDeepLinkUrlPathForAppInstall}${encodeURIComponent(\n    appId,\n  )}`;\n}\n","import { sendAndHandleStatusAndReason, sendMessageToParent } from '../internal/communication';\nimport { createTeamsDeepLinkForAppInstallDialog } from '../internal/deepLinkUtilities';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst appInstallDialogTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace appInstallDialog {\n  /** Represents set of parameters needed to open the appInstallDialog. */\n  export interface OpenAppInstallDialogParams {\n    /** A unique identifier for the app being installed. */\n    appId: string;\n  }\n\n  /**\n   * Displays a dialog box that allows users to install a specific app within the host environment.\n   *\n   * @param openAPPInstallDialogParams - See {@link OpenAppInstallDialogParams | OpenAppInstallDialogParams} for more information.\n   */\n  export function openAppInstallDialog(openAPPInstallDialogParams: OpenAppInstallDialogParams): Promise<void> {\n    return new Promise((resolve) => {\n      ensureInitialized(\n        runtime,\n        FrameContexts.content,\n        FrameContexts.sidePanel,\n        FrameContexts.settings,\n        FrameContexts.task,\n        FrameContexts.stage,\n        FrameContexts.meetingStage,\n      );\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n      const apiVersionTag = getApiVersionTag(\n        appInstallDialogTelemetryVersionNumber,\n        ApiName.AppInstallDialog_OpenAppInstallDialog,\n      );\n      if (runtime.isLegacyTeams) {\n        resolve(\n          sendAndHandleStatusAndReason(\n            apiVersionTag,\n            'executeDeepLink',\n            createTeamsDeepLinkForAppInstallDialog(openAPPInstallDialogParams.appId),\n          ),\n        );\n      } else {\n        sendMessageToParent(apiVersionTag, 'appInstallDialog.openAppInstallDialog', [openAPPInstallDialogParams]);\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Checks if the appInstallDialog capability is supported by the host\n   * @returns boolean to represent whether the appInstallDialog capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.appInstallDialog ? true : false;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n\nimport { sendAndHandleSdkError, sendMessageToParent } from '../internal/communication';\nimport {\n  captureImageMobileSupportVersion,\n  getMediaCallbackSupportVersion,\n  mediaAPISupportVersion,\n  nonFullScreenVideoModeAPISupportVersion,\n  scanBarCodeAPIMobileSupportVersion,\n} from '../internal/constants';\nimport { GlobalVars } from '../internal/globalVars';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport {\n  ensureInitialized,\n  isCurrentSDKVersionAtLeast,\n  throwExceptionIfMobileApiIsNotSupported,\n} from '../internal/internalAPIs';\nimport {\n  createFile,\n  decodeAttachment,\n  isVideoControllerRegistered,\n  throwExceptionIfMediaCallIsNotSupportedOnMobile,\n  validateGetMediaInputs,\n  validateScanBarCodeInput,\n  validateSelectMediaInputs,\n  validateViewImagesInput,\n} from '../internal/mediaUtil';\nimport { ApiName, ApiVersionNumber, getApiVersionTag, getLogger } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { generateGUID } from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts, HostClientType } from './constants';\nimport { DevicePermission, ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst mediaTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nconst mediaLogger = getLogger('media');\n\n/**\n * Interact with media, including capturing and viewing images.\n */\nexport namespace media {\n  /**\n   * Function callback type used when calling {@link media.captureImage}.\n   *\n   * @param error - Error encountered during the API call, if any, {@link SdkError}\n   * @param files - Collection of File objects (images) captured by the user. Will be an empty array in the case of an error.\n   * */\n  export type captureImageCallbackFunctionType = (error: SdkError, files: File[]) => void;\n\n  /**\n   * Function callback type used when calling {@link media.selectMedia}.\n   *\n   * @param error - Error encountered during the API call, if any, {@link SdkError}\n   * @param attachments - Collection of {@link Media} objects selected by the user. Will be an empty array in the case of an error.\n   * */\n  export type selectMediaCallbackFunctionType = (error: SdkError, attachments: Media[]) => void;\n\n  /** Error callback function type. */\n  export type errorCallbackFunctionType = (error?: SdkError) => void;\n  /**\n   * Function callback type used when calling {@link media.scanBarCode}.\n   *\n   * @param error - Error encountered during the API call, if any, {@link SdkError}\n   * @param decodedText - Decoded text from the barcode, if any. In the case of an error, this will be the empty string.\n   * */\n  export type scanBarCodeCallbackFunctionType = (error: SdkError, decodedText: string) => void;\n\n  /**\n   * Function callback type used when calling {@link media.Media.getMedia}\n   *\n   * @param error - Error encountered during the API call, if any, {@link SdkError}\n   * @param blob - Blob of media returned. Will be a blob with no BlobParts, in the case of an error.\n   * */\n  export type getMediaCallbackFunctionType = (error: SdkError, blob: Blob) => void;\n\n  /**\n   * Enum for file formats supported\n   */\n  export enum FileFormat {\n    /** Base64 encoding */\n    Base64 = 'base64',\n    /** File id */\n    ID = 'id',\n  }\n\n  /**\n   * File object that can be used to represent image or video or audio\n   */\n  export class File {\n    /**\n     * Content of the file. When format is Base64, this is the base64 content\n     * When format is ID, this is id mapping to the URI\n     * When format is base64 and app needs to use this directly in HTML tags, it should convert this to dataUrl.\n     */\n    public content: string;\n\n    /**\n     * Format of the content\n     */\n    public format: FileFormat;\n\n    /**\n     * Size of the file in KB\n     */\n    public size: number;\n\n    /**\n     * MIME type. This can be used for constructing a dataUrl, if needed.\n     */\n    public mimeType: string;\n\n    /**\n     * Optional: Name of the file\n     */\n    public name?: string;\n  }\n\n  /**\n   * Launch camera, capture image or choose image from gallery and return the images as a File[] object to the callback.\n   *\n   * @params callback - Callback will be called with an @see SdkError if there are any.\n   * If error is null or undefined, the callback will be called with a collection of @see File objects\n   * @remarks\n   * Note: Currently we support getting one File through this API, i.e. the file arrays size will be one.\n   * Note: For desktop, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\n   *\n   */\n  export function captureImage(callback: captureImageCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[captureImage] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n    if (!GlobalVars.isFramelessWindow) {\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n      /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n      callback(notSupportedError, []);\n      return;\n    }\n\n    if (!isCurrentSDKVersionAtLeast(captureImageMobileSupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n      callback(oldPlatformError, []);\n      return;\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_CaptureImage),\n      'captureImage',\n      callback,\n    );\n  }\n\n  /**\n   * Checks whether or not media has user permission\n   *\n   * @returns Promise that will resolve with true if the user had granted the app permission to media information, or with false otherwise,\n   * In case of an error, promise will reject with the error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n   *\n   * @beta\n   */\n  export function hasPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isPermissionSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_HasPermission),\n          'permissions.has',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Requests user permission for media\n   *\n   * @returns Promise that will resolve with true if the user consented permission for media, or with false otherwise,\n   * In case of an error, promise will reject with the error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n   *\n   * @beta\n   */\n  export function requestPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isPermissionSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_RequestPermission),\n          'permissions.request',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if permission capability is supported by the host\n   * @returns boolean to represent whether permission is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  function isPermissionSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.permissions ? true : false;\n  }\n\n  /**\n   * Media object returned by the select Media API\n   */\n  export class Media extends File {\n    constructor(that?: Media) {\n      super();\n      if (that) {\n        this.content = that.content;\n        this.format = that.format;\n        this.mimeType = that.mimeType;\n        this.name = that.name;\n        this.preview = that.preview;\n        this.size = that.size;\n      }\n    }\n\n    /**\n     * A preview of the file which is a lightweight representation.\n     * In case of images this will be a thumbnail/compressed image in base64 encoding.\n     */\n    public preview: string;\n\n    /**\n     * Gets the media in chunks irrespective of size, these chunks are assembled and sent back to the webapp as file/blob\n     * @param callback - callback is called with the @see SdkError if there is an error\n     * If error is null or undefined, the callback will be called with @see Blob.\n     */\n    public getMedia(callback: getMediaCallbackFunctionType): void {\n      if (!callback) {\n        throw new Error('[get Media] Callback cannot be null');\n      }\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isCurrentSDKVersionAtLeast(mediaAPISupportVersion)) {\n        const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n        callback(oldPlatformError, new Blob());\n        return;\n      }\n      if (!validateGetMediaInputs(this.mimeType, this.format, this.content)) {\n        const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n        callback(invalidInput, new Blob());\n        return;\n      }\n      // Call the new get media implementation via callbacks if the client version is greater than or equal to '2.0.0'\n      if (isCurrentSDKVersionAtLeast(getMediaCallbackSupportVersion)) {\n        this.getMediaViaCallback(callback);\n      } else {\n        this.getMediaViaHandler(callback);\n      }\n    }\n\n    /** Function to retrieve media content, such as images or videos, via callback. */\n    private getMediaViaCallback(callback: getMediaCallbackFunctionType): void {\n      const helper: MediaHelper = {\n        mediaMimeType: this.mimeType,\n        assembleAttachment: [],\n      };\n      const localUriId = [this.content];\n      function handleGetMediaCallbackRequest(mediaResult: MediaResult): void {\n        if (callback) {\n          if (mediaResult && mediaResult.error) {\n            callback(mediaResult.error, new Blob());\n          } else {\n            if (mediaResult && mediaResult.mediaChunk) {\n              // If the chunksequence number is less than equal to 0 implies EOF\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\n                callback(mediaResult.error, file ?? new Blob());\n              } else {\n                // Keep pushing chunks into assemble attachment\n                const assemble: AssembleAttachment | null = decodeAttachment(\n                  mediaResult.mediaChunk,\n                  helper.mediaMimeType,\n                );\n                if (assemble) {\n                  helper.assembleAttachment.push(assemble);\n                } else {\n                  mediaLogger(\n                    `Received a null assemble attachment for when decoding chunk sequence ${mediaResult.mediaChunk.chunkSequence}; not including the chunk in the assembled file.`,\n                  );\n                }\n              }\n            } else {\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data received is null' }, new Blob());\n            }\n          }\n        }\n      }\n      sendMessageToParent(\n        getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_GetMedia),\n        'getMedia',\n        localUriId,\n        handleGetMediaCallbackRequest,\n      );\n    }\n\n    /** Function to retrieve media content, such as images or videos, via handler. */\n    private getMediaViaHandler(callback: getMediaCallbackFunctionType): void {\n      const actionName = generateGUID();\n      const helper: MediaHelper = {\n        mediaMimeType: this.mimeType,\n        assembleAttachment: [],\n      };\n      const params = [actionName, this.content];\n      this.content &&\n        !isNullOrUndefined(callback) &&\n        sendMessageToParent(getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_GetMedia), 'getMedia', params);\n      function handleGetMediaRequest(response: string): void {\n        if (callback) {\n          /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n          const mediaResult: MediaResult = JSON.parse(response);\n          if (mediaResult.error) {\n            callback(mediaResult.error, new Blob());\n            removeHandler('getMedia' + actionName);\n          } else {\n            if (mediaResult.mediaChunk) {\n              // If the chunksequence number is less than equal to 0 implies EOF\n              // create file/blob when all chunks have arrived and we get 0/-1 as chunksequence number\n              if (mediaResult.mediaChunk.chunkSequence <= 0) {\n                const file = createFile(helper.assembleAttachment, helper.mediaMimeType);\n                callback(mediaResult.error, file ?? new Blob());\n                removeHandler('getMedia' + actionName);\n              } else {\n                // Keep pushing chunks into assemble attachment\n                const assemble: AssembleAttachment | null = decodeAttachment(\n                  mediaResult.mediaChunk,\n                  helper.mediaMimeType,\n                );\n                if (assemble) {\n                  helper.assembleAttachment.push(assemble);\n                }\n              }\n            } else {\n              callback({ errorCode: ErrorCode.INTERNAL_ERROR, message: 'data received is null' }, new Blob());\n              removeHandler('getMedia' + actionName);\n            }\n          }\n        }\n      }\n\n      registerHandler(\n        getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_RegisterGetMediaRequestHandler),\n        'getMedia' + actionName,\n        handleGetMediaRequest,\n      );\n    }\n  }\n\n  /**\n   * Input parameter supplied to the select Media API\n   */\n  export interface MediaInputs {\n    /**\n     * Only one media type can be selected at a time\n     */\n    mediaType: MediaType;\n\n    /**\n     * max limit of media allowed to be selected in one go, current max limit is 10 set by office lens.\n     */\n    maxMediaCount: number;\n\n    /**\n     * Additional properties for customization of select media - Image in mobile devices\n     */\n    imageProps?: ImageProps;\n\n    /**\n     * Additional properties for customization of select media - Video in mobile devices\n     */\n    videoProps?: VideoProps;\n\n    /**\n     * Additional properties for customization of select media - VideoAndImage in mobile devices\n     */\n    videoAndImageProps?: VideoAndImageProps;\n\n    /**\n     * Additional properties for audio capture flows.\n     */\n    audioProps?: AudioProps;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * --------\n   * All properties common to Image and Video Props\n   */\n  interface MediaProps {\n    /**\n     * @hidden\n     * Optional; Lets the developer specify the media source, more than one can be specified.\n     * Default value is both camera and gallery\n     */\n    sources?: Source[];\n\n    /**\n     * @hidden\n     * Optional; Specify in which mode the camera will be opened.\n     * Default value is Photo\n     */\n    startMode?: CameraStartMode;\n\n    /**\n     * @hidden\n     * Optional; indicate if user is allowed to move between front and back camera\n     * Default value is true\n     */\n    cameraSwitcher?: boolean;\n  }\n\n  /**\n   *  All properties in ImageProps are optional and have default values in the platform\n   */\n  export interface ImageProps extends MediaProps {\n    /**\n     * Optional; indicate if inking on the selected Image is allowed or not\n     * Default value is true\n     */\n    ink?: boolean;\n\n    /**\n     * Optional; indicate if putting text stickers on the selected Image is allowed or not\n     * Default value is true\n     */\n    textSticker?: boolean;\n\n    /**\n     * Optional; indicate if image filtering mode is enabled on the selected image\n     * Default value is false\n     */\n    enableFilter?: boolean;\n\n    /**\n     * Optional; Lets the developer specify the image output formats, more than one can be specified.\n     * Default value is Image.\n     */\n    imageOutputFormats?: ImageOutputFormats[];\n  }\n\n  /**\n   * All properties in VideoProps are optional and have default values in the platform\n   */\n  export interface VideoProps extends MediaProps {\n    /**\n     * Optional; the maximum duration in seconds after which the recording should terminate automatically.\n     * Default value is defined by the platform serving the API.\n     */\n    maxDuration?: number;\n\n    /**\n     * Optional; to determine if the video capturing flow needs to be launched\n     * in Full Screen Mode (Lens implementation) or PictureInPicture Mode (Native implementation).\n     * Default value is true, indicating video will always launch in Full Screen Mode via lens.\n     */\n    isFullScreenMode?: boolean;\n\n    /**\n     * Optional; controls the visibility of stop button in PictureInPicture Mode.\n     * Default value is true, indicating the user will be able to stop the video.\n     */\n    isStopButtonVisible?: boolean;\n\n    /**\n     * Optional; setting VideoController will register your app to listen to the lifecycle events during the video capture flow.\n     * Your app can also dynamically control the experience while capturing the video by notifying the host client.\n     */\n    videoController?: VideoController;\n  }\n\n  /**\n   * All properties in VideoAndImageProps are optional and have default values in the platform\n   */\n  export interface VideoAndImageProps extends ImageProps, VideoProps {}\n\n  /**\n   *  All properties in AudioProps are optional and have default values in the platform\n   */\n  export interface AudioProps {\n    /**\n     * Optional; the maximum duration in minutes after which the recording should terminate automatically\n     * Default value is defined by the platform serving the API.\n     */\n    maxDuration?: number;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * --------\n   * Base class which holds the callback and notifies events to the host client\n   */\n  abstract class MediaController<T> {\n    /** Callback that can be registered to handle events related to the playback and control of video content. */\n    protected controllerCallback?: T;\n\n    public constructor(controllerCallback?: T) {\n      this.controllerCallback = controllerCallback;\n    }\n\n    protected abstract getMediaType(): MediaType;\n\n    /**\n     * @hidden\n     * Hide from docs\n     * --------\n     * This function will be implemented by the respective media class which holds the logic\n     * of specific events that needs to be notified to the app.\n     * @param mediaEvent indicates the event signed by the host client to the app\n     */\n    protected abstract notifyEventToApp(mediaEvent: MediaControllerEvent): void;\n\n    /**\n     * @hidden\n     * Hide from docs\n     * --------\n     * Function to notify the host client to programatically control the experience\n     * @param mediaEvent indicates what the event that needs to be signaled to the host client\n     * Optional; @param callback is used to send app if host client has successfully handled the notification event or not\n     */\n    protected notifyEventToHost(mediaEvent: MediaControllerEvent, callback?: errorCallbackFunctionType): void {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n      try {\n        throwExceptionIfMobileApiIsNotSupported(nonFullScreenVideoModeAPISupportVersion);\n      } catch (err) {\n        if (callback) {\n          callback(err);\n        }\n        return;\n      }\n\n      const params: MediaControllerParam = { mediaType: this.getMediaType(), mediaControllerEvent: mediaEvent };\n      sendMessageToParent(\n        getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_Controller),\n        'media.controller',\n        [params],\n        (err?: SdkError) => {\n          if (callback) {\n            callback(err);\n          }\n        },\n      );\n    }\n\n    /**\n     * Function to programatically stop the ongoing media event\n     * Optional; @param callback is used to send app if host client has successfully stopped the event or not\n     */\n    public stop(callback?: errorCallbackFunctionType): void {\n      this.notifyEventToHost(MediaControllerEvent.StopRecording, callback);\n    }\n  }\n\n  /**\n   * Callback which will register your app to listen to lifecycle events during the video capture flow\n   */\n  export interface VideoControllerCallback {\n    /** The event is a type of callback that can be enlisted to handle various events linked to `onRecordingStarted`, which helps with playback of video content. */\n    onRecordingStarted?(): void;\n  }\n\n  /**\n   * VideoController class is used to communicate between the app and the host client during the video capture flow\n   */\n  export class VideoController extends MediaController<VideoControllerCallback> {\n    /** Gets media type video. */\n    protected getMediaType(): MediaType {\n      return MediaType.Video;\n    }\n    /** Notify or send an event related to the playback and control of video content to a registered application. */\n    public notifyEventToApp(mediaEvent: MediaControllerEvent): void {\n      if (!this.controllerCallback) {\n        // Early return as app has not registered with the callback\n        return;\n      }\n\n      switch (mediaEvent) {\n        case MediaControllerEvent.StartRecording:\n          if (this.controllerCallback.onRecordingStarted) {\n            this.controllerCallback.onRecordingStarted();\n            break;\n          }\n      }\n    }\n  }\n\n  /**\n   * @beta\n   * Events which are used to communicate between the app and the host client during the media recording flow\n   */\n  export enum MediaControllerEvent {\n    /** Start recording. */\n    StartRecording = 1,\n    /** Stop recording. */\n    StopRecording = 2,\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * --------\n   * Interface with relevant info to send communication from the app to the host client\n   */\n  interface MediaControllerParam {\n    /**\n     * List of team information\n     */\n    mediaType: media.MediaType;\n\n    /**\n     * List of team information\n     */\n    mediaControllerEvent: MediaControllerEvent;\n  }\n\n  /**\n   * The modes in which camera can be launched in select Media API\n   */\n  export enum CameraStartMode {\n    /** Photo mode. */\n    Photo = 1,\n    /** Document mode. */\n    Document = 2,\n    /** Whiteboard mode. */\n    Whiteboard = 3,\n    /** Business card mode. */\n    BusinessCard = 4,\n  }\n\n  /**\n   * Specifies the image source\n   */\n  export enum Source {\n    /** Image source is camera. */\n    Camera = 1,\n    /** Image source is gallery. */\n    Gallery = 2,\n  }\n\n  /**\n   * Specifies the type of Media\n   */\n  export enum MediaType {\n    /** Media type photo or image */\n    Image = 1,\n    /** Media type video. */\n    Video = 2,\n    /** Media type video and image. */\n    VideoAndImage = 3,\n    /** Media type audio. */\n    Audio = 4,\n  }\n\n  /**\n   * Input for view images API\n   */\n  export interface ImageUri {\n    /** Image location */\n    value: string;\n    /** Image Uri type */\n    type: ImageUriType;\n  }\n\n  /**\n   * ID contains a mapping for content uri on platform's side, URL is generic\n   */\n  export enum ImageUriType {\n    /** Image Id. */\n    ID = 1,\n    /** Image URL. */\n    URL = 2,\n  }\n\n  /**\n   * Specifies the image output formats.\n   */\n  export enum ImageOutputFormats {\n    /** Outputs image.  */\n    IMAGE = 1,\n    /** Outputs pdf. */\n    PDF = 2,\n  }\n\n  /**\n   * Media chunks an output of getMedia API from platform\n   */\n  export interface MediaChunk {\n    /**\n     * Base 64 data for the requested uri\n     */\n    chunk: string;\n\n    /**\n     * chunk sequence number\n     */\n    chunkSequence: number;\n  }\n\n  /**\n   * Output of getMedia API from platform\n   */\n  export interface MediaResult {\n    /**\n     * error encountered in getMedia API\n     */\n    error: SdkError;\n\n    /**\n     * Media chunk which will be assemebled and converted into a blob\n     */\n    mediaChunk: MediaChunk;\n  }\n\n  /**\n   * Helper object to assembled media chunks\n   */\n  export interface AssembleAttachment {\n    /** A number representing the sequence of the attachment in the media chunks. */\n    sequence: number;\n    /** A Blob object representing the data of the media chunks. */\n    file: Blob;\n  }\n\n  /**\n   * Helper class for assembling media\n   */\n  interface MediaHelper {\n    /** A string representing the MIME type of the media file */\n    mediaMimeType: string;\n    /** An array of {@link media.AssembleAttachment | AssembleAttachment} objects representing the media files to be sent as attachment */\n    assembleAttachment: AssembleAttachment[];\n  }\n\n  /**\n   * Select an attachment using camera/gallery\n   *\n   * @param mediaInputs - The input params to customize the media to be selected\n   * @param callback - The callback to invoke after fetching the media\n   */\n  export function selectMedia(mediaInputs: MediaInputs, callback: selectMediaCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[select Media] Callback cannot be null');\n    }\n\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isCurrentSDKVersionAtLeast(mediaAPISupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, []);\n      return;\n    }\n\n    try {\n      throwExceptionIfMediaCallIsNotSupportedOnMobile(mediaInputs);\n    } catch (err) {\n      callback(err, []);\n      return;\n    }\n\n    if (!validateSelectMediaInputs(mediaInputs)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, []);\n      return;\n    }\n\n    const params = [mediaInputs];\n    // What comes back from native as attachments would just be objects and will be missing getMedia method on them\n    sendMessageToParent(\n      getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_SelectMedia),\n      'selectMedia',\n      params,\n      (err: SdkError, localAttachments?: Media[], mediaEvent?: MediaControllerEvent) => {\n        // MediaControllerEvent response is used to notify the app about events and is a partial response to selectMedia\n        if (mediaEvent) {\n          if (isVideoControllerRegistered(mediaInputs)) {\n            mediaInputs?.videoProps?.videoController?.notifyEventToApp(mediaEvent);\n          }\n          return;\n        }\n\n        // Media Attachments are final response to selectMedia\n        if (!localAttachments) {\n          callback(err, []);\n          return;\n        }\n\n        const mediaArray: Media[] = [];\n        for (const attachment of localAttachments) {\n          mediaArray.push(new Media(attachment));\n        }\n        callback(err, mediaArray);\n      },\n    );\n  }\n\n  /**\n   * View images using native image viewer\n   *\n   * @param uriList - list of URIs for images to be viewed - can be content URI or server URL. Supports up to 10 Images in a single call\n   * @param callback - returns back error if encountered, returns null in case of success\n   */\n  export function viewImages(uriList: ImageUri[], callback: errorCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[view images] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n    if (!isCurrentSDKVersionAtLeast(mediaAPISupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError);\n      return;\n    }\n    if (!validateViewImagesInput(uriList)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput);\n      return;\n    }\n\n    const params = [uriList];\n    sendMessageToParent(\n      getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_ViewImages),\n      'viewImages',\n      params,\n      callback,\n    );\n  }\n\n  /**\n   * Barcode configuration supplied to scanBarCode API to customize barcode scanning experience in mobile\n   * All properties in BarCodeConfig are optional and have default values in the platform\n   */\n  export interface BarCodeConfig {\n    /**\n     * Optional; Lets the developer specify the scan timeout interval in seconds\n     * Default value is 30 seconds and max allowed value is 60 seconds\n     */\n    timeOutIntervalInSec?: number;\n  }\n\n  /**\n   * @deprecated\n   * As of 2.1.0, please use {@link barCode.scanBarCode barCode.scanBarCode(config?: BarCodeConfig): Promise\\<string\\>} instead.\n\n   * Scan Barcode/QRcode using camera\n   *\n   * @remarks\n   * Note: For desktop and web, this API is not supported. Callback will be resolved with ErrorCode.NotSupported.\n   *\n   * @param callback - callback to invoke after scanning the barcode\n   * @param config - optional input configuration to customize the barcode scanning experience\n   */\n  export function scanBarCode(callback: scanBarCodeCallbackFunctionType, config?: BarCodeConfig): void {\n    if (!callback) {\n      throw new Error('[media.scanBarCode] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n    if (\n      GlobalVars.hostClientType === HostClientType.desktop ||\n      GlobalVars.hostClientType === HostClientType.web ||\n      GlobalVars.hostClientType === HostClientType.rigel ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsWindows ||\n      GlobalVars.hostClientType === HostClientType.teamsRoomsAndroid ||\n      GlobalVars.hostClientType === HostClientType.teamsPhones ||\n      GlobalVars.hostClientType === HostClientType.teamsDisplays\n    ) {\n      const notSupportedError: SdkError = { errorCode: ErrorCode.NOT_SUPPORTED_ON_PLATFORM };\n      callback(notSupportedError, '');\n      return;\n    }\n\n    if (!isCurrentSDKVersionAtLeast(scanBarCodeAPIMobileSupportVersion)) {\n      const oldPlatformError: SdkError = { errorCode: ErrorCode.OLD_PLATFORM };\n      callback(oldPlatformError, '');\n      return;\n    }\n\n    if (!validateScanBarCodeInput(config)) {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      callback(invalidInput, '');\n      return;\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(mediaTelemetryVersionNumber, ApiName.Media_ScanBarCode),\n      'media.scanBarCode',\n      [config],\n      callback,\n    );\n  }\n}\n","import { media } from '../public/media';\nimport { people } from '../public/people';\nimport {\n  imageOutputFormatsAPISupportVersion,\n  nonFullScreenVideoModeAPISupportVersion,\n  videoAndImageMediaAPISupportVersion,\n} from './constants';\nimport { throwExceptionIfMobileApiIsNotSupported } from './internalAPIs';\n\n/**\n * @hidden\n * Helper function to create a blob from media chunks based on their sequence\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function createFile(assembleAttachment: media.AssembleAttachment[], mimeType: string): Blob | null {\n  if (assembleAttachment == null || mimeType == null || assembleAttachment.length <= 0) {\n    return null;\n  }\n  let file: Blob | null = null;\n  let sequence = 1;\n  assembleAttachment.sort((a, b) => (a.sequence > b.sequence ? 1 : -1));\n  assembleAttachment.forEach((item) => {\n    if (item.sequence == sequence) {\n      if (file) {\n        file = new Blob([file, item.file], { type: mimeType });\n      } else {\n        file = new Blob([item.file], { type: mimeType });\n      }\n      sequence++;\n    }\n  });\n  return file;\n}\n\n/**\n * @hidden\n * Helper function to convert Media chunks into another object type which can be later assemebled\n * Converts base 64 encoded string to byte array and then into an array of blobs\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function decodeAttachment(attachment: media.MediaChunk, mimeType: string): media.AssembleAttachment | null {\n  if (attachment == null || mimeType == null) {\n    return null;\n  }\n  const decoded = atob(attachment.chunk);\n  const byteNumbers = new Array(decoded.length);\n  for (let i = 0; i < decoded.length; i++) {\n    byteNumbers[i] = decoded.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers);\n  const blob: Blob = new Blob([byteArray], { type: mimeType });\n  const assemble: media.AssembleAttachment = {\n    sequence: attachment.chunkSequence,\n    file: blob,\n  };\n  return assemble;\n}\n\n/**\n * @hidden\n * Function throws an SdkError if the media call is not supported on current mobile version, else undefined.\n *\n * @throws an SdkError if the media call is not supported\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function throwExceptionIfMediaCallIsNotSupportedOnMobile(mediaInputs: media.MediaInputs): void {\n  if (isMediaCallForVideoAndImageInputs(mediaInputs)) {\n    throwExceptionIfMobileApiIsNotSupported(videoAndImageMediaAPISupportVersion);\n  } else if (isMediaCallForNonFullScreenVideoMode(mediaInputs)) {\n    throwExceptionIfMobileApiIsNotSupported(nonFullScreenVideoModeAPISupportVersion);\n  } else if (isMediaCallForImageOutputFormats(mediaInputs)) {\n    throwExceptionIfMobileApiIsNotSupported(imageOutputFormatsAPISupportVersion);\n  }\n}\n\n/**\n * @hidden\n * Function returns true if the app has registered to listen to video controller events, else false.\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isVideoControllerRegistered(mediaInputs: media.MediaInputs): boolean {\n  if (\n    mediaInputs.mediaType == media.MediaType.Video &&\n    mediaInputs.videoProps &&\n    mediaInputs.videoProps.videoController\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @hidden\n * Returns true if the mediaInput params are valid and false otherwise\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateSelectMediaInputs(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs == null || mediaInputs.maxMediaCount > 10) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @hidden\n * Returns true if the mediaInput params are called for mediatype Image and contains Image outputs formats, false otherwise\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function isMediaCallForImageOutputFormats(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs?.mediaType == media.MediaType.Image && mediaInputs?.imageProps?.imageOutputFormats) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @hidden\n * Returns true if the mediaInput params are called for mediatype VideoAndImage and false otherwise\n *\n * @internal\n */\nexport function isMediaCallForVideoAndImageInputs(mediaInputs: media.MediaInputs): boolean {\n  if (mediaInputs && (mediaInputs.mediaType == media.MediaType.VideoAndImage || mediaInputs.videoAndImageProps)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @hidden\n * Returns true if the mediaInput params are called for non-full screen video mode and false otherwise\n *\n * @internal\n */\nexport function isMediaCallForNonFullScreenVideoMode(mediaInputs: media.MediaInputs): boolean {\n  if (\n    mediaInputs &&\n    mediaInputs.mediaType == media.MediaType.Video &&\n    mediaInputs.videoProps &&\n    !mediaInputs.videoProps.isFullScreenMode\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @hidden\n * Returns true if the get Media params are valid and false otherwise\n *\n * @internal\n */\nexport function validateGetMediaInputs(mimeType: string, format: media.FileFormat, content: string): boolean {\n  if (mimeType == null || format == null || format != media.FileFormat.ID || content == null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @hidden\n * Returns true if the view images param is valid and false otherwise\n *\n * @internal\n */\nexport function validateViewImagesInput(uriList: media.ImageUri[]): boolean {\n  if (uriList == null || uriList.length <= 0 || uriList.length > 10) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @hidden\n * Returns true if the scan barcode param is valid and false otherwise\n *\n * @internal\n */\nexport function validateScanBarCodeInput(barCodeConfig?: media.BarCodeConfig): boolean {\n  if (barCodeConfig) {\n    if (\n      barCodeConfig.timeOutIntervalInSec === null ||\n      (barCodeConfig.timeOutIntervalInSec != undefined && barCodeConfig.timeOutIntervalInSec <= 0) ||\n      (barCodeConfig.timeOutIntervalInSec != undefined && barCodeConfig.timeOutIntervalInSec > 60)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @hidden\n * Returns true if the people picker params are valid and false otherwise\n *\n * @internal\n */\nexport function validatePeoplePickerInput(peoplePickerInputs?: people.PeoplePickerInputs): boolean {\n  if (peoplePickerInputs) {\n    if (peoplePickerInputs.title) {\n      if (typeof peoplePickerInputs.title !== 'string') {\n        return false;\n      }\n    }\n\n    if (peoplePickerInputs.setSelected) {\n      if (typeof peoplePickerInputs.setSelected !== 'object') {\n        return false;\n      }\n    }\n\n    if (peoplePickerInputs.openOrgWideSearchInChatOrChannel) {\n      if (typeof peoplePickerInputs.openOrgWideSearchInChatOrChannel !== 'boolean') {\n        return false;\n      }\n    }\n    if (peoplePickerInputs.singleSelect) {\n      if (typeof peoplePickerInputs.singleSelect !== 'boolean') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { validateScanBarCodeInput } from '../internal/mediaUtil';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { DevicePermission, ErrorCode } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst barCodeTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to interact with the barcode scanning-specific part of the SDK.\n *\n * @beta\n */\nexport namespace barCode {\n  /**\n   * Data structure to customize the barcode scanning experience in scanBarCode API.\n   * All properties in BarCodeConfig are optional and have default values in the platform\n   *\n   * @beta\n   */\n  export interface BarCodeConfig {\n    /**\n     * Optional; designates the scan timeout interval in seconds.\n     * Default value is 30 seconds, max allowed value is 60 seconds.\n     */\n    timeOutIntervalInSec?: number;\n  }\n\n  /**\n   * Scan Barcode or QRcode using camera\n   *\n   * @param barCodeConfig - input configuration to customize the barcode scanning experience\n   *\n   * @returns a scanned code\n   *\n   * @beta\n   */\n  export function scanBarCode(barCodeConfig: BarCodeConfig): Promise<string> {\n    return new Promise<string>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      if (!validateScanBarCodeInput(barCodeConfig)) {\n        throw { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      }\n\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(barCodeTelemetryVersionNumber, ApiName.BarCode_ScanBarCode),\n          'media.scanBarCode',\n          barCodeConfig,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks whether or not media has user permission\n   *\n   * @returns true if the user has granted the app permission to media information, false otherwise\n   *\n   * @beta\n   */\n  export function hasPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(barCodeTelemetryVersionNumber, ApiName.BarCode_HasPermission),\n          'permissions.has',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Requests user permission for media\n   *\n   * @returns true if the user has granted the app permission to the media, false otherwise\n   *\n   * @beta\n   */\n  export function requestPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(barCodeTelemetryVersionNumber, ApiName.BarCode_RequestPermission),\n          'permissions.request',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if barCode capability is supported by the host\n   * @returns boolean to represent whether the barCode capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.barCode && runtime.supports.permissions ? true : false;\n  }\n}\n","import { sendAndHandleStatusAndReason } from '../internal/communication';\nimport { createTeamsDeepLinkForChat } from '../internal/deepLinkUtilities';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from '../public/constants';\nimport { runtime } from '../public/runtime';\n\n/**\n * Describes information needed to start a chat\n */\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst chatTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\ninterface OpenChatRequest {\n  /**\n   * An optional message used when initiating chat\n   */\n  message?: string;\n}\n\n/**\n * Used when starting a chat with one person\n *\n * @see OpenGroupChatRequest for use when a chat with more than one person\n */\nexport interface OpenSingleChatRequest extends OpenChatRequest {\n  /**\n   * The [Microsoft Entra UPN](https://learn.microsoft.com/entra/identity/hybrid/connect/plan-connect-userprincipalname) (usually but not always an e-mail address)\n   * of the user with whom to begin a chat\n   */\n  user: string;\n}\n\n/**\n * Used when starting a chat with more than one person\n *\n * @see OpenSingleChatRequest for use in a chat with only one person\n */\nexport interface OpenGroupChatRequest extends OpenChatRequest {\n  /**\n   * Array containing [Microsoft Entra UPNs](https://learn.microsoft.com/entra/identity/hybrid/connect/plan-connect-userprincipalname) (usually but not always an e-mail address)\n   * of users with whom to begin a chat\n   */\n  users: string[];\n  /**\n   * The display name of a conversation for 3 or more users (chats with fewer than three users will ignore this field)\n   */\n  topic?: string;\n}\n\n/**\n * Contains functionality to start chat with others\n */\nexport namespace chat {\n  /**\n   * Allows the user to open a chat with a single user and allows\n   * for the user to specify the message they wish to send.\n   *\n   * @param openChatRequest: {@link OpenSingleChatRequest}- a request object that contains a user's email as well as an optional message parameter.\n   *\n   * @returns Promise resolved upon completion\n   */\n  export function openChat(openChatRequest: OpenSingleChatRequest): Promise<void> {\n    const apiVersionTag = getApiVersionTag(chatTelemetryVersionNumber, ApiName.Chat_OpenChat);\n    return openChatHelper(apiVersionTag, openChatRequest);\n  }\n\n  function openChatHelper(apiVersionTag: string, openChatRequest: OpenSingleChatRequest): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      if (runtime.isLegacyTeams) {\n        resolve(\n          sendAndHandleStatusAndReason(\n            apiVersionTag,\n            'executeDeepLink',\n            createTeamsDeepLinkForChat([openChatRequest.user], undefined /*topic*/, openChatRequest.message),\n          ),\n        );\n      } else {\n        const sendPromise = sendAndHandleStatusAndReason(apiVersionTag, 'chat.openChat', {\n          members: [openChatRequest.user],\n          message: openChatRequest.message,\n        });\n        resolve(sendPromise);\n      }\n    });\n  }\n  /**\n   * Allows the user to create a chat with multiple users (2+) and allows\n   * for the user to specify a message and name the topic of the conversation. If\n   * only 1 user is provided into users array default back to origin openChat.\n   *\n   * @param openChatRequest: {@link OpenGroupChatRequest} - a request object that contains a list of user emails as well as optional parameters for message and topic (display name for the group chat).\n   *\n   * @returns Promise resolved upon completion\n   */\n  export function openGroupChat(openChatRequest: OpenGroupChatRequest): Promise<void> {\n    const apiVersionTag = getApiVersionTag(chatTelemetryVersionNumber, ApiName.Chat_OpenGroupChat);\n    return new Promise<void>((resolve) => {\n      if (openChatRequest.users.length < 1) {\n        throw Error('OpenGroupChat Failed: No users specified');\n      }\n      if (openChatRequest.users.length === 1) {\n        const chatRequest: OpenSingleChatRequest = {\n          user: openChatRequest.users[0],\n          message: openChatRequest.message,\n        };\n        resolve(openChatHelper(apiVersionTag, chatRequest));\n      } else {\n        ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n        if (runtime.isLegacyTeams) {\n          resolve(\n            sendAndHandleStatusAndReason(\n              apiVersionTag,\n              'executeDeepLink',\n              createTeamsDeepLinkForChat(openChatRequest.users, openChatRequest.topic, openChatRequest.message),\n            ),\n          );\n        } else {\n          const sendPromise = sendAndHandleStatusAndReason(apiVersionTag, 'chat.openChat', {\n            members: openChatRequest.users,\n            message: openChatRequest.message,\n            topic: openChatRequest.topic,\n          });\n          resolve(sendPromise);\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks if the chat capability is supported by the host\n   * @returns boolean to represent whether the chat capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.chat ? true : false;\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { GlobalVars } from '../internal/globalVars';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport * as utils from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ClipboardParams, ClipboardSupportedMimeType } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst clipboardTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Interact with the system clipboard\n *\n * @beta\n */\nexport namespace clipboard {\n  /**\n   * Function to copy data to clipboard.\n   * @remarks\n   * Note: clipboard.write only supports Text, HTML, PNG, and JPEG data format.\n   *       MIME type for Text -> `text/plain`, HTML -> `text/html`, PNG/JPEG -> `image/(png | jpeg)`\n   *       Also, JPEG will be converted to PNG image when copying to clipboard.\n   *\n   * @param blob - A Blob object representing the data to be copied to clipboard.\n   * @returns A string promise which resolves to success message from the clipboard or\n   *          rejects with error stating the reason for failure.\n   */\n  export async function write(blob: Blob): Promise<void> {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.meetingStage,\n      FrameContexts.task,\n      FrameContexts.settings,\n      FrameContexts.stage,\n      FrameContexts.sidePanel,\n    );\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!(blob.type && Object.values(ClipboardSupportedMimeType).includes(blob.type as ClipboardSupportedMimeType))) {\n      throw new Error(\n        `Blob type ${blob.type} is not supported. Supported blob types are ${Object.values(\n          ClipboardSupportedMimeType,\n        )}`,\n      );\n    }\n    const base64StringContent = await utils.getBase64StringFromBlob(blob);\n    const writeParams: ClipboardParams = {\n      mimeType: blob.type as ClipboardSupportedMimeType,\n      content: base64StringContent,\n    };\n    return sendAndHandleSdkError(\n      getApiVersionTag(clipboardTelemetryVersionNumber, ApiName.Clipboard_Write),\n      'clipboard.writeToClipboard',\n      writeParams,\n    );\n  }\n\n  /**\n   * Function to read data from clipboard.\n   *\n   * @returns A promise blob which resolves to the data read from the clipboard or\n   *          rejects stating the reason for failure.\n   *          Note: Returned blob type will contain one of the MIME type `image/png`, `text/plain` or `text/html`.\n   */\n  export async function read(): Promise<Blob> {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.meetingStage,\n      FrameContexts.task,\n      FrameContexts.settings,\n      FrameContexts.stage,\n      FrameContexts.sidePanel,\n    );\n    const apiVersionTag = getApiVersionTag(clipboardTelemetryVersionNumber, ApiName.Clipboard_Read);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const response = await sendAndHandleSdkError(apiVersionTag, 'clipboard.readFromClipboard');\n    if (typeof response === 'string') {\n      const data = JSON.parse(response) as ClipboardParams;\n      return utils.base64ToBlob(data.mimeType, data.content);\n    } else {\n      return response as Blob;\n    }\n  }\n\n  /**\n   * Checks if clipboard capability is supported by the host\n   * @returns boolean to represent whether the clipboard capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    if (GlobalVars.isFramelessWindow) {\n      return ensureInitialized(runtime) && runtime.supports.clipboard ? true : false;\n    } else {\n      return ensureInitialized(runtime) && navigator && navigator.clipboard && runtime.supports.clipboard\n        ? true\n        : false;\n    }\n  }\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { runtime } from './runtime';\n\n/**\n * @beta\n * Nested app auth capabilities\n */\nexport namespace nestedAppAuth {\n  /**\n   * Checks if MSAL-NAA channel recommended by the host\n   * @returns true if host is recommending NAA channel and false otherwise\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isNAAChannelRecommended(): boolean {\n    return (ensureInitialized(runtime) && runtime.isNAAChannelRecommended) ?? false;\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { DevicePermission, ErrorCode } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst geoLocationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to interact with the geoLocation module-specific part of the SDK. This is the newer version of location module.\n *\n * @beta\n */\nexport namespace geoLocation {\n  /**\n   * Data struture to represent the location information\n   *\n   * @beta\n   */\n  export interface Location {\n    /**\n      Latitude of the location\n      */\n    latitude: number;\n    /**\n      Longitude of the location\n      */\n    longitude: number;\n    /**\n      Accuracy describes the maximum distance in meters from the captured coordinates to the possible actual location\n      @remarks\n      This property is only in scope for mobile\n      */\n    accuracy?: number;\n    /**\n      Time stamp when the location was captured\n      */\n    timestamp?: number;\n  }\n  /**\n   * Fetches current user coordinates\n   * @returns Promise that will resolve with {@link geoLocation.Location} object or reject with an error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n   *\n   * @beta\n   */\n  export function getCurrentLocation(): Promise<Location> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    return sendAndHandleSdkError(\n      getApiVersionTag(geoLocationTelemetryVersionNumber, ApiName.GeoLocation_GetCurrentLocation),\n      'location.getLocation',\n      {\n        allowChooseLocation: false,\n        showMap: false,\n      },\n    );\n  }\n\n  /**\n   * Checks whether or not location has user permission\n   *\n   * @returns Promise that will resolve with true if the user had granted the app permission to location information, or with false otherwise,\n   * In case of an error, promise will reject with the error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n   *\n   * @beta\n   */\n  export function hasPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.GeoLocation;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(geoLocationTelemetryVersionNumber, ApiName.GeoLocation_HasPermission),\n          'permissions.has',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Requests user permission for location\n   *\n   * @returns true if the user consented permission for location, false otherwise\n   * @returns Promise that will resolve with true if the user consented permission for location, or with false otherwise,\n   * In case of an error, promise will reject with the error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n   *\n   * @beta\n   */\n  export function requestPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.GeoLocation;\n\n    return new Promise<boolean>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(geoLocationTelemetryVersionNumber, ApiName.GeoLocation_RequestPermission),\n          'permissions.request',\n          permissions,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if geoLocation capability is supported by the host\n   * @returns boolean to represent whether geoLocation is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.geoLocation && runtime.supports.permissions ? true : false;\n  }\n\n  /**\n   * Namespace to interact with the location on map module-specific part of the SDK.\n   *\n   * @beta\n   */\n  export namespace map {\n    /**\n     * Allows user to choose location on map\n     *\n     * @returns Promise that will resolve with {@link geoLocation.Location} object chosen by the user or reject with an error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n     *\n     * @beta\n     */\n    export function chooseLocation(): Promise<Location> {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      return sendAndHandleSdkError(\n        getApiVersionTag(geoLocationTelemetryVersionNumber, ApiName.GeoLocation_Map_ChooseLocation),\n        'location.getLocation',\n        {\n          allowChooseLocation: true,\n          showMap: true,\n        },\n      );\n    }\n\n    /**\n     * Shows the location on map corresponding to the given coordinates\n     *\n     * @param location - Location to be shown on the map\n     * @returns Promise that resolves when the location dialog has been closed or reject with an error. Function can also throw a NOT_SUPPORTED_ON_PLATFORM error\n     *\n     * @beta\n     */\n    export function showLocation(location: Location): Promise<void> {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      if (!location) {\n        throw { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      }\n      return sendAndHandleSdkError(\n        getApiVersionTag(geoLocationTelemetryVersionNumber, ApiName.GeoLocation_ShowLocation),\n        'location.showLocation',\n        location,\n      );\n    }\n\n    /**\n     * Checks if geoLocation.map capability is supported by the host\n     * @returns boolean to represent whether geoLocation.map is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) &&\n        runtime.supports.geoLocation &&\n        runtime.supports.geoLocation.map &&\n        runtime.supports.permissions\n        ? true\n        : false;\n    }\n  }\n}\n","import { AdaptiveCardVersion } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * @returns The {@linkcode AdaptiveCardVersion} representing the Adaptive Card schema\n * version supported by the host, or undefined if the host does not support Adaptive Cards\n */\nexport function getAdaptiveCardSchemaVersion(): AdaptiveCardVersion | undefined {\n  if (!runtime.hostVersionsInfo) {\n    return undefined;\n  } else {\n    return runtime.hostVersionsInfo.adaptiveCardSchemaVersion;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\n\nimport { sendMessageToParent } from '../internal/communication';\nimport { registerHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/** onComplete function type */\nexport type onCompleteFunctionType = (status: boolean, reason?: string) => void;\n/** addEventListner function type */\nexport type addEventListnerFunctionType = (message: any) => void;\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst appWindowTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/** Represents a window or frame within the host app. */\nexport interface IAppWindow {\n  /**\n   * Send a message to the AppWindow.\n   *\n   * @param message - The message to send\n   * @param onComplete - The callback to know if the postMessage has been success/failed.\n   */\n  postMessage(message: any, onComplete?: onCompleteFunctionType): void;\n\n  /**\n   * Add a listener that will be called when an event is received from this AppWindow.\n   *\n   * @param type - The event to listen to. Currently the only supported type is 'message'.\n   * @param listener - The listener that will be called\n   */\n  addEventListener(type: string, listener: Function): void;\n}\n\n/**\n * An object that application can utilize to establish communication\n * with the child window it opened, which contains the corresponding task.\n */\nexport class ChildAppWindow implements IAppWindow {\n  /**\n   * Send a message to the ChildAppWindow.\n   *\n   * @param message - The message to send\n   * @param onComplete - The callback to know if the postMessage has been success/failed.\n   */\n  public postMessage(message: any, onComplete?: onCompleteFunctionType): void {\n    ensureInitialized(runtime);\n    sendMessageToParent(\n      getApiVersionTag(appWindowTelemetryVersionNumber, ApiName.AppWindow_ChildAppWindow_PostMessage),\n      'messageForChild',\n      [message],\n      onComplete ? onComplete : getGenericOnCompleteHandler(),\n    );\n  }\n  /**\n   * Add a listener that will be called when an event is received from the ChildAppWindow.\n   *\n   * @param type - The event to listen to. Currently the only supported type is 'message'.\n   * @param listener - The listener that will be called\n   */\n  public addEventListener(type: string, listener: addEventListnerFunctionType): void {\n    ensureInitialized(runtime);\n    if (type === 'message') {\n      registerHandler(\n        getApiVersionTag(appWindowTelemetryVersionNumber, ApiName.AppWindow_ChildAppWindow_AddEventListener),\n        'messageForParent',\n        listener,\n      );\n    }\n  }\n}\n\n/**\n * An object that is utilized to facilitate communication with a parent window\n * that initiated the opening of current window. For instance, a dialog or task\n * module would utilize it to transmit messages to the application that launched it.\n */\nexport class ParentAppWindow implements IAppWindow {\n  /** Represents a parent window or frame. */\n  private static _instance: ParentAppWindow;\n  /** Get the parent window instance. */\n  public static get Instance(): IAppWindow {\n    // Do you need arguments? Make it a regular method instead.\n    return this._instance || (this._instance = new this());\n  }\n\n  /**\n   * Send a message to the ParentAppWindow.\n   *\n   * @param message - The message to send\n   * @param onComplete - The callback to know if the postMessage has been success/failed.\n   */\n  public postMessage(message: any, onComplete?: onCompleteFunctionType): void {\n    ensureInitialized(runtime, FrameContexts.task);\n    sendMessageToParent(\n      getApiVersionTag(appWindowTelemetryVersionNumber, ApiName.AppWindow_ParentAppWindow_PostMessage),\n      'messageForParent',\n      [message],\n      onComplete ? onComplete : getGenericOnCompleteHandler(),\n    );\n  }\n\n  /**\n   * Add a listener that will be called when an event is received from the ParentAppWindow.\n   *\n   * @param type - The event to listen to. Currently the only supported type is 'message'.\n   * @param listener - The listener that will be called\n   */\n  public addEventListener(type: string, listener: addEventListnerFunctionType): void {\n    ensureInitialized(runtime, FrameContexts.task);\n    if (type === 'message') {\n      registerHandler(\n        getApiVersionTag(appWindowTelemetryVersionNumber, ApiName.AppWindow_ParentAppWindow_AddEventListener),\n        'messageForChild',\n        listener,\n      );\n    }\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isValidHttpsURL } from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ErrorCode } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst secondaryBrowserTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to power up the in-app browser experiences in the host app.\n * For e.g., opening a URL in the host app inside a browser\n *\n * @beta\n */\nexport namespace secondaryBrowser {\n  /**\n   * Open a URL in the secondary browser.\n   *\n   * On mobile, this is the in-app browser.\n   *\n   * On web and desktop, please use the `window.open()` method or other native external browser methods.\n   *\n   * @param url Url to open in the browser\n   * @returns Promise that successfully resolves if the URL  opens in the secondaryBrowser\n   * or throws an error {@link SdkError} incase of failure before starting navigation\n   *\n   * @remarks Any error that happens after navigation begins is handled by the platform browser component and not returned from this function.\n   * @beta\n   */\n  export function open(url: URL): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (!url || !isValidHttpsURL(url)) {\n      throw { errorCode: ErrorCode.INVALID_ARGUMENTS, message: 'Invalid Url: Only https URL is allowed' };\n    }\n\n    return sendAndHandleSdkError(\n      getApiVersionTag(secondaryBrowserTelemetryVersionNumber, ApiName.SecondaryBrowser_OpenUrl),\n      'secondaryBrowser.open',\n      url.toString(),\n    );\n  }\n\n  /**\n   * Checks if secondaryBrowser capability is supported by the host\n   * @returns boolean to represent whether secondaryBrowser is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.secondaryBrowser ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { locationAPIsRequiredVersion } from '../internal/constants';\nimport { ensureInitialized, isCurrentSDKVersionAtLeast } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst locationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * @deprecated\n * As of 2.1.0, please use geoLocation namespace.\n *\n * Namespace to interact with the location module-specific part of the SDK.\n */\nexport namespace location {\n  /** Get location callback function type */\n  export type getLocationCallbackFunctionType = (error: SdkError, location: Location) => void;\n  /** Show location callback function type */\n  export type showLocationCallbackFunctionType = (error: SdkError, status: boolean) => void;\n\n  /**\n   * @deprecated\n   * Data Structure to set the location properties in getLocation call.\n   */\n  export interface LocationProps {\n    /**\n    whether user can alter location or not\n    if false, user will be shown current location \n    and wouldn't be allowed to alter it\n    */\n    allowChooseLocation: boolean;\n    /**\n    whether selected location should be shown to user on map or not.\n    If allowChooseLocation is true, this parameter will be ignored by platform.\n    If allowChooseLocation is false, and this parameter is not provided, default \n    value will be false.\n    */\n    showMap?: boolean;\n  }\n\n  /**\n   * @deprecated\n   * Data struture to represent the location information\n   */\n  export interface Location {\n    /**\n    Latitude of the location\n    */\n    latitude: number;\n    /**\n    Longitude of the location\n    */\n    longitude: number;\n    /**\n    Accuracy of the coordinates captured\n    */\n    accuracy?: number;\n    /**\n    Time stamp when the location was captured\n    */\n    timestamp?: number;\n  }\n\n  /**\n   * @deprecated\n   * As of 2.1.0, please use one of the following functions:\n   * - {@link geoLocation.getCurrentLocation geoLocation.getCurrentLocation(): Promise\\<Location\\>} to get the current location.\n   * - {@link geoLocation.map.chooseLocation geoLocation.map.chooseLocation(): Promise\\<Location\\>} to choose location on map.\n   *\n   * Fetches user location\n   * @param props {@link LocationProps} - Specifying how the location request is handled\n   * @param callback - Callback to invoke when current user location is fetched\n   */\n  export function getLocation(props: LocationProps, callback: getLocationCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[location.getLocation] Callback cannot be null');\n    }\n\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n\n    if (!isCurrentSDKVersionAtLeast(locationAPIsRequiredVersion)) {\n      throw { errorCode: ErrorCode.OLD_PLATFORM };\n    }\n    if (!props) {\n      throw { errorCode: ErrorCode.INVALID_ARGUMENTS };\n    }\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    sendMessageToParent(\n      getApiVersionTag(locationTelemetryVersionNumber, ApiName.Location_GetLocation),\n      'location.getLocation',\n      [props],\n      callback,\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of 2.1.0, please use {@link geoLocation.map.showLocation geoLocation.map.showLocation(location: Location): Promise\\<void\\>} instead.\n   *\n   * Shows the location on map corresponding to the given coordinates\n   *\n   * @param location - Location to be shown on the map\n   * @param callback - Callback to invoke when the location is opened on map\n   */\n  export function showLocation(location: Location, callback: showLocationCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[location.showLocation] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isCurrentSDKVersionAtLeast(locationAPIsRequiredVersion)) {\n      throw { errorCode: ErrorCode.OLD_PLATFORM };\n    }\n    if (!location) {\n      throw { errorCode: ErrorCode.INVALID_ARGUMENTS };\n    }\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    sendMessageToParent(\n      getApiVersionTag(locationTelemetryVersionNumber, ApiName.Location_ShowLocation),\n      'location.showLocation',\n      [location],\n      callback,\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of 2.1.0, please use geoLocation namespace, and use {@link geoLocation.isSupported geoLocation.isSupported: boolean} to check if geoLocation is supported.\n   *\n   * Checks if Location capability is supported by the host\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @returns boolean to represent whether Location is supported\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.location ? true : false;\n  }\n}\n","import { sendAndHandleSdkError, sendMessageToParent } from '../internal/communication';\nimport { doesHandlerExist, registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { EmailAddress } from './emailAddress';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst meetingTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * Interact with meetings, including retrieving meeting details, getting mic status, and sharing app content.\n * This namespace is used to handle meeting related functionality like\n * get meeting details, get/update state of mic, sharing app content and more.\n *\n * To learn more, visit https://aka.ms/teamsmeetingapps\n */\nexport namespace meeting {\n  /** Error callback function type */\n  export type errorCallbackFunctionType = (error: SdkError | null, result: boolean | null) => void;\n  /** Get live stream state callback function type */\n  export type getLiveStreamStateCallbackFunctionType = (\n    error: SdkError | null,\n    liveStreamState: LiveStreamState | null,\n  ) => void;\n  /** Live stream error callback function type */\n  export type liveStreamErrorCallbackFunctionType = (error: SdkError | null) => void;\n  /** Register live stream changed handler function type */\n  export type registerLiveStreamChangedHandlerFunctionType = (liveStreamState: LiveStreamState) => void;\n  /** Get app content stage sharing capabilities callback function type */\n  export type getAppContentCallbackFunctionType = (\n    error: SdkError | null,\n    appContentStageSharingCapabilities: IAppContentStageSharingCapabilities | null,\n  ) => void;\n  /** Get app content stage sharing state callback function type */\n  export type getAppContentStageCallbackFunctionType = (\n    error: SdkError | null,\n    appContentStageSharingState: IAppContentStageSharingState | null,\n  ) => void;\n  /** Register speaking state change handler function type */\n  export type registerSpeakingStateChangeHandlerFunctionType = (speakingState: ISpeakingState) => void;\n  /**\n   * @hidden\n   * Data structure to represent meeting details\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IMeetingDetailsResponse {\n    /**\n     * @hidden\n     * details object\n     */\n    details: IMeetingDetails | ICallDetails;\n\n    /**\n     * @hidden\n     * conversation object\n     */\n    conversation: IConversation;\n\n    /**\n     * @hidden\n     * organizer object\n     */\n    organizer: IOrganizer;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * Base data structure to represent a meeting or call detail\n   */\n  export interface IMeetingOrCallDetailsBase<T> {\n    /**\n     * @hidden\n     * Scheduled start time of the meeting or start time of the call\n     */\n    scheduledStartTime: string;\n\n    /**\n     * @hidden\n     * url to join the current meeting or call\n     */\n    joinUrl?: string;\n\n    /**\n     * @hidden\n     * type of the meeting or call\n     */\n    type?: T;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * Data structure to represent call participant identifiers\n   */\n  interface ICallParticipantIdentifiers {\n    /**\n     * Phone number of a caller\n     */\n    phoneNumber?: string;\n\n    /**\n     * Email of a caller\n     */\n    email?: EmailAddress;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * Data structure to represent call details\n   */\n  export interface ICallDetails extends IMeetingOrCallDetailsBase<CallType> {\n    /**\n     * @deprecated please use {@link ICallDetails.originalCallerInfo} instead\n     *\n     * @hidden\n     * Phone number of a PSTN caller or email of a VoIP caller\n     */\n    originalCaller?: string;\n\n    /**\n     * @hidden\n     * Object representing the original caller\n     */\n    originalCallerInfo?: ICallParticipantIdentifiers;\n\n    /**\n     * @hidden\n     * Identifier for the current call\n     */\n    callId?: string;\n\n    /**\n     * @deprecated please use {@link ICallDetails.dialedEntityInfo} instead\n     *\n     * @hidden\n     * Phone number of a PSTN callee or email of a VoIP callee\n     */\n    dialedEntity?: never;\n\n    /**\n     * @hidden\n     * Object representing the entity the caller dialed\n     */\n    dialedEntityInfo?: never;\n\n    /**\n     * @hidden\n     * Tracking identifier for grouping related calls\n     */\n    trackingId?: never;\n  }\n\n  /**\n   * @hidden\n   * Hide from docs\n   * Data structure to represent meeting details.\n   */\n  export interface IMeetingDetails extends IMeetingOrCallDetailsBase<MeetingType> {\n    /**\n     * @hidden\n     * Scheduled end time of the meeting\n     */\n    scheduledEndTime: string;\n\n    /**\n     * @hidden\n     * event id of the meeting\n     */\n    id?: string;\n\n    /**\n     * @hidden\n     * meeting title name of the meeting\n     */\n    title?: string;\n  }\n\n  /**\n   * @hidden\n   * Data structure to represent a conversation object.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IConversation {\n    /**\n     * @hidden\n     * conversation id of the meeting\n     */\n    id: string;\n  }\n\n  /**\n   * @hidden\n   * Data structure to represent an organizer object.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface IOrganizer {\n    /**\n     * @hidden\n     * organizer id of the meeting\n     */\n    id?: string;\n    /**\n     * @hidden\n     * tenant id of the meeting\n     */\n    tenantId?: string;\n  }\n\n  /**\n   * Represents the current Real-Time Messaging Protocol (RTMP) live streaming state of a meeting.\n   *\n   * @remarks\n   * RTMP is a popular communication protocol for streaming audio, video, and data over the Internet.\n   */\n  export interface LiveStreamState {\n    /**\n     * true when the current meeting is being streamed through RTMP, or false if it is not.\n     */\n    isStreaming: boolean;\n\n    /**\n     * error object in case there is a failure\n     */\n    error?: {\n      /** error code from the streaming service, e.g. IngestionFailure */\n      code: string;\n      /** detailed error message string */\n      message?: string;\n    };\n  }\n\n  /** Defines additional sharing options which can be provided to the {@link shareAppContentToStage} API. */\n  export interface IShareAppContentToStageOptions {\n    /**\n     * The protocol option for sharing app content to the meeting stage. Defaults to `Collaborative`.\n     * See {@link SharingProtocol} for more information.\n     */\n    sharingProtocol?: SharingProtocol;\n  }\n\n  /** Represents app permission to share contents to meeting. */\n  export interface IAppContentStageSharingCapabilities {\n    /**\n     * indicates whether app has permission to share contents to meeting stage.\n     * true when your `configurableTabs` or `staticTabs` entry's `context` array includes `meetingStage`.\n     */\n    doesAppHaveSharePermission: boolean;\n  }\n\n  /** Represents app being shared to stage. */\n  export interface IAppContentStageSharingState {\n    /**\n     * indicates whether app is currently being shared to stage\n     */\n    isAppSharing: boolean;\n  }\n\n  /**\n   * Property bag for the speakingState changed event\n   *\n   */\n  export interface ISpeakingState {\n    /**\n     * true when one or more participants in a meeting are speaking, or false if no participants are speaking\n     */\n    isSpeakingDetected: boolean;\n\n    /**\n     * error object in case there is a failure\n     */\n    error?: SdkError;\n  }\n\n  /**\n   * Property bag for the meeting reaction received event\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface MeetingReactionReceivedEventData {\n    /**\n     * Indicates the type of meeting reaction received\n     *\n     * @hidden\n     * Hide from docs.\n     */\n    meetingReactionType?: MeetingReactionType;\n    /**\n     * error object in case there is a failure\n     *\n     * @hidden\n     * Hide from docs.\n     */\n    error?: SdkError;\n  }\n\n  /**\n   * Interface for raiseHandState properties\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface IRaiseHandState {\n    /** Indicates whether the selfParticipant's hand is raised or not\n     *\n     * @hidden\n     * Hide from docs.\n     */\n\n    isHandRaised: boolean;\n  }\n\n  /**\n   * Property bag for the raiseHandState changed event\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface RaiseHandStateChangedEventData {\n    /**\n     * entire raiseHandState object for the selfParticipant\n     *\n     * @hidden\n     * Hide from docs.\n     */\n    raiseHandState: IRaiseHandState;\n\n    /**\n     * error object in case there is a failure\n     *\n     * @hidden\n     * Hide from docs.\n     */\n    error?: SdkError;\n  }\n\n  /**\n   * Interface for mic state change\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface MicState {\n    /**\n     * Indicates the mute status of the mic\n     */\n    isMicMuted: boolean;\n  }\n\n  /**\n   * Reasons for the app's microphone state to change\n   */\n  enum MicStateChangeReason {\n    HostInitiated,\n    AppInitiated,\n    AppDeclinedToChange,\n    AppFailedToChange,\n  }\n\n  /**\n   * Interface for RequestAppAudioHandling properties\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface RequestAppAudioHandlingParams {\n    /**\n     * Indicates whether the app is requesting to start handling audio, or if\n     * it's giving audio back to the host\n     */\n    isAppHandlingAudio: boolean;\n    /**\n     * Callback for the host to tell the app to change its microphone state\n     * @param micState The microphone state for the app to use\n     * @returns A promise with the updated microphone state\n     */\n    micMuteStateChangedCallback: (micState: MicState) => Promise<MicState>;\n    /**\n     * Callback for the host to tell the app to change its speaker selection\n     */\n    audioDeviceSelectionChangedCallback?: (selectedDevices: AudioDeviceSelection | SdkError) => void;\n  }\n\n  /**\n   * Interface for AudioDeviceSelection from host selection.\n   * If the speaker or the microphone is undefined or don't have a device label, you can try to find the default devices\n   * by using\n   * ```ts\n   * const devices = await navigator.mediaDevices.enumerateDevices();\n   * const defaultSpeaker = devices.find((d) => d.deviceId === 'default' && d.kind === 'audiooutput');\n   * const defaultMic = devices.find((d) => d.deviceId === 'default' && d.kind === 'audioinput');\n   * ```\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface AudioDeviceSelection {\n    speaker?: AudioDeviceInfo;\n    microphone?: AudioDeviceInfo;\n  }\n\n  /**\n   * Interface for AudioDeviceInfo, includes a device label with the same format as {@link MediaDeviceInfo.label}\n   *\n   * Hosted app can use this label to compare it with the device info fetched from {@link navigator.mediaDevices.enumerateDevices()}.\n   * {@link MediaDeviceInfo} has  {@link MediaDeviceInfo.deviceId} as an unique identifier, but that id is also unique to the origin\n   * of the calling application, so {@link MediaDeviceInfo.deviceId} cannot be used here as an identifier. Notice there are some cases\n   * that devices may have the same device label, but we don't have a better way to solve this, keep this as a known limitation for now.\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export interface AudioDeviceInfo {\n    deviceLabel: string;\n  }\n\n  /**\n   * Different types of meeting reactions that can be sent/received\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export enum MeetingReactionType {\n    like = 'like',\n    heart = 'heart',\n    laugh = 'laugh',\n    surprised = 'surprised',\n    applause = 'applause',\n  }\n\n  /**\n   * Represents the type of a meeting\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @remarks\n   * Teams has several types of meetings to account for different user scenarios and requirements.\n   */\n  export enum MeetingType {\n    /**\n     * Used when the meeting type is not known.\n     *\n     * @remarks\n     * This response is not an expected case.\n     */\n    Unknown = 'Unknown',\n    /**\n     * Used for group call meeting types.\n     *\n     * @remarks\n     * To test this meeting type in Teams, start a chat with two or more users and click the \"Call\" button.\n     * Note that a group call may return as this or {@link CallType.GroupCall}. These two different response types should be considered as equal.\n     */\n    Adhoc = 'Adhoc',\n    /**\n     * Used for single-occurrence meetings that have been scheduled in advance.\n     *\n     * @remarks\n     * To create a meeting of this type in Teams, press the \"New meeting\" button from the calendar and enter a meeting title.\n     * Before saving, ensure that the \"Online Meeting\" field is checked.\n     */\n    Scheduled = 'Scheduled',\n    /**\n     * Used for meetings that occur on a recurring basis.\n     *\n     * @remarks\n     * To create a meeting of this type in Teams, press the \"New meeting\" button from the calendar, enter a meeting title, and then change the field labeled \"Does not repeat\" to some other value.\n     * Before saving, ensure that the \"Online Meeting\" field is checked.\n     */\n    Recurring = 'Recurring',\n    /**\n     * Used for webinars.\n     *\n     * @remarks\n     * Meeting apps are only supported for those in the \"event group\" of a webinar, which are those who'll be presenting and producing the webinar.\n     * To learn how to create a meeting of this type, visit https://aka.ms/teams/howto/webinars.\n     */\n    Broadcast = 'Broadcast',\n    /**\n     * Used for meet now meetings, which are meetings users create on the fly.\n     *\n     * @remarks\n     * To create a meeting of this type, click the \"Meet now\" button from the calendar in Teams or the \"Teams call\" button in Outlook.\n     */\n    MeetNow = 'MeetNow',\n  }\n\n  /**\n   * Represents the type of a call.\n   *\n   * @hidden\n   * Hide from docs.\n   */\n  export enum CallType {\n    /**\n     * Represents a call between two people.\n     *\n     * @remarks\n     * To test this feature, start a chat with one other user and click the \"Call\" button.\n     */\n    OneOnOneCall = 'oneOnOneCall',\n    /**\n     * Represents a call between more than two people.\n     *\n     * @remarks\n     * To test this meeting type in Teams, start a chat with two or more users and click the \"Call\" button.\n     * Note that a group call may return as this or {@link MeetingType.Adhoc}. These two different response types should be considered as equal.\n     */\n    GroupCall = 'groupCall',\n  }\n\n  /**\n   * Represents the protocol option for sharing app content to the meeting stage.\n   */\n  export enum SharingProtocol {\n    /**\n     * The default protocol for sharing app content to stage. To learn more, visit https://aka.ms/teamsjs/shareAppContentToStage\n     */\n    Collaborative = 'Collaborative',\n    /**\n     * A read-only protocol for sharing app content to stage, which uses screen sharing in meetings. If provided, this protocol will open\n     * the specified `contentUrl` passed to the {@link shareAppContentToStage} API in a new instance and screen share that instance.\n     */\n    ScreenShare = 'ScreenShare',\n  }\n\n  /**\n   * Allows an app to get the incoming audio speaker setting for the meeting user.\n   * To learn more, visit https://aka.ms/teamsjs/getIncomingClientAudioState\n   *\n   * @remarks\n   * Use {@link toggleIncomingClientAudio} to toggle the current audio state.\n   * For private scheduled meetings, meet now, or calls, include the `OnlineMeetingParticipant.ToggleIncomingAudio.Chat` RSC permission in your app manifest.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   * This API can only be used in the `sidePanel` and `meetingStage` frame contexts.\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `result`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when fetch is successful.\n   * `result` will be true when incoming audio is muted and false when incoming audio is unmuted, or null when the request fails.\n   */\n  export function getIncomingClientAudioState(callback: errorCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[get incoming client audio state] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetIncomingClientAudioState),\n      'getIncomingClientAudioState',\n      callback,\n    );\n  }\n\n  /**\n   * Allows an app to toggle the incoming audio speaker setting for the meeting user from mute to unmute or vice-versa.\n   * To learn more, visit https://aka.ms/teamsjs/toggleIncomingClientAudio\n   *\n   * @remarks\n   * Use {@link getIncomingClientAudioState} to get the current audio state.\n   * For private scheduled meetings, meet now, or calls, include the `OnlineMeetingParticipant.ToggleIncomingAudio.Chat` RSC permission in your app manifest.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   * This API can only be used in the `sidePanel` and `meetingStage` frame contexts.\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `result`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when toggle is successful.\n   * `result` will be true when incoming audio is muted and false when incoming audio is unmuted, or null when the toggling fails.\n   */\n  export function toggleIncomingClientAudio(callback: errorCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[toggle incoming client audio] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_ToggleIncomingClientAudio),\n      'toggleIncomingClientAudio',\n      callback,\n    );\n  }\n\n  /**\n   * @throws error if your app manifest does not include the `OnlineMeeting.ReadBasic.Chat` RSC permission.\n   * Find the app manifest reference at https://learn.microsoft.com/en-us/microsoftteams/platform/resources/schema/manifest-schema.\n   * Find the RSC reference at https://learn.microsoft.com/en-us/microsoftteams/platform/graph-api/rsc/resource-specific-consent.\n   *\n   * @hidden\n   * Allows an app to get the meeting details for the meeting\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `meetingDetailsResponse`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when get is successful\n   * `result` can either contain a {@link IMeetingDetailsResponse} value, in case of a successful get or null when the get fails\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getMeetingDetails(\n    callback: (error: SdkError | null, meetingDetails: IMeetingDetailsResponse | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get meeting details] Callback cannot be null');\n    }\n    ensureInitialized(\n      runtime,\n      FrameContexts.sidePanel,\n      FrameContexts.meetingStage,\n      FrameContexts.settings,\n      FrameContexts.content,\n    );\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetMeetingDetails),\n      'meeting.getMeetingDetails',\n      callback,\n    );\n  }\n\n  /**\n   * @throws error if your app manifest does not include both the `OnlineMeeting.ReadBasic.Chat` RSC permission\n   * and the `OnlineMeetingParticipant.Read.Chat` RSC permission.\n   * Find the app manifest reference at https://learn.microsoft.com/en-us/microsoftteams/platform/resources/schema/manifest-schema.\n   * Find the RSC reference at https://learn.microsoft.com/en-us/microsoftteams/platform/graph-api/rsc/resource-specific-consent.\n   *\n   * @throws `not supported on platform` error if your app is run on a host that does not support returning additional meeting details.\n   *\n   * @hidden\n   * Allows an app to get the additional meeting details for the meeting.\n   * Some additional details are returned on a best-effort basis. They may not be present for every meeting.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export async function getMeetingDetailsVerbose(): Promise<IMeetingDetailsResponse> {\n    ensureInitialized(\n      runtime,\n      FrameContexts.sidePanel,\n      FrameContexts.meetingStage,\n      FrameContexts.settings,\n      FrameContexts.content,\n    );\n\n    let response: IMeetingDetailsResponse;\n    try {\n      const shouldGetVerboseDetails = true;\n      response = (await sendAndHandleSdkError(\n        getApiVersionTag(ApiVersionNumber.V_2, ApiName.Meeting_GetMeetingDetailsVerbose),\n        'meeting.getMeetingDetails',\n        shouldGetVerboseDetails,\n      )) as IMeetingDetailsResponse;\n    } catch (error) {\n      throw new Error(error?.errorCode?.toString());\n    }\n\n    if (\n      (response.details?.type == CallType.GroupCall || response.details?.type == CallType.OneOnOneCall) &&\n      !response.details.originalCallerInfo\n    ) {\n      throw new Error(ErrorCode.NOT_SUPPORTED_ON_PLATFORM.toString());\n    }\n\n    return response;\n  }\n\n  /**\n   * @hidden\n   * Allows an app to get the authentication token for the anonymous or guest user in the meeting\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `authenticationTokenOfAnonymousUser`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when get is successful\n   * `authenticationTokenOfAnonymousUser` can either contain a string value, in case of a successful get or null when the get fails\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function getAuthenticationTokenForAnonymousUser(\n    callback: (error: SdkError | null, authenticationTokenOfAnonymousUser: string | null) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[get Authentication Token For AnonymousUser] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage, FrameContexts.task);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetAuthenticationTokenForAnonymousUser),\n      'meeting.getAuthenticationTokenForAnonymousUser',\n      callback,\n    );\n  }\n\n  /**\n   * Allows an app to get the state of the outgoing live stream in the current meeting.\n   *\n   * @remarks\n   * Use {@link requestStartLiveStreaming} or {@link requestStopLiveStreaming} to start/stop a live stream.\n   * This API can only be used in the `sidePanel` frame context.\n   * The `meetingExtensionDefinition.supportsStreaming` field in your app manifest must be `true` to use this API.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/meetingExtensionDefinition.\n   *\n   * @param callback - Callback contains 2 parameters: `error` and `liveStreamState`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when the request is successful\n   * `liveStreamState` can either contain a `LiveStreamState` value, or null when operation fails\n   */\n  export function getLiveStreamState(callback: getLiveStreamStateCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[get live stream state] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetLiveStreamState),\n      'meeting.getLiveStreamState',\n      callback,\n    );\n  }\n\n  /**\n   * Allows an app to ask the local user to begin live streaming the current meeting to the given Real-Time Messaging Protocol (RTMP) stream url.\n   * A confirmation dialog will be shown to the local user with options to \"Allow\" or \"Cancel\" this request.\n   *\n   * @remarks\n   * Meeting content (e.g., user video, screenshare, audio, etc.) can be externally streamed to any platform that supports the popular RTMP standard.\n   * Content broadcasted through RTMP is automatically formatted and cannot be customized.\n   * Use {@link getLiveStreamState} or {@link registerLiveStreamChangedHandler} to get updates on the live stream state.\n   * This API can only be used in the `sidePanel` frame context.\n   * The `meetingExtensionDefinition.supportsStreaming` field in your app manifest must be `true` to use this API.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/meetingExtensionDefinition.\n   *\n   * @param callback - completion callback that contains an `error` parameter, which can be of type `SdkError` in case of an error, or null when operation is successful\n   * @param streamUrl - the url to the RTMP stream resource\n   * @param streamKey - the key to the RTMP stream resource\n   */\n  export function requestStartLiveStreaming(\n    callback: liveStreamErrorCallbackFunctionType,\n    streamUrl: string,\n    streamKey?: string,\n  ): void {\n    if (!callback) {\n      throw new Error('[request start live streaming] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RequestStartLiveStreaming),\n      'meeting.requestStartLiveStreaming',\n      [streamUrl, streamKey],\n      callback,\n    );\n  }\n\n  /**\n   * Allows an app to request that live streaming be stopped.\n   *\n   * @remarks\n   * Use {@link getLiveStreamState} or {@link registerLiveStreamChangedHandler} to get updates on the live stream state.\n   * This API can only be used in the `sidePanel` frame context.\n   * The `meetingExtensionDefinition.supportsStreaming` field in your app manifest must be `true` to use this API.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/meetingExtensionDefinition.\n   *\n   * @param callback - completion callback that contains an error parameter, which can be of type `SdkError` in case of an error, or null when operation is successful\n   */\n  export function requestStopLiveStreaming(callback: liveStreamErrorCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[request stop live streaming] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RequestStopLiveStreaming),\n      'meeting.requestStopLiveStreaming',\n      callback,\n    );\n  }\n\n  /**\n   * Registers an event handler for state changes to the live stream.\n   *\n   * @remarks\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   * Use {@link requestStartLiveStreaming} or {@link requestStopLiveStreaming} to start/stop a live stream.\n   * This API can only be used in the `sidePanel` frame context.\n   * The `meetingExtensionDefinition.supportsStreaming` field in your app manifest must be `true` to use this API.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/meetingExtensionDefinition.\n   *\n   * @param handler - The handler to invoke when the live stream state changes\n   */\n  export function registerLiveStreamChangedHandler(handler: registerLiveStreamChangedHandlerFunctionType): void {\n    if (!handler) {\n      throw new Error('[register live stream changed handler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel);\n    registerHandler(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterLiveStreamChangedHandler),\n      'meeting.liveStreamChanged',\n      handler,\n    );\n  }\n\n  /**\n   * Allows an app to share a given URL to the meeting stage for all users in the meeting.\n   * To learn more, visit https://aka.ms/teamsjs/shareAppContentToStage\n   *\n   * @remarks\n   * This API can only be used in the `sidePanel` and `meetingStage` frame contexts.\n   * For private scheduled meetings, meet now, or calls, include the `MeetingStage.Write.Chat` RSC permission in your app manifest.\n   * For channel meetings, include the `ChannelMeetingStage.Write.Group` RSC permission in your app manifest.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   * Use {@link getAppContentStageSharingCapabilities} to determine if the local user is eligible to use this API.\n   * Use {@link getAppContentStageSharingState} to determine whether app content is already being shared to the meeting stage.\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `result`.\n   * `error` can either contain an error of type `SdkError`, in case of an error, or null when share is successful\n   * `result` can either contain a true value, in case of a successful share or null when the share fails\n   * @param appContentUrl - is the input URL to be shared to the meeting stage.\n   * the URL origin must be included in your app manifest's `validDomains` field.\n   * @param shareOptions - is an object that contains additional sharing options. If omitted, the default\n   * sharing protocol will be `Collaborative`. See {@link IShareAppContentToStageOptions} for more information.\n   */\n  export function shareAppContentToStage(\n    callback: errorCallbackFunctionType,\n    appContentUrl: string,\n    shareOptions: IShareAppContentToStageOptions = { sharingProtocol: SharingProtocol.Collaborative },\n  ): void {\n    if (!callback) {\n      throw new Error('[share app content to stage] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_ShareAppContentToStage),\n      'meeting.shareAppContentToStage',\n      [appContentUrl, shareOptions],\n      callback,\n    );\n  }\n\n  /**\n   * Allows an app to request whether the local user's app version has the required app manifest permissions to share content to meeting stage.\n   * To learn more, visit https://aka.ms/teamsjs/getAppContentStageSharingCapabilities\n   *\n   * @remarks\n   * If you are updating your published app to include the share to stage feature, you can use this API to prompt users to update their app if they are using an older version.\n   * Your app's `configurableTabs` or `staticTabs` entry's `context` array must include `meetingStage` for `doesAppHaveSharePermission` to be `true` in the `callback` response.\n   *\n   * @throws error if API is being used outside of `sidePanel` or `meetingStage` frame contexts.\n   * @throws error if your app manifest does not include the `MeetingStage.Write.Chat` RSC permission in your app manifest in a private scheduled meeting, meet now, or call --\n   * or if it does not include the `ChannelMeetingStage.Write.Group` RSC permission in your app manifest in a channel meeting.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   *\n   * @param callback - Completion callback contains 2 parameters: `error` and `appContentStageSharingCapabilities`.\n   * `error` can either contain an error of type `SdkError` (error indication), or null (non-error indication).\n   * `appContentStageSharingCapabilities` will contain an {@link IAppContentStageSharingCapabilities} object if the request succeeds, or null if it failed.\n   */\n  export function getAppContentStageSharingCapabilities(callback: getAppContentCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[get app content stage sharing capabilities] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetAppContentStageSharingCapabilities),\n      'meeting.getAppContentStageSharingCapabilities',\n      callback,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs.\n   * Terminates current stage sharing session in meeting\n   *\n   * @param callback - Callback contains 2 parameters, error and result.\n   * error can either contain an error of type SdkError (error indication), or null (non-error indication)\n   * result can either contain a true boolean value (successful termination), or null (unsuccessful fetch)\n   */\n  export function stopSharingAppContentToStage(callback: errorCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[stop sharing app content to stage] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_StopSharingAppContentToStage),\n      'meeting.stopSharingAppContentToStage',\n      callback,\n    );\n  }\n\n  /**\n   * Provides information related to current stage sharing state for your app.\n   * To learn more, visit https://aka.ms/teamsjs/getAppContentStageSharingState\n   *\n   * @remarks\n   * This API can only be used in the `sidePanel` and `meetingStage` frame contexts.\n   * For private scheduled meetings, meet now, or calls, include the `MeetingStage.Write.Chat` RSC permission in your app manifest.\n   * For channel meetings, include the `ChannelMeetingStage.Write.Group` RSC permission in your app manifest.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   *\n   * @param callback - Callback contains 2 parameters, `error` and `appContentStageSharingState`.\n   * error can either contain an error of type SdkError (error indication), or null (non-error indication)\n   * `appContentStageSharingState` can either contain an `IAppContentStageSharingState` object if the request succeeds, or null if it failed\n   */\n  export function getAppContentStageSharingState(callback: getAppContentStageCallbackFunctionType): void {\n    if (!callback) {\n      throw new Error('[get app content stage sharing state] Callback cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_GetAppContentStageSharingState),\n      'meeting.getAppContentStageSharingState',\n      callback,\n    );\n  }\n\n  /**\n   * Registers a handler for changes to participant speaking states.\n   * To learn more, visit https://aka.ms/teamsjs/registerSpeakingStateChangeHandler\n   *\n   * @remarks\n   * This API returns {@link ISpeakingState}, which will have `isSpeakingDetected` and/or an error object.\n   * If any participant is speaking, `isSpeakingDetected` will be true, or false if no participants are speaking.\n   * Only one handler can be registered at a time. Subsequent registrations replace existing registrations.\n   * This API can only be used in the `sidePanel` and `meetingStage` frame contexts.\n   * For private scheduled meetings, meet now, or calls, include the `OnlineMeetingIncomingAudio.Detect.Chat` RSC permission in your app manifest.\n   * For channel meetings, include the `OnlineMeetingIncomingAudio.Detect.Group` RSC permission in your app manifest.\n   * Find the app manifest reference at https://aka.ms/teamsAppManifest/authorization.\n   *\n   * @param handler The handler to invoke when the speaking state of any participant changes (start/stop speaking).\n   */\n  export function registerSpeakingStateChangeHandler(handler: registerSpeakingStateChangeHandlerFunctionType): void {\n    if (!handler) {\n      throw new Error('[registerSpeakingStateChangeHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    registerHandler(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterSpeakingStateChangeHandler),\n      'meeting.speakingStateChanged',\n      handler,\n    );\n  }\n\n  /**\n   * Registers a handler for changes to the selfParticipant's (current user's) raiseHandState. If the selfParticipant raises their hand, isHandRaised\n   * will be true. By default and if the selfParticipant hand is lowered, isHandRaised will be false. This API will return {@link RaiseHandStateChangedEventData}\n   * that will have the raiseHandState or an error object. Only one handler can be registered at a time. A subsequent registration\n   * replaces an existing registration.\n   *\n   * @param handler The handler to invoke when the selfParticipant's (current user's) raiseHandState changes.\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function registerRaiseHandStateChangedHandler(\n    handler: (eventData: RaiseHandStateChangedEventData) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[registerRaiseHandStateChangedHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    registerHandler(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterRaiseHandStateChangedHandler),\n      'meeting.raiseHandStateChanged',\n      handler,\n    );\n  }\n\n  /**\n   * Registers a handler for receiving meeting reactions. When the selfParticipant (current user) successfully sends a meeting reaction and it is being rendered on the UI, the meetingReactionType will be populated. Only one handler can be registered\n   * at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler The handler to invoke when the selfParticipant (current user) successfully sends a meeting reaction\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function registerMeetingReactionReceivedHandler(\n    handler: (eventData: MeetingReactionReceivedEventData) => void,\n  ): void {\n    if (!handler) {\n      throw new Error('[registerMeetingReactionReceivedHandler] Handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    registerHandler(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterMeetingReactionReceivedHandler),\n      'meeting.meetingReactionReceived',\n      handler,\n    );\n  }\n\n  /**\n   * @hidden\n   * Hide from docs beacuse it's only used internally as a serialization/deserialization type\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface ISerializedJoinMeetingParams {\n    joinWebUrl: string;\n    source: EventActionSource;\n  }\n\n  /**\n   * This function is used to join a meeting.\n   * This opens a meeting in a new window for the desktop app.\n   * In case of a web app, it will close the current app and open the meeting in the same tab.\n   * There is currently no support or experience for this on mobile platforms.\n   * @param joinMeetingParams This takes {@link JoinMeetingParams} for joining the meeting. If source isn't passed then it is marked as 'Other' by default.\n   * @throws error if the meeting join fails, the promise will reject to an object with the error message.\n   */\n  export function joinMeeting(joinMeetingParams: JoinMeetingParams): Promise<void> {\n    if (joinMeetingParams?.joinWebUrl === undefined || joinMeetingParams?.joinWebUrl === null) {\n      return Promise.reject(new Error('Invalid joinMeetingParams'));\n    }\n\n    ensureInitialized(runtime);\n\n    const serializedJoinMeetingParams: ISerializedJoinMeetingParams = {\n      joinWebUrl: joinMeetingParams.joinWebUrl.href,\n      source: joinMeetingParams.source || EventActionSource.Other,\n    };\n\n    return sendAndHandleSdkError(\n      getApiVersionTag(ApiVersionNumber.V_2, ApiName.Meeting_JoinMeeting),\n      'meeting.joinMeeting',\n      serializedJoinMeetingParams,\n    );\n  }\n\n  /**\n   * Contains information associated with parameters required for joining the Microsoft Teams meetings.\n   * More details regarding parameters can be found at:\n   * [Online Meeting Base - Microsoft Graph v1.0](https://learn.microsoft.com/en-us/graph/api/resources/onlinemeetingbase?view=graph-rest-1.0)\n   */\n  export interface JoinMeetingParams {\n    /** The join URL of the online meeting. */\n    joinWebUrl: URL;\n    /** The source of the join button click. If not passed, 'Other' is the default value of source. {@link EventActionSource} */\n    source?: EventActionSource;\n  }\n\n  /** The source of the join button click. */\n  export enum EventActionSource {\n    /**\n     * Source is calendar grid context menu.\n     */\n    M365CalendarGridContextMenu = 'm365_calendar_grid_context_menu',\n    /**\n     * Source is calendar grid peek.\n     */\n    M365CalendarGridPeek = 'm365_calendar_grid_peek',\n    /**\n     * Source is calendar grid event card join button.\n     */\n    M365CalendarGridEventCardJoinButton = 'm365_calendar_grid_event_card_join_button',\n    /**\n     * Source is calendar form ribbon join button.\n     */\n    M365CalendarFormRibbonJoinButton = 'm365_calendar_form_ribbon_join_button',\n    /**\n     * Source is calendar form join teams meeting button.\n     */\n    M365CalendarFormJoinTeamsMeetingButton = 'm365_calendar_form_join_teams_meeting_button',\n    /**\n     * Other sources.\n     */\n    Other = 'other',\n  }\n\n  /**\n   * Nested namespace for functions to control behavior of the app share button\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export namespace appShareButton {\n    /**\n     * Property bag for the setVisibilityInfo\n     *\n     * @hidden\n     * Hide from docs.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     *\n     * @beta\n     */\n    export interface ShareInformation {\n      /**\n       * boolean flag to set show or hide app share button\n       */\n      isVisible: boolean;\n\n      /**\n       * optional string contentUrl, which will override contentUrl coming from Manifest\n       */\n      contentUrl?: string;\n    }\n    /**\n     * By default app share button will be hidden and this API will govern the visibility of it.\n     *\n     * This function can be used to hide/show app share button in meeting,\n     * along with contentUrl (overrides contentUrl populated in app manifest)\n     * @throws standard Invalid Url error\n     * @param shareInformation has two elements, one isVisible boolean flag and another\n     * optional string contentUrl, which will override contentUrl coming from Manifest\n     *\n     * @hidden\n     * Hide from docs.\n     *\n     * @internal\n     * Limited to Microsoft-internal use\n     *\n     * @beta\n     */\n    export function setOptions(shareInformation: ShareInformation): void {\n      ensureInitialized(runtime, FrameContexts.sidePanel);\n      if (shareInformation.contentUrl) {\n        new URL(shareInformation.contentUrl);\n      }\n      sendMessageToParent(\n        getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_AppShareButton_SetOptions),\n        'meeting.appShareButton.setOptions',\n        [shareInformation],\n      );\n    }\n  }\n\n  /**\n   * Have the app handle audio (mic & speaker) and turn off host audio.\n   *\n   * When {@link RequestAppAudioHandlingParams.isAppHandlingAudio} is true, the host will switch to audioless mode\n   *   Registers for mic mute status change events, which are events that the app can receive from the host asking the app to\n   *   mute or unmute the microphone.\n   *\n   * When {@link RequestAppAudioHandlingParams.isAppHandlingAudio} is false, the host will switch out of audioless mode\n   *   Unregisters the mic mute status change events so the app will no longer receive these events\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   * @throws Error if {@link RequestAppAudioHandlingParams.micMuteStateChangedCallback} parameter is not defined\n   *\n   * @param requestAppAudioHandlingParams - {@link RequestAppAudioHandlingParams} object with values for the audio switchover\n   * @param callback - Callback with one parameter, the result\n   * can either be true (the host is now in audioless mode) or false (the host is not in audioless mode)\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function requestAppAudioHandling(\n    requestAppAudioHandlingParams: RequestAppAudioHandlingParams,\n    callback: (isHostAudioless: boolean) => void,\n  ): void {\n    if (!callback) {\n      throw new Error('[requestAppAudioHandling] Callback response cannot be null');\n    }\n    if (!requestAppAudioHandlingParams.micMuteStateChangedCallback) {\n      throw new Error('[requestAppAudioHandling] Callback Mic mute state handler cannot be null');\n    }\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n\n    if (requestAppAudioHandlingParams.isAppHandlingAudio) {\n      startAppAudioHandling(requestAppAudioHandlingParams, callback);\n    } else {\n      stopAppAudioHandling(requestAppAudioHandlingParams, callback);\n    }\n  }\n\n  function startAppAudioHandling(\n    requestAppAudioHandlingParams: RequestAppAudioHandlingParams,\n    callback: (isHostAudioless: boolean) => void,\n  ): void {\n    const callbackInternalRequest = (error: SdkError | null, isHostAudioless: boolean | null): void => {\n      if (error && isHostAudioless != null) {\n        throw new Error('[requestAppAudioHandling] Callback response - both parameters cannot be set');\n      }\n      if (error) {\n        throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${error.errorCode} ${error.message}`);\n      }\n      if (typeof isHostAudioless !== 'boolean') {\n        throw new Error('[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean');\n      }\n\n      const micStateChangedCallback = async (micState: MicState): Promise<void> => {\n        try {\n          const newMicState = await requestAppAudioHandlingParams.micMuteStateChangedCallback(micState);\n\n          const micStateDidUpdate = newMicState.isMicMuted === micState.isMicMuted;\n          setMicStateWithReason(\n            newMicState,\n            micStateDidUpdate ? MicStateChangeReason.HostInitiated : MicStateChangeReason.AppDeclinedToChange,\n          );\n        } catch {\n          setMicStateWithReason(micState, MicStateChangeReason.AppFailedToChange);\n        }\n      };\n      registerHandler(\n        getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterMicStateChangeHandler),\n        'meeting.micStateChanged',\n        micStateChangedCallback,\n      );\n\n      const audioDeviceSelectionChangedCallback = (selectedDevicesInHost: AudioDeviceSelection): void => {\n        requestAppAudioHandlingParams.audioDeviceSelectionChangedCallback?.(selectedDevicesInHost);\n      };\n      registerHandler(\n        getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RegisterAudioDeviceSelectionChangedHandler),\n        'meeting.audioDeviceSelectionChanged',\n        audioDeviceSelectionChangedCallback,\n      );\n\n      callback(isHostAudioless);\n    };\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RequestAppAudioHandling),\n      'meeting.requestAppAudioHandling',\n      [requestAppAudioHandlingParams.isAppHandlingAudio],\n      callbackInternalRequest,\n    );\n  }\n\n  function stopAppAudioHandling(\n    requestAppAudioHandlingParams: RequestAppAudioHandlingParams,\n    callback: (isHostAudioless: boolean) => void,\n  ): void {\n    const callbackInternalStop = (error: SdkError | null, isHostAudioless: boolean | null): void => {\n      if (error && isHostAudioless != null) {\n        throw new Error('[requestAppAudioHandling] Callback response - both parameters cannot be set');\n      }\n      if (error) {\n        throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${error.errorCode} ${error.message}`);\n      }\n      if (typeof isHostAudioless !== 'boolean') {\n        throw new Error('[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean');\n      }\n\n      if (doesHandlerExist('meeting.micStateChanged')) {\n        removeHandler('meeting.micStateChanged');\n      }\n\n      if (doesHandlerExist('meeting.audioDeviceSelectionChanged')) {\n        removeHandler('meeting.audioDeviceSelectionChanged');\n      }\n\n      callback(isHostAudioless);\n    };\n\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_RequestAppAudioHandling),\n      'meeting.requestAppAudioHandling',\n      [requestAppAudioHandlingParams.isAppHandlingAudio],\n      callbackInternalStop,\n    );\n  }\n\n  /**\n   * Notifies the host that the microphone state has changed in the app.\n   * @param micState - The new state that the microphone is in\n   *   isMicMuted - Boolean to indicate the current mute status of the mic.\n   *\n   * @hidden\n   * Hide from docs.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @beta\n   */\n  export function updateMicState(micState: MicState): void {\n    setMicStateWithReason(micState, MicStateChangeReason.AppInitiated);\n  }\n\n  function setMicStateWithReason(micState: MicState, reason: MicStateChangeReason): void {\n    ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n    sendMessageToParent(\n      getApiVersionTag(meetingTelemetryVersionNumber, ApiName.Meeting_SetMicStateWithReason),\n      'meeting.updateMicState',\n      [micState, reason],\n    );\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise, InputFunction } from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { SdkError } from './interfaces';\nimport { runtime } from './runtime';\n/**\n * @hidden\n * Hidden from Docs\n *\n * @internal\n * Limited to Microsoft-internal use\n */\n\n/**\n * Exceptional APIs telemetry versioning file: v1 and v2 APIs are mixed together in this file\n */\nconst monetizationTelemetryVersionNumber_v1: ApiVersionNumber = ApiVersionNumber.V_1;\nconst monetizationTelemetryVersionNumber_v2: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport namespace monetization {\n  /**\n   * @hidden\n   * Data structure to represent a subscription plan.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export interface PlanInfo {\n    /**\n     * @hidden\n     * plan id\n     */\n    planId: string;\n    /**\n     * @hidden\n     * term of the plan\n     */\n    term: string;\n  }\n\n  /**\n   * @hidden\n   * Open dialog to start user's purchase experience\n   *\n   * @param planInfo optional parameter. It contains info of the subscription plan pushed to users.\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\n   * @returns Promise that will be resolved when the operation has completed or rejected with SdkError value\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function openPurchaseExperience(planInfo?: PlanInfo): Promise<void>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link monetization.openPurchaseExperience monetization.openPurchaseExperience(planInfo?: PlanInfo): Promise\\<void\\>} instead.\n   *\n   * @hidden\n   * Open dialog to start user's purchase experience\n   *\n   * @param callback Callback contains 1 parameters, error.\n   * @param planInfo optional parameter. It contains info of the subscription plan pushed to users.\n   * error can either contain an error of type SdkError, incase of an error, or null when get is successful\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   */\n  export function openPurchaseExperience(callback: (error: SdkError | null) => void, planInfo?: PlanInfo): void;\n  /**\n   * @hidden\n   * This function is the overloaded implementation of openPurchaseExperience.\n   * Since the method signatures of the v1 callback and v2 promise differ in the type of the first parameter,\n   * we need to do an extra check to know the typeof the @param1 to set the proper arguments of the utility function.\n   * @param param1\n   * @param param2\n   * @returns Promise that will be resolved when the operation has completed or rejected with SdkError value\n   */\n  export function openPurchaseExperience(\n    param1: ((error: SdkError | null) => void) | PlanInfo | undefined,\n    param2?: PlanInfo,\n  ): Promise<void> {\n    let callback: ((error: SdkError | null) => void) | undefined;\n    let planInfo: PlanInfo | undefined;\n    let apiVersionTag = '';\n\n    if (typeof param1 === 'function') {\n      callback = param1;\n      planInfo = param2;\n      apiVersionTag = getApiVersionTag(\n        monetizationTelemetryVersionNumber_v1,\n        ApiName.Monetization_OpenPurchaseExperience,\n      );\n    } else {\n      planInfo = param1;\n      apiVersionTag = getApiVersionTag(\n        monetizationTelemetryVersionNumber_v2,\n        ApiName.Monetization_OpenPurchaseExperience,\n      );\n    }\n    const wrappedFunction: InputFunction<void> = () => {\n      return new Promise<void>((resolve) => {\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n        /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n        resolve(sendAndHandleSdkError(apiVersionTag, 'monetization.openPurchaseExperience', planInfo));\n      });\n    };\n\n    ensureInitialized(runtime, FrameContexts.content);\n    return callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise(wrappedFunction, callback);\n  }\n\n  /**\n   * @hidden\n   *\n   * Checks if the monetization capability is supported by the host\n   * @returns boolean to represent whether the monetization capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.monetization ? true : false;\n  }\n}\n","import { sendAndHandleStatusAndReason } from '../internal/communication';\nimport { createTeamsDeepLinkForCalendar } from '../internal/deepLinkUtilities';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst calendarTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Interact with the user's calendar, including opening calendar items and composing meetings.\n */\nexport namespace calendar {\n  /**\n   * Opens a calendar item.\n   *\n   * @param openCalendarItemParams - object containing unique ID of the calendar item to be opened.\n   */\n  export function openCalendarItem(openCalendarItemParams: OpenCalendarItemParams): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n\n      if (!openCalendarItemParams.itemId || !openCalendarItemParams.itemId.trim()) {\n        throw new Error('Must supply an itemId to openCalendarItem');\n      }\n\n      resolve(\n        sendAndHandleStatusAndReason(\n          getApiVersionTag(calendarTelemetryVersionNumber, ApiName.Calendar_OpenCalendarItem),\n          'calendar.openCalendarItem',\n          openCalendarItemParams,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Compose a new meeting in the user's calendar.\n   *\n   * @param composeMeetingParams - object containing various properties to set up the meeting details.\n   */\n  export function composeMeeting(composeMeetingParams: ComposeMeetingParams): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n      const apiVersionTag = getApiVersionTag(calendarTelemetryVersionNumber, ApiName.Calendar_ComposeMeeting);\n      if (runtime.isLegacyTeams) {\n        resolve(\n          sendAndHandleStatusAndReason(\n            apiVersionTag,\n            'executeDeepLink',\n            createTeamsDeepLinkForCalendar(\n              composeMeetingParams.attendees,\n              composeMeetingParams.startTime,\n              composeMeetingParams.endTime,\n              composeMeetingParams.subject,\n              composeMeetingParams.content,\n            ),\n          ),\n        );\n      } else {\n        resolve(sendAndHandleStatusAndReason(apiVersionTag, 'calendar.composeMeeting', composeMeetingParams));\n      }\n    });\n  }\n\n  /**\n   * Checks if the calendar capability is supported by the host\n   * @returns boolean to represent whether the calendar capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.calendar ? true : false;\n  }\n\n  /** Open calendar item parameters. */\n  export interface OpenCalendarItemParams {\n    /** An unique base64-encoded string id that represents the event's unique identifier of the calendar item to be opened. */\n    itemId: string;\n  }\n\n  /** Compose meeting parameters */\n\n  export interface ComposeMeetingParams {\n    /** An array of email addresses, user name, or user id of the attendees to invite to the meeting. */\n    attendees?: string[];\n    /** The start time of the meeting in MM/DD/YYYY HH:MM:SS format. */\n    startTime?: string;\n    /** The end time of the meeting in MM/DD/YYYY HH:MM:SS format. */\n    endTime?: string;\n    /** The subject line of the meeting. */\n    subject?: string;\n    /** The body content of the meeting. */\n    content?: string;\n  }\n}\n","import { sendAndHandleStatusAndReason } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst mailTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Used to interact with mail capability, including opening and composing mail.\n */\nexport namespace mail {\n  /**\n   * Opens a mail message in the host.\n   *\n   * @param openMailItemParams - Object that specifies the ID of the mail message.\n   */\n  export function openMailItem(openMailItemParams: OpenMailItemParams): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n\n      if (!openMailItemParams.itemId || !openMailItemParams.itemId.trim()) {\n        throw new Error('Must supply an itemId to openMailItem');\n      }\n\n      resolve(\n        sendAndHandleStatusAndReason(\n          getApiVersionTag(mailTelemetryVersionNumber, ApiName.Mail_OpenMailItem),\n          'mail.openMailItem',\n          openMailItemParams,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Compose a new email in the user's mailbox.\n   *\n   * @param composeMailParams - Object that specifies the type of mail item to compose and the details of the mail item.\n   *\n   */\n  export function composeMail(composeMailParams: ComposeMailParams): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n\n      resolve(\n        sendAndHandleStatusAndReason(\n          getApiVersionTag(mailTelemetryVersionNumber, ApiName.Mail_ComposeMail),\n          'mail.composeMail',\n          composeMailParams,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if the mail capability is supported by the host\n   * @returns boolean to represent whether the mail capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.mail ? true : false;\n  }\n\n  /** Defines the parameters used to open a mail item in the user's mailbox */\n  export interface OpenMailItemParams {\n    /** An unique base64-encoded string id that represents the itemId or messageId. */\n    itemId: string;\n  }\n\n  /** Defines compose mail types. */\n  export enum ComposeMailType {\n    /** Compose a new mail message. */\n    New = 'new',\n    /** Compose a reply to the sender of an existing mail message. */\n    Reply = 'reply',\n    /** Compose a reply to all recipients of an existing mail message. */\n    ReplyAll = 'replyAll',\n    /** Compose a new mail message with the content of an existing mail message forwarded to a new recipient. */\n    Forward = 'forward',\n  }\n\n  /**\n   * Foundational interface for all other mail compose interfaces\n   * Used for holding the type of mail item being composed\n   *\n   * @typeParam T - the identity type.\n   * @see {@link mail.ComposeMailType}\n   */\n  interface ComposeMailBase<T extends ComposeMailType> {\n    /** Type of the mail item being composed. */\n    type: T;\n  }\n\n  /**\n   * Parameters supplied when composing a new mail item\n   */\n  export interface ComposeNewParams extends ComposeMailBase<ComposeMailType.New> {\n    /**\n     * The To: recipients for the message\n     */\n    toRecipients?: string[];\n\n    /**\n     * The Cc: recipients for the message\n     */\n    ccRecipients?: string[];\n\n    /**\n     * The Bcc: recipients for the message\n     */\n    bccRecipients?: string[];\n\n    /**\n     * The subject of the message\n     */\n    subject?: string;\n\n    /**\n     * The body of the message\n     */\n    message?: string;\n  }\n\n  /**\n   * Parameters supplied when composing a reply to or forward of a message\n   *\n   * @see {@link ComposeMailType}\n   */\n  export interface ComposeReplyOrForwardParams<T extends ComposeMailType> extends ComposeMailBase<T> {\n    /** An unique base64-encoded string id that represents the mail message. */\n    itemid: string;\n  }\n\n  /**\n   * Parameters supplied to {@link composeMail} when composing a new mail item\n   *\n   * @see {@link ComposeNewParams}\n   * @see {@link ComposeReplyOrForwardParams}\n   * @see {@link ComposeMailType}\n   */\n  export type ComposeMailParams =\n    | ComposeNewParams\n    | ComposeReplyOrForwardParams<ComposeMailType.Reply>\n    | ComposeReplyOrForwardParams<ComposeMailType.ReplyAll>\n    | ComposeReplyOrForwardParams<ComposeMailType.Forward>;\n}\n","import { GlobalVars } from '../internal/globalVars';\nimport * as Handlers from '../internal/handlers'; // Conflict with some names\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { isNullOrUndefined } from '../internal/typeCheckUtilities';\nimport { ssrSafeWindow } from '../internal/utils';\nimport { errorNotSupportedOnPlatform } from './constants';\nimport { LoadContext } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * Namespace containing the set of APIs that support Teams-specific functionalities.\n *\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst teamsAPIsTelemetryVersionNumber_v2: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport namespace teamsCore {\n  /** Ready to unload function type */\n  export type readyToUnloadFunctionType = () => void;\n  /** Register on load handler function type */\n  export type registerOnLoadHandlerFunctionType = (context: LoadContext) => void;\n  /** Register before unload handler function type */\n  export type registerBeforeUnloadHandlerFunctionType = (readyToUnload: readyToUnloadFunctionType) => boolean;\n  /**\n   * Enable print capability to support printing page using Ctrl+P and cmd+P\n   */\n  export function enablePrintCapability(): void {\n    if (!GlobalVars.printCapabilityEnabled) {\n      ensureInitialized(runtime);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      GlobalVars.printCapabilityEnabled = true;\n      // adding ctrl+P and cmd+P handler\n      document.addEventListener('keydown', (event: KeyboardEvent) => {\n        if ((event.ctrlKey || event.metaKey) && event.keyCode === 80) {\n          print();\n          event.cancelBubble = true;\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n      });\n    }\n  }\n\n  /**\n   * default print handler\n   */\n  export function print(): void {\n    ssrSafeWindow().print();\n  }\n\n  /**\n   * Registers a handler to be called when the page has been requested to load.\n   *\n   * @remarks Check out [App Caching in Teams](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/app-caching)\n   * for a more detailed explanation about using this API.\n   *\n   * @param handler - The handler to invoke when the page is loaded.\n   *\n   * @beta\n   */\n  export function registerOnLoadHandler(handler: registerOnLoadHandlerFunctionType): void {\n    registerOnLoadHandlerHelper(\n      getApiVersionTag(teamsAPIsTelemetryVersionNumber_v2, ApiName.TeamsAPIs_RegisterOnLoadHandler),\n      handler,\n      () => {\n        if (!isNullOrUndefined(handler) && !isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n      },\n    );\n  }\n\n  /**\n   * @hidden\n   * Undocumented helper function with shared code between deprecated version and current version of the registerOnLoadHandler API.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @param apiVersionTag - The tag indicating API version number with name\n   * @param handler - The handler to invoke when the page is loaded.\n   * @param versionSpecificHelper - The helper function containing logic pertaining to a specific version of the API.\n   *\n   * @deprecated\n   */\n  export function registerOnLoadHandlerHelper(\n    apiVersionTag: string,\n    handler: registerOnLoadHandlerFunctionType,\n    versionSpecificHelper?: () => void,\n  ): void {\n    // allow for registration cleanup even when not finished initializing\n    !isNullOrUndefined(handler) && ensureInitialized(runtime);\n\n    if (!isNullOrUndefined(handler) && versionSpecificHelper) {\n      versionSpecificHelper();\n    }\n\n    Handlers.registerOnLoadHandler(apiVersionTag, handler);\n  }\n\n  /**\n   * Registers a handler to be called before the page is unloaded.\n   *\n   * @remarks Check out [App Caching in Teams](https://learn.microsoft.com/microsoftteams/platform/tabs/how-to/app-caching)\n   * for a more detailed explanation about using this API.\n   *\n   * @param handler - The handler to invoke before the page is unloaded. If this handler returns true the page should\n   * invoke the readyToUnload function provided to it once it's ready to be unloaded.\n   *\n   * @beta\n   */\n  export function registerBeforeUnloadHandler(handler: registerBeforeUnloadHandlerFunctionType): void {\n    registerBeforeUnloadHandlerHelper(\n      getApiVersionTag(teamsAPIsTelemetryVersionNumber_v2, ApiName.TeamsAPIs_RegisterBeforeUnloadHandler),\n      handler,\n      () => {\n        if (!isNullOrUndefined(handler) && !isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n      },\n    );\n  }\n\n  /**\n   * @hidden\n   * Undocumented helper function with shared code between deprecated version and current version of the registerBeforeUnloadHandler API.\n   *\n   * @internal\n   * Limited to Microsoft-internal use\n   *\n   * @param handler - - The handler to invoke before the page is unloaded. If this handler returns true the page should\n   * invoke the readyToUnload function provided to it once it's ready to be unloaded.\n   * @param versionSpecificHelper - The helper function containing logic pertaining to a specific version of the API.\n   *\n   * @deprecated\n   */\n  export function registerBeforeUnloadHandlerHelper(\n    apiVersionTag: string,\n    handler: registerBeforeUnloadHandlerFunctionType,\n    versionSpecificHelper?: () => void,\n  ): void {\n    // allow for registration cleanup even when not finished initializing\n    !isNullOrUndefined(handler) && ensureInitialized(runtime);\n    if (!isNullOrUndefined(handler) && versionSpecificHelper) {\n      versionSpecificHelper();\n    }\n    Handlers.registerBeforeUnloadHandler(apiVersionTag, handler);\n  }\n\n  /**\n   * Checks if teamsCore capability is supported by the host\n   *\n   * @returns boolean to represent whether the teamsCore capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.teamsCore ? true : false;\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { peoplePickerRequiredVersion } from '../internal/constants';\nimport { ensureInitialized, isCurrentSDKVersionAtLeast } from '../internal/internalAPIs';\nimport { validatePeoplePickerInput } from '../internal/mediaUtil';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { callCallbackWithErrorOrResultFromPromiseAndReturnPromise } from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * Allows your app to add a people picker enabling users to search for and select people in their organization.\n *\n * Exceptional APIs telemetry versioning file: v1 and v2 APIs are mixed together in this file\n */\nconst peopleTelemetryVersionNumber_v1: ApiVersionNumber = ApiVersionNumber.V_1;\nconst peopleTelemetryVersionNumber_v2: ApiVersionNumber = ApiVersionNumber.V_2;\n\nexport namespace people {\n  /** Select people callback function type */\n  export type selectPeopleCallbackFunctionType = (error: SdkError, people: PeoplePickerResult[]) => void;\n  /**\n   * Launches a people picker and allows the user to select one or more people from the list\n   * If the app is added to personal app scope the people picker launched is org wide and if the app is added to a chat/channel, people picker launched is also limited to the members of chat/channel\n   \n   * @param callback - Returns list of JSON object of type PeoplePickerResult which consists of Microsoft Entra IDs, display names and emails of the selected users\n   * @param peoplePickerInputs - Input parameters to launch customized people picker\n   * @returns Promise that will be fulfilled when the operation has completed\n   */\n  export function selectPeople(peoplePickerInputs?: PeoplePickerInputs): Promise<PeoplePickerResult[]>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link people.selectPeople people.selectPeople(peoplePickerInputs?: PeoplePickerInputs): Promise\\<PeoplePickerResult[]\\>} instead.\n   *\n   * Launches a people picker and allows the user to select one or more people from the list\n   * If the app is added to personal app scope the people picker launched is org wide and if the app is added to a chat/channel, people picker launched is also limited to the members of chat/channel\n   \n   * @param callback - Returns list of JSON object of type PeoplePickerResult which consists of Microsoft Entra IDs, display names and emails of the selected users\n   * @param peoplePickerInputs - Input parameters to launch customized people picker\n   */\n  export function selectPeople(\n    callback: selectPeopleCallbackFunctionType,\n    peoplePickerInputs?: PeoplePickerInputs,\n  ): void;\n  /**\n   * @hidden\n   * This function is the overloaded implementation of selectPeople.\n   * Since the method signatures of the v1 callback and v2 promise differ in the type of the first parameter,\n   * we need to do an extra check to know the typeof the @param1 to set the proper arguments of the utility function.\n   * @param param1\n   * @param param2\n   * @returns Promise of Array of PeoplePickerResult objects.\n   */\n  export function selectPeople(\n    param1: PeoplePickerInputs | selectPeopleCallbackFunctionType | undefined,\n    param2?: PeoplePickerInputs,\n  ): Promise<PeoplePickerResult[]> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task, FrameContexts.settings);\n\n    let callback: selectPeopleCallbackFunctionType | undefined = undefined;\n    let peoplePickerInputs: PeoplePickerInputs | undefined = undefined;\n    let apiVersionTag = '';\n\n    if (typeof param1 === 'function') {\n      [callback, peoplePickerInputs] = [param1, param2];\n      apiVersionTag = getApiVersionTag(peopleTelemetryVersionNumber_v1, ApiName.People_SelectPeople);\n    } else {\n      peoplePickerInputs = param1;\n      apiVersionTag = getApiVersionTag(peopleTelemetryVersionNumber_v2, ApiName.People_SelectPeople);\n    }\n\n    return callCallbackWithErrorOrResultFromPromiseAndReturnPromise<PeoplePickerResult[]>(\n      selectPeopleHelper,\n      callback /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */,\n      apiVersionTag,\n      peoplePickerInputs,\n    );\n  }\n\n  function selectPeopleHelper(\n    apiVersionTag: string,\n    peoplePickerInputs?: PeoplePickerInputs,\n  ): Promise<PeoplePickerResult[]> {\n    return new Promise<PeoplePickerResult[]>((resolve) => {\n      if (!isCurrentSDKVersionAtLeast(peoplePickerRequiredVersion)) {\n        throw { errorCode: ErrorCode.OLD_PLATFORM };\n      }\n\n      if (!validatePeoplePickerInput(peoplePickerInputs)) {\n        throw { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      }\n\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      /* eslint-disable-next-line strict-null-checks/all */ /* Fix tracked by 5730662 */\n      resolve(sendAndHandleSdkError(apiVersionTag, 'people.selectPeople', peoplePickerInputs));\n    });\n  }\n\n  /**\n   * Input parameter supplied to the People Picker API\n   */\n  export interface PeoplePickerInputs {\n    /**\n     * Optional; Set title for the people picker\n     * Default value is \"Select people\" for multiselect and \"Select a person\" for single select\n     */\n    title?: string;\n\n    /**\n     * Optional; Microsoft Entra IDs of the users to be pre-populated in the search box of people picker control\n     * If single select is enabled this value, only the first user in the list will be pre-populated\n     * Default value is null\n     */\n    setSelected?: string[];\n\n    /**\n     * Optional; launches the people picker in org wide scope even if the app is added to a chat or channel\n     * Default value is false\n     */\n    openOrgWideSearchInChatOrChannel?: boolean;\n\n    /**\n     * Optional; launches the people picker for which only 1 person can be selected\n     * Default value is false\n     */\n    singleSelect?: boolean;\n  }\n\n  /**\n   * Output user object of people picker API\n   */\n  export interface PeoplePickerResult {\n    /**\n     * user object ID (also known as Microsoft Entra ID) of the selected user\n     */\n    objectId: string;\n\n    /**\n     * Optional; display name of the selected user\n     */\n    displayName?: string;\n\n    /**\n     * Optional; email of the selected user\n     */\n    email?: string;\n  }\n\n  /**\n   * Checks if the people capability is supported by the host\n   * @returns boolean to represent whether the people capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.people ? true : false;\n  }\n}\n","import { profile } from '../public/profile';\n\n/**\n * @hidden\n * Validates the request parameters\n * @param showProfileRequest The request parameters\n * @returns true if the parameters are valid, false otherwise\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateShowProfileRequest(\n  showProfileRequest: profile.ShowProfileRequest,\n): [boolean, string | undefined] {\n  if (!showProfileRequest) {\n    return [false, 'A request object is required'];\n  }\n\n  // Validate modality\n  if (showProfileRequest.modality && typeof showProfileRequest.modality !== 'string') {\n    return [false, 'modality must be a string'];\n  }\n\n  // Validate targetElementBoundingRect\n  if (\n    !showProfileRequest.targetElementBoundingRect ||\n    typeof showProfileRequest.targetElementBoundingRect !== 'object'\n  ) {\n    return [false, 'targetElementBoundingRect must be a DOMRect'];\n  }\n\n  // Validate triggerType\n  if (!showProfileRequest.triggerType || typeof showProfileRequest.triggerType !== 'string') {\n    return [false, 'triggerType must be a valid string'];\n  }\n\n  return validatePersona(showProfileRequest.persona);\n}\n\n/**\n * @hidden\n * Validates the persona that is used to resolve the profile target\n * @param persona The persona object\n * @returns true if the persona is valid, false otherwise\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nfunction validatePersona(persona: profile.Persona): [boolean, string | undefined] {\n  if (!persona) {\n    return [false, 'persona object must be provided'];\n  }\n\n  if (persona.displayName && typeof persona.displayName !== 'string') {\n    return [false, 'displayName must be a string'];\n  }\n\n  if (!persona.identifiers || typeof persona.identifiers !== 'object') {\n    return [false, 'persona identifiers object must be provided'];\n  }\n\n  if (!persona.identifiers.AadObjectId && !persona.identifiers.Smtp && !persona.identifiers.Upn) {\n    return [false, 'at least one valid identifier must be provided'];\n  }\n\n  if (persona.identifiers.AadObjectId && typeof persona.identifiers.AadObjectId !== 'string') {\n    return [false, 'AadObjectId identifier must be a string'];\n  }\n\n  if (persona.identifiers.Smtp && typeof persona.identifiers.Smtp !== 'string') {\n    return [false, 'Smtp identifier must be a string'];\n  }\n\n  if (persona.identifiers.Upn && typeof persona.identifiers.Upn !== 'string') {\n    return [false, 'Upn identifier must be a string'];\n  }\n\n  return [true, undefined];\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { validateShowProfileRequest } from '../internal/profileUtil';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { ErrorCode } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst profileTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace for profile related APIs.\n *\n * @beta\n */\nexport namespace profile {\n  /**\n   * Opens a profile card at a specified position to show profile information about a persona.\n   * @param showProfileRequest The parameters to position the card and identify the target user.\n   * @returns Promise that will be fulfilled when the operation has completed\n   *\n   * @beta\n   */\n  export function showProfile(showProfileRequest: ShowProfileRequest): Promise<void> {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    return new Promise<void>((resolve) => {\n      const [isValid, message] = validateShowProfileRequest(showProfileRequest);\n      if (!isValid) {\n        throw { errorCode: ErrorCode.INVALID_ARGUMENTS, message };\n      }\n\n      // Convert the app provided parameters to the form suitable for postMessage.\n      const requestInternal: ShowProfileRequestInternal = {\n        modality: showProfileRequest.modality,\n        persona: showProfileRequest.persona,\n        triggerType: showProfileRequest.triggerType,\n        targetRectangle: {\n          x: showProfileRequest.targetElementBoundingRect.x,\n          y: showProfileRequest.targetElementBoundingRect.y,\n          width: showProfileRequest.targetElementBoundingRect.width,\n          height: showProfileRequest.targetElementBoundingRect.height,\n        },\n      };\n\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(profileTelemetryVersionNumber, ApiName.Profile_ShowProfile),\n          'profile.showProfile',\n          requestInternal,\n        ),\n      );\n    });\n  }\n\n  /**\n   * The type of modalities that are supported when showing a profile.\n   * Can be provided as an optional hint with the request and will be\n   * respected if the hosting M365 application supports it.\n   *\n   * @beta\n   */\n  export type Modality = 'Card' | 'Expanded';\n\n  /**\n   * The type of the profile trigger.\n   *  - MouseHover: The user hovered a target.\n   *  - Press: The target was pressed with either a mouse click or keyboard key press.\n   *  - AppRequest: The show profile request is happening programmatically, without direct user interaction.\n   *\n   * @beta\n   */\n  export type TriggerType = 'MouseHover' | 'Press' | 'AppRequest';\n\n  /**\n   * The set of identifiers that are supported for resolving the persona.\n   *\n   * At least one is required, and if multiple are provided then only the highest\n   * priority one will be used (AadObjectId > Upn > Smtp). AAD is now known as \"Microsoft Entra ID\"\n   *\n   * @beta\n   */\n  export type PersonaIdentifiers = {\n    /**\n     * The object id in Microsoft Entra.\n     *\n     * This id is guaranteed to be unique for an object within a tenant,\n     * and so if provided will lead to a more performant lookup. It can\n     * be resolved via MS Graph (see https://learn.microsoft.com/graph/api/resources/users\n     * for examples).\n     */\n    readonly AadObjectId?: string;\n\n    /**\n     * The primary SMTP address.\n     */\n    readonly Smtp?: string;\n\n    /**\n     * The user principle name.\n     */\n    readonly Upn?: string;\n  };\n\n  /**\n   * The persona to show the profile for.\n   *\n   * @beta\n   */\n  export interface Persona {\n    /**\n     * The set of identifiers that are supported for resolving the persona.\n     */\n    identifiers: PersonaIdentifiers;\n\n    /**\n     * Optional display name override. If not specified the user's display name will be resolved normally.\n     */\n    displayName?: string;\n  }\n\n  /**\n   * Input parameters provided to the showProfile API.\n   *\n   * @beta\n   */\n  export interface ShowProfileRequest {\n    /**\n     * An optional hint to the hosting M365 application about which modality of the profile you want to show.\n     */\n    modality?: Modality;\n\n    /**\n     * The information about the persona to show the profile for.\n     */\n    persona: Persona;\n\n    /**\n     * The bounding rectangle of the target.\n     */\n    targetElementBoundingRect: DOMRect;\n\n    /**\n     * Specifies which user interaction was used to trigger the API call.\n     */\n    triggerType: TriggerType;\n  }\n\n  /**\n   * Checks if the profile capability is supported by the host\n   * @returns boolean to represent whether the profile capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.profile ? true : false;\n  }\n}\n\n/**\n * Internal representation of a DOMRect suitable for sending via postMessage.\n */\nexport type Rectangle = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\n/**\n * @beta\n * @hidden\n * An internal representation of the showProfile parameters suitable for sending via postMessage.\n * The hub expects to receive an object of this type.\n */\nexport interface ShowProfileRequestInternal {\n  modality?: profile.Modality;\n  persona: profile.Persona;\n  targetRectangle: Rectangle;\n  triggerType: profile.TriggerType;\n}\n","import { sendAndHandleStatusAndReason, sendMessageToParent } from '../internal/communication';\nimport { registerHandler, removeHandler } from '../internal/handlers';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst searchTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Allows your application to interact with the host M365 application's search box.\n * By integrating your application with the host's search box, users can search\n * your app using the same search box they use elsewhere in Teams, Outlook, or Office.\n *\n * This functionality is in Beta.\n * @beta\n */\nexport namespace search {\n  const onChangeHandlerName = 'search.queryChange';\n  const onClosedHandlerName = 'search.queryClose';\n  const onExecutedHandlerName = 'search.queryExecute';\n\n  /**\n   * This interface contains information pertaining to the contents of the host M365 application's search box\n   *\n   * @beta\n   */\n  export interface SearchQuery {\n    /** The current search term in the host search experience */\n    searchTerm: string;\n\n    /** Timestamp sequence value to ensure messages are processed in correct order / combine them. */\n    timestamp: number;\n  }\n\n  /**\n   * This type will store the SearchQuery and allow other logic to be made inside the handler.\n   *\n   * @beta\n   */\n  export type SearchQueryHandler = (query: SearchQuery) => void;\n\n  /**\n   * Allows the caller to register for various events fired by the host search experience.\n   * Calling this function indicates that your application intends to plug into the host's search box and handle search events,\n   * when the user is actively using your page/tab.\n   * \n   * The host may visually update its search box, e.g. with the name or icon of your application.\n   * \n   * Your application should *not* re-render inside of these callbacks, there may be a large number\n   * of onChangeHandler calls if the user is typing rapidly in the search box.\n   *\n   * @param onClosedHandler - This handler will be called when the user exits or cancels their search.\n   * Should be used to return your application to its most recent, non-search state. The value of {@link SearchQuery.searchTerm} \n   * will be whatever the last query was before ending search. \n   * \n   * @param onExecuteHandler - The handler will be called when the user executes their \n   * search (by pressing Enter for example). Should be used to display the full list of search results. \n   * The value of {@link SearchQuery.searchTerm} is the complete query the user entered in the search box.\n   *\n   * @param onChangeHandler - This optional handler will be called when the user first starts using the\n   * host's search box and as the user types their query. Can be used to put your application into a \n   * word-wheeling state or to display suggestions as the user is typing. \n   * \n   * This handler will be called with an empty {@link SearchQuery.searchTerm} when search is beginning, and subsequently,\n   * with the current contents of the search box.\n   * @example\n   * ``` ts\n   * search.registerHandlers(\n      query => {\n        console.log('Update your application to handle the search experience being closed. Last query: ${query.searchTerm}');\n      },\n      query => {\n        console.log(`Update your application to handle an executed search result: ${query.searchTerm}`);\n      },\n      query => {\n        console.log(`Update your application with the changed search query: ${query.searchTerm}`);\n      },\n     );\n   * ```\n   *\n   * @beta\n   */\n  export function registerHandlers(\n    onClosedHandler: SearchQueryHandler,\n    onExecuteHandler: SearchQueryHandler,\n    onChangeHandler?: SearchQueryHandler,\n  ): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    registerHandler(\n      getApiVersionTag(searchTelemetryVersionNumber, ApiName.Search_RegisterOnClosedHandler),\n      onClosedHandlerName,\n      onClosedHandler,\n    );\n    registerHandler(\n      getApiVersionTag(searchTelemetryVersionNumber, ApiName.Search_RegisterOnExecutedHandler),\n      onExecutedHandlerName,\n      onExecuteHandler,\n    );\n    if (onChangeHandler) {\n      registerHandler(\n        getApiVersionTag(searchTelemetryVersionNumber, ApiName.Search_RegisterOnChangeHandler),\n        onChangeHandlerName,\n        onChangeHandler,\n      );\n    }\n  }\n\n  /**\n   * Allows the caller to unregister for all events fired by the host search experience. Calling\n   * this function will cause your app to stop appearing in the set of search scopes in the hosts\n   *\n   * @beta\n   */\n  export function unregisterHandlers(): void {\n    ensureInitialized(runtime, FrameContexts.content);\n\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    // This should let the host know to stop making the app scope show up in the search experience\n    // Can also be used to clean up handlers on the host if desired\n    sendMessageToParent(\n      getApiVersionTag(searchTelemetryVersionNumber, ApiName.Search_UnregisterHandlers),\n      'search.unregister',\n    );\n    removeHandler(onChangeHandlerName);\n    removeHandler(onClosedHandlerName);\n    removeHandler(onExecutedHandlerName);\n  }\n\n  /**\n   * Checks if search capability is supported by the host\n   * @returns boolean to represent whether the search capability is supported\n   *\n   * @throws Error if {@link app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.search ? true : false;\n  }\n\n  /**\n   * Clear the host M365 application's search box\n   *\n   * @beta\n   */\n  export function closeSearch(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n      if (!isSupported()) {\n        throw new Error('Not supported');\n      }\n\n      resolve(\n        sendAndHandleStatusAndReason(\n          getApiVersionTag(searchTelemetryVersionNumber, ApiName.Search_CloseSearch),\n          'search.closeSearch',\n        ),\n      );\n    });\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { callCallbackWithSdkErrorFromPromiseAndReturnPromise, InputFunction } from '../internal/utils';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\nconst sharingTelemetryVersionNumber_v1: ApiVersionNumber = ApiVersionNumber.V_1;\nconst sharingTelemetryVersionNumber_v2: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to open a share dialog for web content.\n * For more info, see [Share to Teams from personal app or tab](https://learn.microsoft.com/microsoftteams/platform/concepts/build-and-test/share-to-teams-from-personal-app-or-tab)\n */\nexport namespace sharing {\n  /** shareWebContent callback function type */\n  export type shareWebContentCallbackFunctionType = (err?: SdkError) => void;\n\n  /** Type of message that can be sent or received by the sharing APIs */\n  export const SharingAPIMessages = {\n    /**\n     * Share web content message.\n     * @internal\n     */\n    shareWebContent: 'sharing.shareWebContent',\n  };\n\n  // More types can be added as we expand share capability\n  type ContentType = 'URL';\n\n  /** Represents parameters for base shared content. */\n  interface IBaseSharedContent {\n    /** Shared content type  */\n    type: ContentType;\n  }\n\n  // More types can be added as we expand share capability\n  /** IShareRequestContentType defines share request type. */\n  export type IShareRequestContentType = IURLContent;\n\n  /** Represents IShareRequest parameters interface.\n   * @typeparam T - The identity type\n   */\n  export interface IShareRequest<T> {\n    /** Content of the share request. */\n    content: T[];\n  }\n\n  /** Represents IURLContent parameters. */\n  export interface IURLContent extends IBaseSharedContent {\n    /** Type */\n    type: 'URL';\n\n    /**\n     * Required URL\n     */\n    url: string;\n\n    /**\n     * Default initial message text\n     */\n    message?: string;\n\n    /**\n     * Show URL preview, defaults to true\n     */\n    preview?: boolean;\n  }\n\n  /**\n   * Feature is under development\n   * Opens a share dialog for web content\n   *\n   * @param shareWebContentRequest - web content info\n   * @returns Promise that will be fulfilled when the operation has completed\n   */\n  export function shareWebContent(shareWebContentRequest: IShareRequest<IShareRequestContentType>): Promise<void>;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link sharing.shareWebContent sharing.shareWebContent(shareWebContentRequest: IShareRequest\\<IShareRequestContentType\\>): Promise\\<void\\>} instead.\n   *\n   * Feature is under development\n   * Opens a share dialog for web content\n   *\n   * @param shareWebContentRequest - web content info\n   * @param callback - optional callback\n   */\n  export function shareWebContent(\n    shareWebContentRequest: IShareRequest<IShareRequestContentType>,\n    callback: shareWebContentCallbackFunctionType,\n  ): void;\n  export function shareWebContent(\n    shareWebContentRequest: IShareRequest<IShareRequestContentType>,\n    callback?: shareWebContentCallbackFunctionType,\n  ): Promise<void> {\n    // validate the given input (synchronous check)\n    try {\n      validateNonEmptyContent(shareWebContentRequest);\n      validateTypeConsistency(shareWebContentRequest);\n      validateContentForSupportedTypes(shareWebContentRequest);\n    } catch (err) {\n      //return the error via callback(v1) or rejected promise(v2)\n      const wrappedFunction: InputFunction<void> = () => Promise.reject(err);\n      return callCallbackWithSdkErrorFromPromiseAndReturnPromise(wrappedFunction, callback);\n    }\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.sidePanel,\n      FrameContexts.task,\n      FrameContexts.stage,\n      FrameContexts.meetingStage,\n    );\n    const apiVersionTag = callback\n      ? getApiVersionTag(sharingTelemetryVersionNumber_v1, ApiName.Sharing_ShareWebContent)\n      : getApiVersionTag(sharingTelemetryVersionNumber_v2, ApiName.Sharing_ShareWebContent);\n    return callCallbackWithSdkErrorFromPromiseAndReturnPromise(\n      shareWebContentHelper,\n      callback,\n      apiVersionTag,\n      shareWebContentRequest,\n    );\n  }\n\n  function shareWebContentHelper(\n    apiVersionTag: string,\n    shareWebContentRequest: IShareRequest<IShareRequestContentType>,\n  ): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      resolve(sendAndHandleSdkError(apiVersionTag, SharingAPIMessages.shareWebContent, shareWebContentRequest));\n    });\n  }\n\n  /**\n   * Functions for validating the shareRequest input parameter\n   */\n  function validateNonEmptyContent(shareRequest: IShareRequest<IShareRequestContentType>): void {\n    if (!(shareRequest && shareRequest.content && shareRequest.content.length)) {\n      const err: SdkError = {\n        errorCode: ErrorCode.INVALID_ARGUMENTS,\n        message: 'Shared content is missing',\n      };\n      throw err;\n    }\n  }\n\n  function validateTypeConsistency(shareRequest: IShareRequest<IShareRequestContentType>): void {\n    let err: SdkError | undefined;\n    if (shareRequest.content.some((item) => !item.type)) {\n      err = {\n        errorCode: ErrorCode.INVALID_ARGUMENTS,\n        message: 'Shared content type cannot be undefined',\n      };\n      throw err;\n    }\n    if (shareRequest.content.some((item) => item.type !== shareRequest.content[0].type)) {\n      err = {\n        errorCode: ErrorCode.INVALID_ARGUMENTS,\n        message: 'Shared content must be of the same type',\n      };\n      throw err;\n    }\n  }\n\n  function validateContentForSupportedTypes(shareRequest: IShareRequest<IShareRequestContentType>): void {\n    let err: SdkError | undefined;\n    if (shareRequest.content[0].type === 'URL') {\n      if (shareRequest.content.some((item) => !item.url)) {\n        err = {\n          errorCode: ErrorCode.INVALID_ARGUMENTS,\n          message: 'URLs are required for URL content types',\n        };\n        throw err;\n      }\n    } else {\n      err = {\n        errorCode: ErrorCode.INVALID_ARGUMENTS,\n        message: 'Content type is unsupported',\n      };\n      throw err;\n    }\n  }\n\n  /**\n   * Checks if the sharing capability is supported by the host\n   * @returns boolean to represent whether the sharing capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.sharing ? true : false;\n  }\n\n  /**\n   * Namespace to get the list of content shared in a Teams meeting\n   *\n   * @beta\n   */\n  export namespace history {\n    /**\n     * Represents the data returned when calling {@link sharing.history.getContent}\n     *\n     * @beta\n     */\n    export interface IContentResponse {\n      /** Id of the app where the content was shared from */\n      appId: string;\n      /** Title of the shared content */\n      title: string;\n      /** Reference of the shared content */\n      contentReference: string;\n      /** Id of the thread where the content was shared. */\n      threadId: string;\n      /** Id of the user who shared the content. */\n      author: string;\n      /** Type of the shared content.\n       * For sharing to Teams stage scenarios, this value would be `ShareToStage`\n       * Other `contentType` values will be added and documented here over time\n       */\n      contentType: string;\n    }\n\n    /**\n     * Get the list of content shared in a Teams meeting\n     *\n     * @throws Error if call capability is not supported\n     * @throws Error if returned content details are invalid\n     * @returns Promise that will resolve with the {@link IContentResponse} objects array\n     *\n     * @beta\n     */\n    export async function getContent(): Promise<IContentResponse[]> {\n      ensureInitialized(runtime, FrameContexts.sidePanel, FrameContexts.meetingStage);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n\n      const contentDetails: IContentResponse[] = await sendAndHandleSdkError(\n        getApiVersionTag(sharingTelemetryVersionNumber_v2, ApiName.Sharing_History_GetContent),\n        'sharing.history.getContent',\n      );\n\n      return contentDetails;\n    }\n\n    /**\n     * Checks if sharing.history capability is supported by the host\n     * @returns boolean to represent whether the sharing.history capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.sharing?.history !== undefined;\n    }\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst stageViewTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Namespace to interact with the stage view specific part of the SDK.\n *\n *  @beta\n */\nexport namespace stageView {\n  /**\n   * Parameters to open a stage view.\n   */\n  export interface StageViewParams {\n    /**\n     * The ID of the Teams application to be opened.\n     */\n    appId: string;\n\n    /**\n     * The URL of the content to display.\n     */\n    contentUrl: string;\n\n    /**\n     * The chat or channel ID.\n     */\n    threadId: string;\n\n    /**\n     * The messageId identifies a particular channel meeting within the channel as specified by the threadId above. This should be used only when trying to open the stage view for a channel meeting. It will be a no-op for other scenarios\n     */\n    messageId?: string;\n\n    /**\n     * The title to give the stage view.\n     */\n    title?: string;\n\n    /**\n     * The Teams application website URL.\n     */\n    websiteUrl?: string;\n\n    /**\n     * The entity ID of the Teams application content being opened.\n     */\n    entityId?: string;\n\n    /**\n     * The open mode for stage content.\n     * Optional param: if not passed, hosts can choose their default openMode.\n     * If a host does not support any specific openMode, It will fallback to StageViewOpenMode.modal.\n     */\n    openMode?: StageViewOpenMode;\n  }\n\n  /**\n   * The open mode for stage content.\n   */\n  export enum StageViewOpenMode {\n    /**\n     * Open the content in a modal.\n     */\n    modal = 'modal',\n    /**\n     * Open the content in a popped-out window.\n     */\n    popout = 'popout',\n    /**\n     * Open the content in a popped-out window with chat collaboration.\n     */\n    popoutWithChat = 'popoutWithChat',\n  }\n\n  /**\n   *\n   * Opens a stage view to display a Teams application\n   * @beta\n   * @param stageViewParams - The parameters to pass into the stage view.\n   * @returns Promise that resolves or rejects with an error once the stage view is closed.\n   */\n  export function open(stageViewParams: StageViewParams): Promise<void> {\n    return new Promise((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content);\n\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n\n      if (!stageViewParams) {\n        throw new Error('[stageView.open] Stage view params cannot be null');\n      }\n\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(stageViewTelemetryVersionNumber, ApiName.StageView_Open),\n          'stageView.open',\n          stageViewParams,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Checks if stageView capability is supported by the host\n   * @beta\n   * @returns boolean to represent whether the stageView capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.stageView ? true : false;\n  }\n\n  /**\n   * Namespace for actions that can be taken by the stage view itself.\n   *\n   * @beta\n   */\n  export namespace self {\n    /**\n     * Closes the current stage view. This function will be a no-op if called from outside of a stage view.\n     * @returns Promise that resolves or rejects with an error once the stage view is closed.\n     *\n     * @beta\n     * @throws Error if stageView.self.close is not supported in the current context or if `app.initialize()` has not resolved successfully.\n     */\n    export function close(): Promise<void> {\n      return new Promise((resolve) => {\n        ensureInitialized(runtime, FrameContexts.content);\n\n        if (!isSupported()) {\n          throw errorNotSupportedOnPlatform;\n        }\n\n        resolve(\n          sendAndHandleSdkError(\n            getApiVersionTag(stageViewTelemetryVersionNumber, ApiName.StageView_Self_Close),\n            'stageView.self.close',\n          ),\n        );\n      });\n    }\n\n    /**\n     * Checks if stageView.self capability is supported by the host\n     * @beta\n     * @returns boolean to represent whether the stageView.self capability is supported\n     *\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) && runtime.supports.stageView?.self !== undefined;\n    }\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorInvalidCount, errorInvalidResponse, errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { DevicePermission } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst visualMediaTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Interact with images. Allows the app developer ask the user to get images from their camera / camera roll / file system.\n *\n * @beta\n */\nexport namespace visualMedia {\n  const maxVisualMediaSelectionLimit = 10;\n  /**\n   * @hidden\n   * All properties common to Image and Video Props\n   *\n   * @beta\n   */\n  interface VisualMediaProps {\n    /**\n     * @hidden\n     * The maximum number of media items that can be selected at once is limited to values that are less than or equal to the maximum visual media selection limit.\n     */\n    maxVisualMediaCount: number;\n  }\n\n  /**\n   * @hidden\n   * The required value of the visualMedia files from gallery\n   *\n   * @beta\n   */\n  export interface GalleryProps {\n    /**\n     * The visualMedia source\n     */\n    source: Source.Gallery;\n  }\n  /**\n   * @hidden\n   * The required value of the visualMedia files from camera\n   *\n   * @beta\n   */\n  export interface CameraProps {\n    /**\n     * @hidden\n     * The visualMedia source\n     */\n    source: Source.Camera;\n    /**\n     * @hidden\n     * Optional; Specify whether users have the option to switch between the front and rear cameras. The default setting is FrontOrRear.\n     * Default value is FrontOrRear\n     */\n    cameraRestriction?: CameraRestriction;\n  }\n\n  /**\n   * @hidden\n   * Indicate if user is allowed to move between front and back camera or stay in front/back camera only\n   * If the camera option requested by the app isn't available, the SDK will silently default to the platform's standard camera.\n   *\n   * @beta\n   */\n  export enum CameraRestriction {\n    /** User can move between front and back camera */\n    FrontOrRear = 1,\n    /** User can only use the front camera */\n    FrontOnly = 2,\n    /** User can only use the back camera */\n    RearOnly = 3,\n  }\n  /**\n   * @hidden\n   * Specifies the image source\n   *\n   * @beta\n   */\n  export enum Source {\n    /** The camera is the source of visual media. */\n    Camera = 1,\n    /** The source of visual media is the gallery. */\n    Gallery = 2,\n  }\n\n  /**\n   * @hidden\n   * VisualMediaFile object that can be used to represent image or video from host apps.\n   *\n   * @beta\n   */\n  export interface VisualMediaFile {\n    /**\n     * @hidden\n     * This is the base64 content of file.\n     * If app needs to use this directly in HTML tags, it should convert this to a data url.\n     */\n    content: string;\n    /**\n     * @hidden\n     * The size of file represented in VisualMediaFile in KB\n     */\n    sizeInKB: number;\n\n    /**\n     * @hidden\n     * Name of the file (does not include the extension)\n     */\n    name: string;\n\n    /**\n     * @hidden\n     * File's MIME type. More information on supported `mimeTypes`(https://docs.lens.xyz/docs/metadata-standards#supported-mime-types-for-imagesaudiovideos).\n     */\n    mimeType: string;\n  }\n\n  /**\n   * @hidden\n   * Checks whether or not visualMedia has user permission\n   * @returns Promise that will resolve with true if the user had granted the app permission to media information(including Camera and Gallery permission), or with false otherwise,\n   * In case of an error, promise will reject with the error.\n   * @throws NOT_SUPPORTED_ON_PLATFORM Error if the DevicePermission.Media permission has not successfully granted.\n   *\n   * @beta\n   */\n  export function hasPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!image.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n    return sendAndHandleSdkError(\n      getApiVersionTag(visualMediaTelemetryVersionNumber, ApiName.VisualMedia_HasPermission),\n      'permissions.has',\n      permissions,\n    );\n  }\n\n  /**\n   * @hidden\n   * Requests user permission for visualMedia\n   * @returns Promise that will resolve with true if the user consented permission for media(including Camera and Gallery permission), or with false otherwise,\n   * In case of an error, promise will reject with the error.\n   * @throws NOT_SUPPORTED_ON_PLATFORM Error if the DevicePermission.Media permission has not successfully granted.\n   *\n   * @beta\n   */\n  export function requestPermission(): Promise<boolean> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!image.isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    const permissions: DevicePermission = DevicePermission.Media;\n    return sendAndHandleSdkError(\n      getApiVersionTag(visualMediaTelemetryVersionNumber, ApiName.VisualMedia_RequestPermission),\n      'permissions.request',\n      permissions,\n    );\n  }\n\n  /**\n   * @hidden\n   * To enable this image capability will let the app developer ask the user to get images from camera/local storage\n   *\n   * @beta\n   */\n  export namespace image {\n    /**\n     * @hidden\n     * CameraImageProperties is for the image taken from the camera\n     *\n     * @beta\n     */\n    export interface CameraImageProperties extends VisualMediaProps {\n      /**\n       * @hidden\n       * The source in CameraImageProperties should always be CameraProps\n       */\n      sourceProps: CameraProps;\n    }\n\n    /**\n     * @hidden\n     * CameraImageProperties is for the image taken from the camera\n     *\n     * @beta\n     */\n    export interface GalleryImageProperties extends VisualMediaProps {\n      /**\n       * @hidden\n       * The source in GalleryImageProperties should always be GalleryProps\n       */\n      sourceProps: GalleryProps;\n    }\n\n    /**\n     * @hidden\n     * Capture one or multiple image(s) using camera.\n     * @param cameraImageInputs - The input params to customize the image(s) to be captured\n     * @returns Promise that will resolve with {@link VisualMediaFile[]} object or reject with an error.\n     * @throws INVALID_ARGUMENTS Error if imageInputs is null or imageInputs.maxVisualMediaCount is greater than maxVisualMediaSelectionLimit or lesser than 1.\n     *\n     * @beta\n     */\n    export async function captureImages(cameraImageInputs: CameraImageProperties): Promise<VisualMediaFile[]> {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      ensureSupported();\n      ensureImageInputValid(cameraImageInputs);\n      const files = await sendAndHandleSdkError<VisualMediaFile[]>(\n        getApiVersionTag(visualMediaTelemetryVersionNumber, ApiName.VisualMedia_Image_CaptureImages),\n        'visualMedia.image.captureImages',\n        cameraImageInputs,\n      );\n      ensureResponseValid(cameraImageInputs.maxVisualMediaCount, files);\n      return files;\n    }\n\n    /**\n     * @hidden\n     * Upload the existing image(s) from the gallery.\n     * @param galleryImageInputs - The input params to customize the image(s) to be captured\n     * @returns Promise that will resolve with {@link VisualMediaFile[]} object or reject with an error.\n     * @throws INVALID_ARGUMENTS Error if imageInputs is null or imageInputs.maxVisualMediaCount is greater than maxVisualMediaSelectionLimit or lesser than 1.\n     *\n     * @beta\n     */\n    export async function retrieveImages(galleryImageInputs: GalleryImageProperties): Promise<VisualMediaFile[]> {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      ensureSupported();\n      ensureImageInputValid(galleryImageInputs);\n      const files = await sendAndHandleSdkError<VisualMediaFile[]>(\n        getApiVersionTag(visualMediaTelemetryVersionNumber, ApiName.VisualMedia_Image_RetrieveImages),\n        'visualMedia.image.retrieveImages',\n        galleryImageInputs,\n      );\n      ensureResponseValid(galleryImageInputs.maxVisualMediaCount, files);\n      return files;\n    }\n\n    /**\n     * @hidden\n     * Checks if visualMedia.image capability is supported by the host\n     * @returns boolean to represent whether visualMedia.image is supported\n     * @throws Error if {@linkcode app.initialize} has not successfully completed\n     *\n     * @beta\n     */\n    export function isSupported(): boolean {\n      return ensureInitialized(runtime) &&\n        runtime.supports.visualMedia &&\n        runtime.supports.visualMedia.image &&\n        runtime.supports.permissions\n        ? true\n        : false;\n    }\n\n    /**\n     * @hidden\n     * Ensure visualMedia.image capability is supported by the host\n     * @throws errorNotSupportedOnPlatform error if isSupported() fails.\n     *\n     * @beta\n     */\n    function ensureSupported(): void {\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n    }\n    /**\n     * @hidden\n     * @param imageInput the input can be either CameraImageProperties or GalleryImageProperties\n     * @param source the expected Source\n     * @throws error if the input check fails.\n     * @beta\n     */\n    function ensureImageInputValid(imageInput: CameraImageProperties | GalleryImageProperties): void {\n      if (\n        !imageInput ||\n        imageInput.maxVisualMediaCount > maxVisualMediaSelectionLimit ||\n        imageInput.maxVisualMediaCount < 1\n      ) {\n        throw errorInvalidCount;\n      }\n    }\n\n    /**\n     * @hidden\n     * Ensure the number of images in the response is within the maximum limit.\n     * @throws error if length check fails.\n     * @param maxCount the maxVisualMediaCount set in the imageInpus\n     * @param response the response passed from host app\n     *\n     * @beta\n     */\n    function ensureResponseValid(maxCount: number, response: VisualMediaFile[]): void {\n      // to ensure the number of images in the response is within the maximum limit.\n      if (response.length > maxCount) {\n        throw errorInvalidResponse;\n      }\n    }\n  }\n}\n","import { sendAndUnwrap } from '../internal/communication';\nimport { GlobalVars } from '../internal/globalVars';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { app } from './app';\nimport { errorNotSupportedOnPlatform, HostClientType, HostName } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * Contains functionality enabling apps to query properties about how the host manages web storage (`Window.LocalStorage`)\n *\n * @beta\n */\nexport namespace webStorage {\n  /**\n   * Checks if web storage (`Window.LocalStorage`) gets cleared when a user logs out from host\n   *\n   * @returns `true` if web storage gets cleared on logout and `false` if not\n   *\n   * @throws `Error` if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export async function isWebStorageClearedOnUserLogOut(): Promise<boolean> {\n    ensureInitialized(runtime);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (\n      runtime.isLegacyTeams &&\n      (GlobalVars.hostClientType === HostClientType.android ||\n        GlobalVars.hostClientType === HostClientType.ios ||\n        GlobalVars.hostClientType === HostClientType.ipados) &&\n      (await getHostName()) === HostName.teams\n    ) {\n      // On Teams Mobile, they haven't yet implemented this capability. However, for compatibility reasons, we need\n      // to act as if they do. If they did implement it, they would return true, so that's what we do here.\n      // Getting Teams Mobile to implement this is a work-in-progress. Once they do implement it, we can remove this\n      // whole if-block. Until then, we cannot send the message to them because they will not understand it.\n      // Once they do implement it, this if-block will automatically not apply because runtime.isLegacyTeams will no\n      // longer be true. So, we don't need to worry about removing this if block \"at the right time\". We can\n      // just keep it here until Teams Mobile implements this capability and uses the host SDK everywhere, at which\n      // point we can remove this whole if-block at our leisure.\n      return true;\n    }\n\n    return await sendAndUnwrap(\n      getApiVersionTag(ApiVersionNumber.V_2, ApiName.WebStorage_IsWebStorageClearedOnUserLogOut),\n      ApiName.WebStorage_IsWebStorageClearedOnUserLogOut,\n    );\n  }\n\n  async function getHostName(): Promise<HostName> {\n    if (cachedHostName === null) {\n      cachedHostName = (await app.getContext()).app.host.name;\n    }\n\n    return cachedHostName;\n  }\n\n  /**\n   * Checks if webStorage capability is supported by the host\n   * @returns boolean to represent whether the webStorage capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   *\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.webStorage !== undefined;\n  }\n}\n\n// It is safe to cache the host name because the host cannot change at runtime\nlet cachedHostName: HostName | null = null;\n\n// ...except during unit tests, where we will change it at runtime regularly for testing purposes\nexport function clearWebStorageCachedHostNameForTests(): void {\n  cachedHostName = null;\n}\n","import { sendAndUnwrap, sendMessageToParent } from '../internal/communication';\nimport { errorCallNotStarted } from '../internal/constants';\nimport { createTeamsDeepLinkForCall } from '../internal/deepLinkUtilities';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst callTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Used to interact with call functionality, including starting calls with other users.\n */\nexport namespace call {\n  /** Modalities that can be associated with a call. */\n  export enum CallModalities {\n    /** Indicates that the modality is unknown or undefined. */\n    Unknown = 'unknown',\n    /** Indicates that the call includes audio. */\n    Audio = 'audio',\n    /** Indicates that the call includes video. */\n    Video = 'video',\n    /** Indicates that the call includes video-based screen sharing. */\n    VideoBasedScreenSharing = 'videoBasedScreenSharing',\n    /** Indicates that the call includes data sharing or messaging. */\n    Data = 'data',\n  }\n\n  /** Represents parameters for {@link startCall | StartCall}. */\n  export interface StartCallParams {\n    /**\n     * Comma-separated list of user IDs representing the participants of the call.\n     *\n     * @remarks\n     * Currently the User ID field supports the Microsoft Entra UserPrincipalName,\n     * typically an email address, or in case of a PSTN call, it supports a pstn\n     * mri 4:\\<phonenumber>.\n     */\n    targets: string[];\n    /**\n     * List of modalities for the call. Defaults to [“audio”].\n     */\n    requestedModalities?: CallModalities[];\n    /**\n     * An optional parameter that informs about the source of the deep link\n     */\n    source?: string;\n  }\n\n  /**\n   * Starts a call with other users\n   *\n   * @param startCallParams - Parameters for the call\n   *\n   * @throws Error if call capability is not supported\n   * @throws Error if host notifies of a failed start call attempt in a legacy Teams environment\n   * @returns always true if the host notifies of a successful call inititation\n   */\n  export function startCall(startCallParams: StartCallParams): Promise<boolean> {\n    const apiVersionTag = getApiVersionTag(callTelemetryVersionNumber, ApiName.Call_StartCall);\n    return new Promise((resolve) => {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n      if (!isSupported()) {\n        throw errorNotSupportedOnPlatform;\n      }\n      if (runtime.isLegacyTeams) {\n        resolve(\n          sendAndUnwrap(\n            apiVersionTag,\n            'executeDeepLink',\n            createTeamsDeepLinkForCall(\n              startCallParams.targets,\n              startCallParams.requestedModalities?.includes(CallModalities.Video),\n              startCallParams.source,\n            ),\n          ).then((result: boolean) => {\n            if (!result) {\n              throw new Error(errorCallNotStarted);\n            }\n            return result;\n          }),\n        );\n      } else {\n        return sendMessageToParent(apiVersionTag, 'call.startCall', [startCallParams], resolve);\n      }\n    });\n  }\n\n  /**\n   * Checks if the call capability is supported by the host\n   * @returns boolean to represent whether the call capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.call ? true : false;\n  }\n}\n","import { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport {\n  app,\n  notifyAppLoadedHelper,\n  notifyExpectedFailureHelper,\n  notifyFailureHelper,\n  notifySuccessHelper,\n} from './app';\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link app} namespace instead.\n *\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst appInitializationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\nexport namespace appInitialization {\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.Messages} instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  export import Messages = app.Messages;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.FailedReason} instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  export import FailedReason = app.FailedReason;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.ExpectedFailureReason} instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  export import ExpectedFailureReason = app.ExpectedFailureReason;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.IFailedRequest} instead.\n   */\n  export import IFailedRequest = app.IFailedRequest;\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.IExpectedFailureRequest} instead.\n   */\n  export import IExpectedFailureRequest = app.IExpectedFailureRequest;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.notifyAppLoaded app.notifyAppLoaded(): void} instead.\n   *\n   * Notifies the frame that app has loaded and to hide the loading indicator if one is shown.\n   */\n  export function notifyAppLoaded(): void {\n    notifyAppLoadedHelper(\n      getApiVersionTag(appInitializationTelemetryVersionNumber, ApiName.AppInitialization_NotifyAppLoaded),\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.notifySuccess app.notifySuccess(): void} instead.\n   *\n   * Notifies the frame that app initialization is successful and is ready for user interaction.\n   */\n  export function notifySuccess(): void {\n    notifySuccessHelper(\n      getApiVersionTag(appInitializationTelemetryVersionNumber, ApiName.AppInitialization_NotifySuccess),\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.notifyFailure app.notifyFailure(appInitializationFailedRequest: IFailedRequest): void} instead.\n   *\n   * Notifies the frame that app initialization has failed and to show an error page in its place.\n   * @param appInitializationFailedRequest - The failure request containing the reason for why the app failed\n   * during initialization as well as an optional message.\n   */\n  export function notifyFailure(appInitializationFailedRequest: IFailedRequest): void {\n    notifyFailureHelper(\n      getApiVersionTag(appInitializationTelemetryVersionNumber, ApiName.AppInitialization_NotifyFailure),\n      appInitializationFailedRequest,\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link app.notifyExpectedFailure app.notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void} instead.\n   *\n   * Notifies the frame that app initialized with some expected errors.\n   * @param expectedFailureRequest - The expected failure request containing the reason and an optional message\n   */\n  export function notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void {\n    notifyExpectedFailureHelper(\n      getApiVersionTag(appInitializationTelemetryVersionNumber, ApiName.AppInitialization_NotifyExpectedFailure),\n      expectedFailureRequest,\n    );\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { createFile, decodeAttachment } from '../internal/mediaUtil';\nimport { ApiName, ApiVersionNumber, getApiVersionTag, getLogger } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { ErrorCode, SdkError } from './interfaces';\nimport { runtime } from './runtime';\n\nconst Files3PLogger = getLogger('thirdPartyCloudStorage');\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst thirdPartyCloudStorageTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * Extended files API 3P storage providers, features like sending Blob from Teams to 3P app on user\n * actions like drag and drop to compose\n * @beta\n */\nexport namespace thirdPartyCloudStorage {\n  /**\n   * Interface to assemble file chunks\n   * @beta\n   */\n  export interface AssembleAttachment {\n    /** A number representing the sequence of the attachment in the file chunks. */\n    sequence: number;\n    /** A Blob object representing the data of the file chunks. */\n    file: Blob;\n  }\n  /**\n   * Class to assemble files\n   * @beta\n   */\n  class AttachmentListHelper {\n    /** A string representing the MIME type of the file */\n    public fileType: string;\n    /** An array of {@link AssembleAttachment | AssembleAttachment} objects representing files to be sent as attachment */\n    public assembleAttachment: AssembleAttachment[];\n\n    public constructor(fileType: string, assembleAttachment: AssembleAttachment[]) {\n      this.fileType = fileType;\n      this.assembleAttachment = assembleAttachment;\n    }\n  }\n  let files: FilesFor3PStorage[] = [];\n  let helper: AttachmentListHelper | null = null;\n  let lastChunkVal = true; // setting it to true so that the very first file and first chunk does not fail\n\n  /**\n   * Object used to represent a file\n   * @beta\n   *\n   */\n  export interface FilesFor3PStorage extends Blob {\n    /**\n     * A number that represents the number of milliseconds since the Unix epoch\n     */\n    lastModified: number;\n    /**\n     * Name of the file\n     */\n    name: string;\n    /**\n     * file type\n     */\n    type: string;\n    /**\n     * A string containing the path of the file relative to the ancestor directory the user selected\n     */\n    webkitRelativePath?: string;\n  }\n\n  /**\n   * File chunks an output of getDragAndDropFiles API from platform\n   * @beta\n   */\n  export interface FileChunk {\n    /**\n     * Base 64 data for the requested uri\n     */\n    chunk: string;\n    /**\n     * chunk sequence number\n     */\n    chunkSequence: number;\n    /**\n     * Indicates whether this chunk is the final segment of a file\n     */\n    endOfFile: boolean;\n  }\n\n  /**\n   * Output of getDragAndDropFiles API from platform\n   * @beta\n   */\n  export interface FileResult {\n    /**\n     * Error encountered in getDragAndDropFiles API\n     */\n    error?: SdkError;\n    /**\n     * File chunk which will be assemebled and converted into a blob\n     */\n    fileChunk: FileChunk;\n    /**\n     * File index of the file for which chunk data is getting recieved\n     */\n    fileIndex: number;\n    /**\n     * File type/MIME type which is getting recieved\n     */\n    fileType: string;\n    /**\n     * Indicates whether this file is the last one in a sequence.\n     */\n    isLastFile: boolean;\n    /**\n     * The name of the file.\n     */\n    fileName: string;\n  }\n\n  /**\n   * Defines the callback function received from Third Party App\n   * @beta\n   */\n  export interface DragAndDropFileCallback {\n    /**\n     * Definition of the callback which is received from third party app when calling {@link thirdPartyCloudStorage.getDragAndDropFiles}\n     * An array of drag and dropped files {@link thirdPartyCloudStorage.FilesFor3PStorage}\n     * Error encountered during the API call {@link SdkError}\n     */\n    (files: FilesFor3PStorage[], error?: SdkError): void;\n  }\n\n  let callback: DragAndDropFileCallback | null = null;\n\n  /**\n   * Get drag-and-drop files using a callback.\n   *\n   * @param {string} dragAndDropInput - unique id which is a combination of replyToId + threadId of teams chat and channel.\n   *   Both replyToId and threadId can be fetched from application context.\n   * @param {DragAndDropFileCallback} dragAndDropFileCallback - callback\n   *   A callback function to handle the result of the operation\n   * @beta\n   */\n  export function getDragAndDropFiles(\n    dragAndDropInput: string,\n    dragAndDropFileCallback: DragAndDropFileCallback,\n  ): void {\n    if (!dragAndDropFileCallback) {\n      throw new Error('[getDragAndDropFiles] Callback cannot be null');\n    }\n    if (!dragAndDropInput || dragAndDropInput === '') {\n      const invalidInput: SdkError = { errorCode: ErrorCode.INVALID_ARGUMENTS };\n      dragAndDropFileCallback([], invalidInput);\n      return;\n    }\n\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n\n    if (callback) {\n      callback = null;\n      throw new Error('getDragAndDropFiles cannot be called twice');\n    } else {\n      callback = dragAndDropFileCallback;\n    }\n    lastChunkVal = true;\n\n    sendMessageToParent(\n      getApiVersionTag(\n        thirdPartyCloudStorageTelemetryVersionNumber,\n        ApiName.ThirdPartyCloudStorage_GetDragAndDropFiles,\n      ),\n      'thirdPartyCloudStorage.getDragAndDropFiles',\n      [dragAndDropInput],\n      handleGetDragAndDropFilesCallbackRequest,\n    );\n  }\n\n  function handleGetDragAndDropFilesCallbackRequest(fileResult: FileResult): void {\n    if (callback) {\n      if (fileResult && fileResult.error) {\n        callback([], fileResult.error);\n        callback = null;\n      } else {\n        if (fileResult && fileResult.fileChunk) {\n          try {\n            if (!lastChunkVal && fileResult.fileChunk.chunkSequence === 0) {\n              // last chunk value was false\n              Files3PLogger(\"Last chunk is not received or 'endOfFile' value for previous chunk was not set to true\");\n              lastChunkVal = true; // for next iteration\n\n              callback([], {\n                errorCode: ErrorCode.INTERNAL_ERROR,\n                message: 'error occurred while receiving data',\n              });\n              files = [];\n              callback = null;\n            }\n            const assemble: AssembleAttachment | null = decodeAttachment(fileResult.fileChunk, fileResult.fileType);\n            if (assemble) {\n              if (!helper) {\n                // creating helper object for received file chunk\n                helper = new AttachmentListHelper(fileResult.fileType, []);\n              }\n              helper.assembleAttachment.push(assemble);\n            } else {\n              Files3PLogger(\n                `Received a null assemble attachment for when decoding chunk sequence ${fileResult.fileChunk.chunkSequence}; not including the chunk in the assembled file.`,\n              );\n              callback\n                ? callback([], { errorCode: ErrorCode.INTERNAL_ERROR, message: 'error occurred while receiving data' })\n                : (callback = null);\n              files = [];\n              callback = null;\n              lastChunkVal = true;\n            }\n\n            // we will store this value to determine whether we received the last chunk of the previous file\n            lastChunkVal = fileResult.fileChunk.endOfFile;\n            if (fileResult.fileChunk.endOfFile && helper) {\n              const fileBlob = createFile(helper.assembleAttachment, helper.fileType);\n\n              if (fileBlob) {\n                // Convert blob to File\n                const receivedFile = new File([fileBlob], fileResult.fileName, {\n                  type: fileBlob.type,\n                });\n                files.push(receivedFile);\n              }\n\n              if (fileResult.isLastFile && callback) {\n                callback(files, fileResult.error);\n                files = [];\n                callback = null;\n                lastChunkVal = true;\n              }\n\n              helper = null;\n            }\n          } catch (e) {\n            if (callback) {\n              callback([], { errorCode: ErrorCode.INTERNAL_ERROR, message: e });\n              files = [];\n              callback = null;\n              lastChunkVal = true;\n            }\n          }\n        } else {\n          callback([], { errorCode: ErrorCode.INTERNAL_ERROR, message: 'data received is null' });\n          files = [];\n          callback = null;\n          lastChunkVal = true;\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks if the thirdPartyCloudStorage capability is supported by the host\n   * @returns boolean to represent whether the thirdPartyCloudStorage capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.thirdPartyCloudStorage ? true : false;\n  }\n}\n","import { sendMessageToParent } from '../internal/communication';\nimport { GlobalVars } from '../internal/globalVars';\nimport { registerHandlerHelper } from '../internal/handlers';\nimport { ensureInitializeCalled, ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { appInitializeHelper, openLinkHelper, registerOnThemeChangeHandlerHelper } from './app';\nimport { FrameContexts } from './constants';\nimport {\n  Context,\n  DeepLinkParameters,\n  FrameContext,\n  LoadContext,\n  TabInformation,\n  TabInstanceParameters,\n} from './interfaces';\nimport { getMruTabInstancesHelper, getTabInstancesHelper, setCurrentFrameHelper, shareDeepLinkHelper } from './pages';\nimport { pages } from './pages';\nimport { runtime } from './runtime';\nimport { teamsCore } from './teamsAPIs';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst publicAPIsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/** Type of callback used to indicate when {@link executeDeepLink} completes */\nexport type executeDeepLinkOnCompleteFunctionType = (status: boolean, reason?: string) => void;\n/** Callback function type */\nexport type callbackFunctionType = () => void;\n/** Get context callback function type */\nexport type getContextCallbackFunctionType = (context: Context) => void;\n/** Get tab instances callback function type */\nexport type getTabInstancesCallbackFunctionType = (tabInfo: TabInformation) => void;\n/** Register back button handler function type */\nexport type registerBackButtonHandlerFunctionType = () => boolean;\n/** Register full screen handler function type */\nexport type registerFullScreenHandlerFunctionType = (isFullScreen: boolean) => void;\n/** Register on theme change handler function type */\nexport type registerOnThemeChangeHandlerFunctionType = (theme: string) => void;\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link app.initialize app.initialize(validMessageOrigins?: string[]): Promise\\<void\\>} instead.\n *\n * Initializes the library. This must be called before any other SDK calls\n * but after the frame is loaded successfully.\n * @param callback - Optionally specify a callback to invoke when Teams SDK has successfully initialized\n * @param validMessageOrigins - Optionally specify a list of cross-frame message origins. This parameter is used if you know that your app\n * will be hosted on a custom domain (i.e., not a standard Microsoft 365 host like Teams, Outlook, etc.) Most apps will never need\n * to pass a value for this parameter.\n * Any domains passed in the array must have the https: protocol on the string otherwise they will be ignored. Example: https://www.example.com\n */\nexport function initialize(callback?: callbackFunctionType, validMessageOrigins?: string[]): void {\n  appInitializeHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_Initialize),\n    validMessageOrigins,\n  ).then(() => {\n    if (callback) {\n      callback();\n    }\n  });\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link teamsCore.enablePrintCapability teamsCore.enablePrintCapability(): void} instead.\n *\n * Enable print capability to support printing page using Ctrl+P and cmd+P\n */\nexport function enablePrintCapability(): void {\n  teamsCore.enablePrintCapability();\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link teamsCore.print teamsCore.print(): void} instead.\n *\n * Default print handler\n */\nexport function print(): void {\n  teamsCore.print();\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link app.getContext app.getContext(): Promise\\<app.Context\\>} instead.\n *\n * Retrieves the current context the frame is running in.\n *\n * @param callback - The callback to invoke when the {@link Context} object is retrieved.\n */\nexport function getContext(callback: getContextCallbackFunctionType): void {\n  ensureInitializeCalled();\n  sendMessageToParent(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_GetContext),\n    'getContext',\n    (context: Context) => {\n      if (!context.frameContext) {\n        // Fallback logic for frameContext properties\n        context.frameContext = GlobalVars.frameContext;\n      }\n      callback(context);\n    },\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link app.registerOnThemeChangeHandler app.registerOnThemeChangeHandler(handler: registerOnThemeChangeHandlerFunctionType): void} instead.\n *\n * Registers a handler for theme changes.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n *\n * @param handler - The handler to invoke when the user changes their theme.\n */\nexport function registerOnThemeChangeHandler(handler: registerOnThemeChangeHandlerFunctionType): void {\n  registerOnThemeChangeHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterOnThemeChangeHandlerHelper),\n    handler,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.registerFullScreenHandler pages.registerFullScreenHandler(handler: registerFullScreenHandlerFunctionType): void} instead.\n *\n * Registers a handler for changes from or to full-screen view for a tab.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n *\n * @param handler - The handler to invoke when the user toggles full-screen view for a tab.\n */\nexport function registerFullScreenHandler(handler: registerFullScreenHandlerFunctionType): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterFullScreenHandler),\n    'fullScreenChange',\n    handler,\n    [],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.appButton.onClick pages.appButton.onClick(handler: callbackFunctionType): void} instead.\n *\n * Registers a handler for clicking the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n *\n * @param handler - The handler to invoke when the personal app button is clicked in the app bar.\n */\nexport function registerAppButtonClickHandler(handler: callbackFunctionType): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterAppButtonClickHandler),\n    'appButtonClick',\n    handler,\n    [FrameContexts.content],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.appButton.onHoverEnter pages.appButton.onHoverEnter(handler: callbackFunctionType): void} instead.\n *\n * Registers a handler for entering hover of the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n *\n * @param handler - The handler to invoke when entering hover of the personal app button in the app bar.\n */\nexport function registerAppButtonHoverEnterHandler(handler: callbackFunctionType): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterAppButtonHoverEnterHandler),\n    'appButtonHoverEnter',\n    handler,\n    [FrameContexts.content],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.appButton.onHoverLeave pages.appButton.onHoverLeave(handler: callbackFunctionType): void} instead.\n *\n * Registers a handler for exiting hover of the app button.\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n * @param handler - The handler to invoke when exiting hover of the personal app button in the app bar.\n *\n */\nexport function registerAppButtonHoverLeaveHandler(handler: callbackFunctionType): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterAppButtonHoverLeaveHandler),\n    'appButtonHoverLeave',\n    handler,\n    [FrameContexts.content],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.backStack.registerBackButtonHandler pages.backStack.registerBackButtonHandler(handler: registerBackButtonHandlerFunctionType): void} instead.\n *\n * Registers a handler for user presses of the Team client's back button. Experiences that maintain an internal\n * navigation stack should use this handler to navigate the user back within their frame. If an app finds\n * that after running its back button handler it cannot handle the event it should call the navigateBack\n * method to ask the Teams client to handle it instead.\n *\n * @param handler - The handler to invoke when the user presses their Team client's back button.\n */\nexport function registerBackButtonHandler(handler: registerBackButtonHandlerFunctionType): void {\n  pages.backStack.registerBackButtonHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterBackButtonHandler),\n    handler,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link teamsCore.registerOnLoadHandler teamsCore.registerOnLoadHandler(handler: (context: LoadContext) => void): void} instead.\n *\n * @hidden\n * Registers a handler to be called when the page has been requested to load.\n *\n * @param handler - The handler to invoke when the page is loaded.\n */\nexport function registerOnLoadHandler(handler: (context: LoadContext) => void): void {\n  teamsCore.registerOnLoadHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterOnLoadHandler),\n    handler,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link teamsCore.registerBeforeUnloadHandler teamsCore.registerBeforeUnloadHandler(handler: (readyToUnload: callbackFunctionType) => boolean): void} instead.\n *\n * @hidden\n * Registers a handler to be called before the page is unloaded.\n *\n * @param handler - The handler to invoke before the page is unloaded. If this handler returns true the page should\n * invoke the readyToUnload function provided to it once it's ready to be unloaded.\n */\nexport function registerBeforeUnloadHandler(handler: (readyToUnload: callbackFunctionType) => boolean): void {\n  teamsCore.registerBeforeUnloadHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterBeforeUnloadHandler),\n    handler,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.registerFocusEnterHandler pages.registerFocusEnterHandler(handler: (navigateForward: boolean) => void): void} instead.\n *\n * @hidden\n * Registers a handler when focus needs to be passed from teams to the place of choice on app.\n *\n * @param handler - The handler to invoked by the app when they want the focus to be in the place of their choice.\n */\nexport function registerFocusEnterHandler(handler: (navigateForward: boolean) => boolean): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterFocusEnterHandler),\n    'focusEnter',\n    handler,\n    [],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.config.registerChangeConfigHandler pages.config.registerChangeConfigHandler(handler: callbackFunctionType): void} instead.\n *\n * Registers a handler for when the user reconfigurated tab.\n *\n * @param handler - The handler to invoke when the user click on Settings.\n */\nexport function registerChangeSettingsHandler(handler: callbackFunctionType): void {\n  registerHandlerHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_RegisterChangeSettingsHandler),\n    'changeSettings',\n    handler,\n    [FrameContexts.content],\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.tabs.getTabInstances pages.tabs.getTabInstances(tabInstanceParameters?: TabInstanceParameters): Promise\\<TabInformation\\>} instead.\n *\n * Allows an app to retrieve for this user tabs that are owned by this app.\n * If no TabInstanceParameters are passed, the app defaults to favorite teams and favorite channels.\n *\n * @param callback - The callback to invoke when the {@link TabInstanceParameters} object is retrieved.\n * @param tabInstanceParameters - OPTIONAL Flags that specify whether to scope call to favorite teams or channels.\n */\nexport function getTabInstances(\n  callback: getTabInstancesCallbackFunctionType,\n  tabInstanceParameters?: TabInstanceParameters,\n): void {\n  ensureInitialized(runtime);\n  getTabInstancesHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_GetTabInstances),\n    tabInstanceParameters,\n  ).then((tabInfo: TabInformation) => {\n    callback(tabInfo);\n  });\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.tabs.getMruTabInstances pages.tabs.getMruTabInstances(tabInstanceParameters?: TabInstanceParameters): Promise\\<TabInformation\\>} instead.\n *\n * Allows an app to retrieve the most recently used tabs for this user.\n *\n * @param callback - The callback to invoke when the {@link TabInformation} object is retrieved.\n * @param tabInstanceParameters - OPTIONAL Ignored, kept for future use\n */\nexport function getMruTabInstances(\n  callback: getTabInstancesCallbackFunctionType,\n  tabInstanceParameters?: TabInstanceParameters,\n): void {\n  ensureInitialized(runtime);\n  getMruTabInstancesHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_GetMruTabInstances),\n    tabInstanceParameters,\n  ).then((tabInfo: TabInformation) => {\n    callback(tabInfo);\n  });\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.shareDeepLink pages.shareDeepLink(deepLinkParameters: DeepLinkParameters): void} instead.\n *\n * Shares a deep link that a user can use to navigate back to a specific state in this page.\n *\n * @param deepLinkParameters - ID and label for the link and fallback URL.\n */\nexport function shareDeepLink(deepLinkParameters: DeepLinkParameters): void {\n  shareDeepLinkHelper(getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_ShareDeepLink), {\n    subPageId: deepLinkParameters.subEntityId,\n    subPageLabel: deepLinkParameters.subEntityLabel,\n    subPageWebUrl: deepLinkParameters.subEntityWebUrl,\n  });\n}\n\n/**\n * @deprecated\n * This function was previously used for opening various types of links. As of TeamsJS v2.0.0, it has been replaced with multiple different\n * functions depending on the type of link:\n *\n * - Use {@link pages.currentApp.navigateToDefaultPage} to navigate to the default page of your own app\n * - Use {@link pages.currentApp.navigateTo} to navigate to a section of your own app\n * - Use {@link pages.navigateToApp} to navigate to other apps besides your own\n * - Use {@link app.openLink} for opening deep links to other parts of the host (e.g., to chats or channels) or\n * general-purpose links (e.g., to external websites).\n *\n * @param deepLink deep link.\n */\nexport function executeDeepLink(deepLink: string, onComplete?: executeDeepLinkOnCompleteFunctionType): void {\n  ensureInitialized(\n    runtime,\n    FrameContexts.content,\n    FrameContexts.sidePanel,\n    FrameContexts.settings,\n    FrameContexts.task,\n    FrameContexts.stage,\n    FrameContexts.meetingStage,\n  );\n  const completionHandler: executeDeepLinkOnCompleteFunctionType = onComplete ?? getGenericOnCompleteHandler();\n  openLinkHelper(getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_ExecuteDeepLink), deepLink)\n    .then(() => {\n      completionHandler(true);\n    })\n    .catch((err: Error) => {\n      completionHandler(false, err.message);\n    });\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.setCurrentFrame pages.setCurrentFrame(frameInfo: FrameInfo): void} instead.\n *\n * Set the current Frame Context\n *\n * @param frameContext - FrameContext information to be set\n */\nexport function setFrameContext(frameContext: FrameContext): void {\n  setCurrentFrameHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_SetFrameContext),\n    frameContext,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.initializeWithFrameContext pages.initializeWithFrameContext(frameInfo: FrameInfo, callback?: callbackFunctionType, validMessageOrigins?: string[],): void} instead.\n *\n * Initialize with FrameContext\n *\n * @param frameContext - FrameContext information to be set\n * @param callback - The optional callback to be invoked be invoked after initilizing the frame context\n * @param validMessageOrigins -  Optionally specify a list of cross frame message origins.\n * They must have https: protocol otherwise they will be ignored. Example: https:www.example.com\n */\nexport function initializeWithFrameContext(\n  frameContext: FrameContext,\n  callback?: callbackFunctionType,\n  validMessageOrigins?: string[],\n): void {\n  appInitializeHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_InitializeWithFrameContext),\n    validMessageOrigins,\n  ).then(() => callback && callback());\n  setCurrentFrameHelper(\n    getApiVersionTag(publicAPIsTelemetryVersionNumber, ApiName.PublicAPIs_SetFrameContext),\n    frameContext,\n  );\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { FrameContexts } from './constants';\nimport { TabInstance } from './interfaces';\nimport {\n  backStackNavigateBackHelper,\n  navigateCrossDomainHelper,\n  returnFocusHelper,\n  tabsNavigateToTabHelper,\n} from './pages';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst navigationTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * Navigation specific part of the SDK.\n */\n\n/** Navigation on complete handler function type */\nexport type onCompleteHandlerFunctionType = (status: boolean, reason?: string) => void;\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.returnFocus pages.returnFocus(navigateForward?: boolean): void} instead.\n *\n * Return focus to the main Teams app. Will focus search bar if navigating foward and app bar if navigating back.\n *\n * @param navigateForward - Determines the direction to focus in teams app.\n */\nexport function returnFocus(navigateForward?: boolean): void {\n  returnFocusHelper(\n    getApiVersionTag(navigationTelemetryVersionNumber, ApiName.Navigation_ReturnFocus),\n    navigateForward,\n  );\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.tabs.navigateToTab pages.tabs.navigateToTab(tabInstance: TabInstance): Promise\\<void\\>} instead.\n *\n * Navigates the Microsoft Teams app to the specified tab instance.\n *\n * @param tabInstance - The tab instance to navigate to.\n * @param onComplete - The callback to invoke when the action is complete.\n */\nexport function navigateToTab(tabInstance: TabInstance, onComplete?: onCompleteHandlerFunctionType): void {\n  ensureInitialized(runtime);\n  const completionHandler: onCompleteHandlerFunctionType = onComplete ?? getGenericOnCompleteHandler();\n  tabsNavigateToTabHelper(\n    getApiVersionTag(navigationTelemetryVersionNumber, ApiName.Navigation_NavigateToTab),\n    tabInstance,\n  )\n    .then(() => {\n      completionHandler(true);\n    })\n    .catch((error: Error) => {\n      completionHandler(false, error.message);\n    });\n}\n\n/**\n * @deprecated\n * As of 2.0.0, this API is deprecated and can be replaced by the standard JavaScript\n * API, window.location.href, when navigating the app to a new cross-domain URL. Any URL\n * that is redirected to must be listed in the validDomains block of the manifest. Please\n * remove any calls to this API.\n * @param url - The URL to navigate the frame to.\n * @param onComplete - The callback to invoke when the action is complete.\n */\nexport function navigateCrossDomain(url: string, onComplete?: onCompleteHandlerFunctionType): void {\n  ensureInitialized(\n    runtime,\n    FrameContexts.content,\n    FrameContexts.sidePanel,\n    FrameContexts.settings,\n    FrameContexts.remove,\n    FrameContexts.task,\n    FrameContexts.stage,\n    FrameContexts.meetingStage,\n  );\n  const completionHandler: onCompleteHandlerFunctionType = onComplete ?? getGenericOnCompleteHandler();\n  navigateCrossDomainHelper(\n    getApiVersionTag(navigationTelemetryVersionNumber, ApiName.Navigation_NavigateCrossDomain),\n    url,\n  )\n    .then(() => {\n      completionHandler(true);\n    })\n    .catch((error: Error) => {\n      completionHandler(false, error.message);\n    });\n}\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.backStack.navigateBack pages.backStack.navigateBack(): Promise\\<void\\>} instead.\n *\n * Navigates back in the Teams client.\n * See registerBackButtonHandler for more information on when it's appropriate to use this method.\n *\n * @param onComplete - The callback to invoke when the action is complete.\n */\nexport function navigateBack(onComplete?: onCompleteHandlerFunctionType): void {\n  ensureInitialized(runtime);\n  const completionHandler: onCompleteHandlerFunctionType = onComplete ?? getGenericOnCompleteHandler();\n  backStackNavigateBackHelper(getApiVersionTag(navigationTelemetryVersionNumber, ApiName.Navigation_NavigateBack))\n    .then(() => {\n      completionHandler(true);\n    })\n    .catch((error: Error) => {\n      completionHandler(false, error.message);\n    });\n}\n","import { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { getGenericOnCompleteHandler } from '../internal/utils';\nimport { FrameContexts } from './constants';\nimport { configSetConfigHelper, configSetValidityStateHelper, getConfigHelper, pages } from './pages';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst settingsTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link pages.config} namespace instead.\n *\n * Namespace to interact with the settings-specific part of the SDK.\n * This object is usable only on the settings frame.\n */\nexport namespace settings {\n  /** Register on remove handler function type */\n  export type registerOnRemoveHandlerFunctionType = (evt: RemoveEvent) => void;\n  /** Register on save handler function type */\n  export type registerOnSaveHandlerFunctionType = (evt: SaveEvent) => void;\n  /** Set settings on complete function type */\n  export type setSettingsOnCompleteFunctionType = (status: boolean, reason?: string) => void;\n  /** Get settings callback function type */\n  export type getSettingsCallbackFunctionType = (instanceSettings: Settings) => void;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.Config} instead.\n   * @remarks\n   * Renamed to config in pages.Config\n   */\n  export import Settings = pages.InstanceConfig;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.SaveEvent} instead.\n   * @remarks\n   * See pages.SaveEvent\n   */\n  export import SaveEvent = pages.config.SaveEvent;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.RemoveEvent} instead.\n   * @remarks\n   * See pages.RemoveEvent\n   */\n  export import RemoveEvent = pages.config.RemoveEvent;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.SaveParameters} instead.\n   * @remarks\n   * See pages.SaveParameters\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  export import SaveParameters = pages.config.SaveParameters;\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.setValidityState pages.config.setValidityState(validityState: boolean): void} instead.\n   *\n   * Sets the validity state for the settings.\n   * The initial value is false, so the user cannot save the settings until this is called with true.\n   *\n   * @param validityState - Indicates whether the save or remove button is enabled for the user.\n   */\n  export function setValidityState(validityState: boolean): void {\n    configSetValidityStateHelper(\n      getApiVersionTag(settingsTelemetryVersionNumber, ApiName.Settings_SetValidityState),\n      validityState,\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.getConfig pages.getConfig(): Promise\\<InstanceConfig\\>} instead.\n   *\n   * Gets the settings for the current instance.\n   *\n   * @param callback - The callback to invoke when the {@link Settings} object is retrieved.\n   */\n  export function getSettings(callback: getSettingsCallbackFunctionType): void {\n    ensureInitialized(\n      runtime,\n      FrameContexts.content,\n      FrameContexts.settings,\n      FrameContexts.remove,\n      FrameContexts.sidePanel,\n    );\n    getConfigHelper(getApiVersionTag(settingsTelemetryVersionNumber, ApiName.Settings_GetSettings)).then(\n      (config: pages.InstanceConfig) => {\n        callback(config);\n      },\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.setConfig pages.config.setConfig(instanceSettings: Config): Promise\\<void\\>} instead.\n   *\n   * Sets the settings for the current instance.\n   * This is an asynchronous operation; calls to getSettings are not guaranteed to reflect the changed state.\n   *\n   * @param - Set the desired settings for this instance.\n   */\n  export function setSettings(instanceSettings: Settings, onComplete?: setSettingsOnCompleteFunctionType): void {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.settings, FrameContexts.sidePanel);\n    const completionHandler: setSettingsOnCompleteFunctionType = onComplete ?? getGenericOnCompleteHandler();\n    configSetConfigHelper(\n      getApiVersionTag(settingsTelemetryVersionNumber, ApiName.Settings_SetSettings),\n      instanceSettings,\n    )\n      .then(() => {\n        completionHandler(true);\n      })\n      .catch((error: Error) => {\n        completionHandler(false, error.message);\n      });\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.registerOnSaveHandler pages.config.registerOnSaveHandler(handler: registerOnSaveHandlerFunctionType): void} instead.\n   *\n   * Registers a handler for when the user attempts to save the settings. This handler should be used\n   * to create or update the underlying resource powering the content.\n   * The object passed to the handler must be used to notify whether to proceed with the save.\n   * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\n   *\n   * @param handler - The handler to invoke when the user selects the save button.\n   */\n  export function registerOnSaveHandler(handler: registerOnSaveHandlerFunctionType): void {\n    pages.config.registerOnSaveHandlerHelper(\n      getApiVersionTag(settingsTelemetryVersionNumber, ApiName.Settings_RegisterOnSaveHandler),\n      handler,\n    );\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link pages.config.registerOnRemoveHandler pages.config.registerOnRemoveHandler(handler: registerOnRemoveHandlerFunctionType): void} instead.\n   *\n   * Registers a handler for user attempts to remove content. This handler should be used\n   * to remove the underlying resource powering the content.\n   * The object passed to the handler must be used to indicate whether to proceed with the removal.\n   * Only one handler may be registered at a time. Subsequent registrations will override the first.\n   *\n   * @param handler - The handler to invoke when the user selects the remove button.\n   */\n  export function registerOnRemoveHandler(handler: registerOnRemoveHandlerFunctionType): void {\n    pages.config.registerOnRemoveHandlerHelper(\n      getApiVersionTag(settingsTelemetryVersionNumber, ApiName.Settings_RegisterOnRemoveHandler),\n      handler,\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\nimport { sendMessageToParent } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { ChildAppWindow, IAppWindow } from './appWindow';\nimport { FrameContexts, TaskModuleDimension } from './constants';\nimport { botUrlOpenHelper, updateResizeHelper, urlOpenHelper, urlSubmitHelper } from './dialog';\nimport { dialog } from './dialog';\nimport { BotUrlDialogInfo, DialogInfo, DialogSize, TaskInfo, UrlDialogInfo } from './interfaces';\nimport { runtime } from './runtime';\n\n/**\n * v1 APIs telemetry file: All of APIs in this capability file should send out API version v1 ONLY\n */\nconst tasksTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_1;\n\n/**\n * @deprecated\n * As of TeamsJS v2.0.0, please use {@link dialog} namespace instead.\n *\n * Namespace to interact with the task module-specific part of the SDK.\n * This object is usable only on the content frame.\n * The tasks namespace will be deprecated. Please use dialog for future developments.\n */\nexport namespace tasks {\n  /**\n   * Function type that is used to receive the result when a task module is submitted by\n   * calling {@link tasks.submitTask tasks.submitTask(result?: string | object, appIds?: string | string[]): void}\n   *\n   * @param err - If the task module failed, this string contains the reason for failure. If the task module succeeded, this value is the empty string.\n   * @param result - On success, this is the value passed to the `result` parameter of {@link tasks.submitTask tasks.submitTask(result?: string | object, appIds?: string | string[]): void}. On failure, this is the empty string.\n   */\n  export type startTaskSubmitHandlerFunctionType = (err: string, result: string | object) => void;\n\n  /**\n   * @deprecated\n   * As of 2.8.0:\n   * - For url-based dialogs, please use {@link dialog.url.open dialog.url.open(urlDialogInfo: UrlDialogInfo, submitHandler?: DialogSubmitHandler, messageFromChildHandler?: PostMessageChannel): void} .\n   * - For url-based dialogs with bot interaction, please use {@link dialog.url.bot.open dialog.url.bot.open(botUrlDialogInfo: BotUrlDialogInfo, submitHandler?: DialogSubmitHandler, messageFromChildHandler?: PostMessageChannel): void}\n   * - For Adaptive Card-based dialogs:\n   *   - In Teams, please continue to use this function until the new functions in {@link dialog.adaptiveCard} have been fully implemented. You can tell at runtime when they are implemented in Teams by checking\n   *     the return value of the {@link dialog.adaptiveCard.isSupported} function. This documentation line will also be removed once they have been fully implemented in Teams.\n   *   - In all other hosts, please use {@link dialog.adaptiveCard.open dialog.adaptiveCard.open(cardDialogInfo: CardDialogInfo, submitHandler?: DialogSubmitHandler, messageFromChildHandler?: PostMessageChannel): void}\n   *\n   * Allows an app to open the task module.\n   *\n   * @param taskInfo - An object containing the parameters of the task module\n   * @param submitHandler - Handler to call when the task module is completed\n   */\n  export function startTask(taskInfo: TaskInfo, submitHandler?: startTaskSubmitHandlerFunctionType): IAppWindow {\n    const apiVersionTag: string = getApiVersionTag(tasksTelemetryVersionNumber, ApiName.Tasks_StartTask);\n    const dialogSubmitHandler = submitHandler\n      ? (sdkResponse: dialog.ISdkResponse) => submitHandler(sdkResponse.err ?? '', sdkResponse.result ?? '')\n      : undefined;\n    if (taskInfo.card === undefined && taskInfo.url === undefined) {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n      sendMessageToParent(apiVersionTag, 'tasks.startTask', [taskInfo as DialogInfo], submitHandler);\n    } else if (taskInfo.card) {\n      ensureInitialized(runtime, FrameContexts.content, FrameContexts.sidePanel, FrameContexts.meetingStage);\n      sendMessageToParent(apiVersionTag, 'tasks.startTask', [taskInfo as DialogInfo], submitHandler);\n    } else if (taskInfo.completionBotId !== undefined) {\n      botUrlOpenHelper(apiVersionTag, getBotUrlDialogInfoFromTaskInfo(taskInfo), dialogSubmitHandler);\n    } else {\n      urlOpenHelper(apiVersionTag, getUrlDialogInfoFromTaskInfo(taskInfo), dialogSubmitHandler);\n    }\n    return new ChildAppWindow();\n  }\n\n  /**\n   * @deprecated\n   * As of TeamsJS v2.0.0, please use {@link dialog.update.resize dialog.update.resize(dimensions: DialogSize): void} instead.\n   *\n   * Update height/width task info properties.\n   *\n   * @param taskInfo - An object containing width and height properties\n   */\n  export function updateTask(taskInfo: TaskInfo): void {\n    taskInfo = getDefaultSizeIfNotProvided(taskInfo);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { width, height, ...extra } = taskInfo;\n\n    if (Object.keys(extra).length) {\n      throw new Error('resize requires a TaskInfo argument containing only width and height');\n    }\n    updateResizeHelper(getApiVersionTag(tasksTelemetryVersionNumber, ApiName.Tasks_UpdateTask), taskInfo as DialogSize);\n  }\n\n  /**\n   * @deprecated\n   * As of 2.8.0, please use {@link dialog.url.submit} instead.\n   *\n   * Submit the task module.\n   *\n   * @param result - Contains the result to be sent to the bot or the app. Typically a JSON object or a serialized version of it\n   * @param appIds - Valid application(s) that can receive the result of the submitted dialogs. Specifying this parameter helps prevent malicious apps from retrieving the dialog result. Multiple app IDs can be specified because a web app from a single underlying domain can power multiple apps across different environments and branding schemes.\n   */\n  export function submitTask(result?: string | object, appIds?: string | string[]): void {\n    urlSubmitHelper(getApiVersionTag(tasksTelemetryVersionNumber, ApiName.Tasks_SubmitTask), result, appIds);\n  }\n\n  /**\n   * Converts {@link TaskInfo} to {@link UrlDialogInfo}\n   * @param taskInfo - TaskInfo object to convert\n   * @returns - Converted UrlDialogInfo object\n   */\n  function getUrlDialogInfoFromTaskInfo(taskInfo: TaskInfo): UrlDialogInfo {\n    if (taskInfo.url === undefined) {\n      throw new Error(\"url property of taskInfo object can't be undefined\");\n    }\n\n    const urldialogInfo: UrlDialogInfo = {\n      url: taskInfo.url,\n      size: {\n        height: taskInfo.height ? taskInfo.height : TaskModuleDimension.Small,\n        width: taskInfo.width ? taskInfo.width : TaskModuleDimension.Small,\n      },\n      title: taskInfo.title,\n      fallbackUrl: taskInfo.fallbackUrl,\n    };\n    return urldialogInfo;\n  }\n\n  /**\n   * Converts {@link TaskInfo} to {@link BotUrlDialogInfo}\n   * @param taskInfo - TaskInfo object to convert\n   * @returns - converted BotUrlDialogInfo object\n   */\n  function getBotUrlDialogInfoFromTaskInfo(taskInfo: TaskInfo): BotUrlDialogInfo {\n    if (taskInfo.url === undefined || taskInfo.completionBotId === undefined) {\n      throw new Error(\n        `Both url ${taskInfo.url} and completionBotId ${taskInfo.completionBotId} are required for bot url dialog. At least one is undefined.`,\n      );\n    }\n\n    const botUrldialogInfo: BotUrlDialogInfo = {\n      url: taskInfo.url,\n      size: {\n        height: taskInfo.height ? taskInfo.height : TaskModuleDimension.Small,\n        width: taskInfo.width ? taskInfo.width : TaskModuleDimension.Small,\n      },\n      title: taskInfo.title,\n      fallbackUrl: taskInfo.fallbackUrl,\n      completionBotId: taskInfo.completionBotId,\n    };\n    return botUrldialogInfo;\n  }\n\n  /**\n   * Sets the height and width of the {@link TaskInfo} object to the original height and width, if initially specified,\n   * otherwise uses the height and width values corresponding to {@link DialogDimension | TaskModuleDimension.Small}\n   * @param taskInfo TaskInfo object from which to extract size info, if specified\n   * @returns TaskInfo with height and width specified\n   */\n  export function getDefaultSizeIfNotProvided(taskInfo: TaskInfo): TaskInfo {\n    taskInfo.height = taskInfo.height ? taskInfo.height : TaskModuleDimension.Small;\n    taskInfo.width = taskInfo.width ? taskInfo.width : TaskModuleDimension.Small;\n    return taskInfo;\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst interactiveTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * APIs involving Live Share, a framework for building real-time collaborative apps.\n * For more information, visit https://aka.ms/teamsliveshare\n *\n * @see LiveShareHost\n */\nexport namespace liveShare {\n  /**\n   * @hidden\n   * The meeting roles of a user.\n   * Used in Live Share for its role verification feature.\n   * For more information, visit https://learn.microsoft.com/microsoftteams/platform/apps-in-teams-meetings/teams-live-share-capabilities?tabs=javascript#role-verification-for-live-data-structures\n   */\n  export enum UserMeetingRole {\n    /**\n     * Guest role.\n     */\n    guest = 'Guest',\n    /**\n     * Attendee role.\n     */\n    attendee = 'Attendee',\n    /**\n     * Presenter role.\n     */\n    presenter = 'Presenter',\n    /**\n     * Organizer role.\n     */\n    organizer = 'Organizer',\n  }\n\n  /**\n   * @hidden\n   * State of the current Live Share session's Fluid container.\n   * This is used internally by the `LiveShareClient` when joining a Live Share session.\n   */\n  export enum ContainerState {\n    /**\n     * The call to `LiveShareHost.setContainerId()` successfully created the container mapping\n     * for the current Live Share session.\n     */\n    added = 'Added',\n\n    /**\n     * A container mapping for the current Live Share session already exists.\n     * This indicates to Live Share that a new container does not need be created.\n     */\n    alreadyExists = 'AlreadyExists',\n\n    /**\n     * The call to `LiveShareHost.setContainerId()` failed to create the container mapping.\n     * This happens when another client has already set the container ID for the session.\n     */\n    conflict = 'Conflict',\n\n    /**\n     * A container mapping for the current Live Share session does not yet exist.\n     * This indicates to Live Share that a new container should be created.\n     */\n    notFound = 'NotFound',\n  }\n\n  /**\n   * @hidden\n   * Returned from `LiveShareHost.getFluidContainerId()` and `LiveShareHost.setFluidContainerId`.\n   * This response specifies the container mapping information for the current Live Share session.\n   */\n  export interface IFluidContainerInfo {\n    /**\n     * State of the containerId mapping.\n     */\n    containerState: ContainerState;\n\n    /**\n     * ID of the container to join for the meeting. Undefined if the container hasn't been\n     * created yet.\n     */\n    containerId: string | undefined;\n\n    /**\n     * If true, the local client should create the container and then save the created containers\n     * ID to the mapping service.\n     */\n    shouldCreate: boolean;\n\n    /**\n     * If `containerId` is undefined and `shouldCreate` is false, the container isn't ready\n     * but another client is creating it. In this case, the local client should wait the specified\n     * amount of time before calling `LiveShareHost.getFluidContainerId()` again.\n     */\n    retryAfter: number;\n  }\n\n  /**\n   * @hidden\n   * Returned from `LiveShareHost.getNtpTime()` to specify the global timestamp for the current\n   * Live Share session.\n   */\n  export interface INtpTimeInfo {\n    /**\n     * ISO 8601 formatted server time. For example: '2019-09-07T15:50-04:00'\n     */\n    ntpTime: string;\n\n    /**\n     * Server time expressed as the number of milliseconds since the ECMAScript epoch.\n     */\n    ntpTimeInUTC: number;\n  }\n\n  /**\n   * @hidden\n   * Returned from `LiveShareHost.getFluidTenantInfo()` to specify the Fluid service to use for the\n   * current Live Share session.\n   */\n  export interface IFluidTenantInfo {\n    /**\n     * The Fluid Tenant ID Live Share should use.\n     */\n    tenantId: string;\n\n    /**\n     * The Fluid service endpoint Live Share should use.\n     */\n    serviceEndpoint: string;\n  }\n\n  /**\n   * @hidden\n   * Returned from `LiveShareHost.getClientInfo()` to specify the client info for a\n   * particular client in a Live Share session.\n   */\n  export interface IClientInfo {\n    /**\n     * The host user's `userId` associated with a given `clientId`\n     */\n    userId: string;\n    /**\n     * User's meeting roles associated with a given `clientId`\n     */\n    roles: UserMeetingRole[];\n    /**\n     * The user's display name associated with a given `clientId`.\n     * If this returns as `undefined`, the user may need to update their host client.\n     */\n    displayName?: string;\n  }\n\n  /**\n   * Checks if the interactive capability is supported by the host\n   * @returns boolean to represent whether the interactive capability is supported\n   *\n   * @throws Error if {@linkcode app.initialize} has not successfully completed\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime, FrameContexts.meetingStage, FrameContexts.sidePanel, FrameContexts.content) &&\n      runtime.supports.interactive\n      ? true\n      : false;\n  }\n}\n\n/**\n * Live Share host implementation for connecting to real-time collaborative sessions.\n * Designed for use with the `LiveShareClient` class in the `@microsoft/live-share` package.\n * Learn more at https://aka.ms/teamsliveshare\n *\n * @remarks\n * The `LiveShareClient` class from Live Share uses the hidden API's to join/manage the session.\n * To create a new `LiveShareHost` instance use the static `LiveShareHost.create()` function.\n */\nexport class LiveShareHost {\n  /**\n   * @hidden\n   * Returns the Fluid Tenant connection info for user's current context.\n   */\n  public getFluidTenantInfo(): Promise<liveShare.IFluidTenantInfo> {\n    ensureSupported();\n    return new Promise<liveShare.IFluidTenantInfo>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetFluidTenantInfo),\n          'interactive.getFluidTenantInfo',\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Returns the fluid access token for mapped container Id.\n   *\n   * @param containerId Fluid's container Id for the request. Undefined for new containers.\n   * @returns token for connecting to Fluid's session.\n   */\n  public getFluidToken(containerId?: string): Promise<string> {\n    ensureSupported();\n    return new Promise<string>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetFluidToken),\n          'interactive.getFluidToken',\n          // eslint-disable-next-line strict-null-checks/all\n          containerId,\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Returns the ID of the fluid container associated with the user's current context.\n   */\n  public getFluidContainerId(): Promise<liveShare.IFluidContainerInfo> {\n    ensureSupported();\n    return new Promise<liveShare.IFluidContainerInfo>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetFluidContainerId),\n          'interactive.getFluidContainerId',\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Sets the ID of the fluid container associated with the current context.\n   *\n   * @remarks\n   * If this returns false, the client should delete the container they created and then call\n   * `getFluidContainerId()` to get the ID of the container being used.\n   * @param containerId ID of the fluid container the client created.\n   * @returns A data structure with a `containerState` indicating the success or failure of the request.\n   */\n  public setFluidContainerId(containerId: string): Promise<liveShare.IFluidContainerInfo> {\n    ensureSupported();\n    return new Promise<liveShare.IFluidContainerInfo>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_SetFluidContainerId),\n          'interactive.setFluidContainerId',\n          containerId,\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Returns the shared clock server's current time.\n   */\n  public getNtpTime(): Promise<liveShare.INtpTimeInfo> {\n    ensureSupported();\n    return new Promise<liveShare.INtpTimeInfo>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetNtpTime),\n          'interactive.getNtpTime',\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Associates the fluid client ID with a set of user roles.\n   *\n   * @param clientId The ID for the current user's Fluid client. Changes on reconnects.\n   * @returns The roles for the current user.\n   */\n  public registerClientId(clientId: string): Promise<liveShare.UserMeetingRole[]> {\n    ensureSupported();\n    return new Promise<liveShare.UserMeetingRole[]>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_RegisterClientId),\n          'interactive.registerClientId',\n          clientId,\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Returns the roles associated with a client ID.\n   *\n   * @param clientId The Client ID the message was received from.\n   * @returns The roles for a given client. Returns `undefined` if the client ID hasn't been registered yet.\n   */\n  public getClientRoles(clientId: string): Promise<liveShare.UserMeetingRole[] | undefined> {\n    ensureSupported();\n    return new Promise<liveShare.UserMeetingRole[] | undefined>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetClientRoles),\n          'interactive.getClientRoles',\n          clientId,\n        ),\n      );\n    });\n  }\n\n  /**\n   * @hidden\n   * Returns the `IClientInfo` associated with a client ID.\n   *\n   * @param clientId The Client ID the message was received from.\n   * @returns The info for a given client. Returns `undefined` if the client ID hasn't been registered yet.\n   */\n  public getClientInfo(clientId: string): Promise<liveShare.IClientInfo | undefined> {\n    ensureSupported();\n    return new Promise<liveShare.IClientInfo | undefined>((resolve) => {\n      resolve(\n        sendAndHandleSdkError(\n          getApiVersionTag(interactiveTelemetryVersionNumber, ApiName.Interactive_GetClientInfo),\n          'interactive.getClientInfo',\n          clientId,\n        ),\n      );\n    });\n  }\n\n  /**\n   * Factories a new `LiveShareHost` instance for use with the `LiveShareClient` class\n   * in the `@microsoft/live-share` package.\n   *\n   * @remarks\n   * `app.initialize()` must first be called before using this API.\n   * This API can only be called from `meetingStage` or `sidePanel` contexts.\n   */\n  public static create(): LiveShareHost {\n    ensureSupported();\n\n    return new LiveShareHost();\n  }\n}\n\nfunction ensureSupported(): void {\n  if (!liveShare.isSupported()) {\n    throw new Error('LiveShareHost Not supported');\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { marketplace } from '../public/marketplace';\n\nfunction isValidUUID(uuid): boolean {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n}\n\n/**\n * @hidden\n * deserialize the cart data:\n * - convert url properties from string to URL\n * @param cartItems The cart items\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function deserializeCart(cartData: any): marketplace.Cart {\n  try {\n    cartData.cartItems = deserializeCartItems(cartData.cartItems);\n    return cartData as marketplace.Cart;\n  } catch (e) {\n    throw new Error('Error deserializing cart');\n  }\n}\n\n/**\n * @hidden\n * deserialize the cart items:\n * - convert url properties from string to URL\n * @param cartItems The cart items\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function deserializeCartItems(cartItemsData: any): marketplace.CartItem {\n  return cartItemsData.map((cartItem) => {\n    if (cartItem.imageURL) {\n      const url = new URL(cartItem.imageURL);\n      cartItem.imageURL = url;\n    }\n    if (cartItem.accessories) {\n      cartItem.accessories = deserializeCartItems(cartItem.accessories);\n    }\n    return cartItem;\n  }) as marketplace.CartItem;\n}\n\n/**\n * @hidden\n * serialize the cart items:\n * - make URL properties to string\n * @param cartItems The cart items\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport const serializeCartItems = (cartItems: marketplace.CartItem[]): any => {\n  try {\n    return cartItems.map((cartItem) => {\n      const { imageURL, accessories, ...rest } = cartItem;\n      const cartItemsData: any = { ...rest };\n      if (imageURL) {\n        cartItemsData.imageURL = imageURL.href;\n      }\n      if (accessories) {\n        cartItemsData.accessories = serializeCartItems(accessories);\n      }\n      return cartItemsData;\n    });\n  } catch (e) {\n    throw new Error('Error serializing cart items');\n  }\n};\n\n/**\n * @hidden\n * Validate the cart item properties are valid\n * @param cartItems The cart items\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateCartItems(cartItems: marketplace.CartItem[]): void {\n  if (!Array.isArray(cartItems) || cartItems.length === 0) {\n    throw new Error('cartItems must be a non-empty array');\n  }\n  for (const cartItem of cartItems) {\n    validateBasicCartItem(cartItem);\n    validateAccessoryItems(cartItem.accessories);\n  }\n}\n\n/**\n * @hidden\n * Validate accessories\n * @param accessoryItems The accessories to be validated\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateAccessoryItems(accessoryItems: marketplace.Item[] | undefined | null): void {\n  if (accessoryItems === null || accessoryItems === undefined) {\n    return;\n  }\n  if (!Array.isArray(accessoryItems) || accessoryItems.length === 0) {\n    throw new Error('CartItem.accessories must be a non-empty array');\n  }\n  for (const accessoryItem of accessoryItems) {\n    if (accessoryItem['accessories']) {\n      throw new Error('Item in CartItem.accessories cannot have accessories');\n    }\n    validateBasicCartItem(accessoryItem);\n  }\n}\n\n/**\n * @hidden\n * Validate the basic cart item properties are valid\n * @param basicCartItem The basic cart item\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateBasicCartItem(basicCartItem: marketplace.Item): void {\n  if (!basicCartItem.id) {\n    throw new Error('cartItem.id must not be empty');\n  }\n  if (!basicCartItem.name) {\n    throw new Error('cartItem.name must not be empty');\n  }\n  validatePrice(basicCartItem.price);\n  validateQuantity(basicCartItem.quantity);\n}\n\n/**\n * @hidden\n * Validate the id is valid\n * @param id A uuid string\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateUuid(id: string | undefined | null): void {\n  if (id === undefined || id === null) {\n    return;\n  }\n  if (!id) {\n    throw new Error('id must not be empty');\n  }\n  if (isValidUUID(id) === false) {\n    throw new Error('id must be a valid UUID');\n  }\n}\n\n/**\n * @hidden\n * Validate the cart item properties are valid\n * @param price The price to be validated\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validatePrice(price: number): void {\n  if (typeof price !== 'number' || price < 0) {\n    throw new Error(`price ${price} must be a number not less than 0`);\n  }\n  if (parseFloat(price.toFixed(3)) !== price) {\n    throw new Error(`price ${price} must have at most 3 decimal places`);\n  }\n}\n\n/**\n * @hidden\n * Validate quantity\n * @param quantity The quantity to be validated\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateQuantity(quantity: number): void {\n  if (typeof quantity !== 'number' || quantity <= 0 || parseInt(quantity.toString()) !== quantity) {\n    throw new Error(`quantity ${quantity} must be an integer greater than 0`);\n  }\n}\n\n/**\n * @hidden\n * Validate cart status\n * @param cartStatus The cartStatus to be validated\n *\n * @internal\n * Limited to Microsoft-internal use\n */\nexport function validateCartStatus(cartStatus: marketplace.CartStatus): void {\n  if (!Object.values(marketplace.CartStatus).includes(cartStatus)) {\n    throw new Error(`cartStatus ${cartStatus} is not valid`);\n  }\n}\n","import { sendAndHandleSdkError } from '../internal/communication';\nimport { ensureInitialized } from '../internal/internalAPIs';\nimport {\n  deserializeCart,\n  serializeCartItems,\n  validateCartItems,\n  validateCartStatus,\n  validateUuid,\n} from '../internal/marketplaceUtils';\nimport { ApiName, ApiVersionNumber, getApiVersionTag } from '../internal/telemetry';\nimport { errorNotSupportedOnPlatform, FrameContexts } from './constants';\nimport { runtime } from './runtime';\n\n/**\n * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY\n */\nconst marketplaceTelemetryVersionNumber: ApiVersionNumber = ApiVersionNumber.V_2;\n\n/**\n * @hidden\n * Namespace for an app to support a checkout flow by interacting with the marketplace cart in the host.\n * @beta\n */\nexport namespace marketplace {\n  /**\n   * @hidden\n   * the version of the current cart interface\n   * which is forced to send to the host in the calls.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @beta\n   */\n  export const cartVersion: CartVersion = {\n    /**\n     * @hidden\n     * Represents the major version of the current cart interface,\n     * it is increased when incompatible interface update happens.\n     */\n    majorVersion: 1,\n    /**\n     * @hidden\n     * The minor version of the current cart interface, which is compatible\n     * with the previous minor version in the same major version.\n     */\n    minorVersion: 1,\n  };\n\n  /**\n   * @hidden\n   * Represents the cart object for the app checkout flow.\n   * @beta\n   */\n  export interface Cart {\n    /**\n     * @hidden\n     * Version of the cart.\n     */\n    readonly version: CartVersion;\n    /**\n     * @hidden\n     * The uuid of the cart.\n     */\n    readonly id: string;\n    /**\n     * @hidden\n     * The cart info.\n     */\n    readonly cartInfo: CartInfo;\n    /**\n     * @hidden\n     * The cart items.\n     */\n    readonly cartItems: CartItem[];\n  }\n\n  /**\n   * @hidden\n   * Version of the cart that is used by the app.\n   * @internal\n   * Limited to Microsoft-internal use\n   * @beta\n   */\n  interface CartVersion {\n    /**\n     * @hidden\n     * Represents the major version of a cart, it\n     * not compatible with the previous major version.\n     */\n    readonly majorVersion: number;\n    /**\n     * @hidden\n     * The minor version of a cart, which is compatible\n     * with the previous minor version in the same major version.\n     */\n    readonly minorVersion: number;\n  }\n\n  /**\n   * @hidden\n   * Represents the cart information\n   * @beta\n   */\n  interface CartInfo {\n    /**\n     * @hidden\n     * The country market where the products are selling.\n     * Should be country code in ISO 3166-1 alpha-2 format, e.g. CA for Canada.\n     * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n     */\n    readonly market: string;\n    /**\n     * @hidden\n     * The identifier to tell the cart is checked out by admin or end user.\n     */\n    readonly intent: Intent;\n    /**\n     * @hidden\n     * Locale the app should render for the user\n     * Should be a BCP 47 language tag, e.g. en-US ([primary tag]-[ISO 3166-1 alpha-2 code]).\n     * https://en.wikipedia.org/wiki/IETF_language_tag\n     */\n    readonly locale: string;\n    /**\n     * @hidden\n     * The status of the cart.\n     */\n    readonly status: CartStatus;\n    /**\n     * @hidden\n     * ISO 4217 currency code for the cart item price, e.g. USD for US Dollar.\n     * https://en.wikipedia.org/wiki/ISO_4217\n     */\n    readonly currency: string;\n    /**\n     * @hidden\n     * ISO 8601 timestamp string in UTC, indicates when the cart is created.\n     * e.g. 2023-06-19T22:06:59Z\n     * https://en.wikipedia.org/wiki/ISO_8601\n     */\n    readonly createdAt: string;\n    /**\n     * @hidden\n     * ISO 8601 timestamp string in UTC, indicates when the cart is updated.\n     * e.g. 2023-06-19T22:06:59Z\n     * https://en.wikipedia.org/wiki/ISO_8601\n     */\n    readonly updatedAt: string;\n  }\n\n  /**\n   * @hidden\n   * Represents the basic cart item information.\n   * @beta\n   */\n  export interface Item {\n    /**\n     * @hidden\n     * The id of the cart item.\n     */\n    readonly id: string;\n    /**\n     * @hidden\n     * The display name of the cart item.\n     */\n    readonly name: string;\n    /**\n     * @hidden\n     * The quantity of the cart item.\n     */\n    readonly quantity: number;\n    /**\n     * @hidden\n     * The price of the single cart item.\n     */\n    readonly price: number;\n    /**\n     * @hidden\n     * The thumbnail imageURL of the cart item.\n     */\n    readonly imageURL?: URL;\n  }\n\n  /**\n   * @hidden\n   * Represents the cart item that could have accessories\n   * @beta\n   */\n  export interface CartItem extends Item {\n    /**\n     * @hidden\n     * Accessories to the item if existing.\n     */\n    readonly accessories?: Item[];\n    /**\n     * @hidden\n     * The thumbnail imageURL of the cart item.\n     */\n    readonly imageURL?: URL;\n  }\n\n  /**\n   * @hidden\n   * Represents the persona creating the cart.\n   * @beta\n   */\n  export enum Intent {\n    /**\n     * @hidden\n     * The cart is created by admin of an organization in Teams Admin Center.\n     */\n    TACAdminUser = 'TACAdminUser',\n    /**\n     * @hidden\n     * The cart is created by admin of an organization in Teams.\n     */\n    TeamsAdminUser = 'TeamsAdminUser',\n    /**\n     * @hidden\n     * The cart is created by end user of an organization in Teams.\n     */\n    TeamsEndUser = 'TeamsEndUser',\n  }\n\n  /**\n   * @hidden\n   * Represents the status of the cart.\n   * @beta\n   */\n  export enum CartStatus {\n    /**\n     * @hidden\n     * Cart is created but not checked out yet.\n     */\n    Open = 'Open',\n    /**\n     * @hidden\n     * Cart is checked out but not completed yet.\n     */\n    Processing = 'Processing',\n    /**\n     * @hidden\n     * Indicate checking out is completed and the host should\n     * return a new cart in the next getCart call.\n     */\n    Processed = 'Processed',\n    /**\n     * @hidden\n     * Indicate checking out process is manually cancelled by the user\n     */\n    Closed = 'Closed',\n    /**\n     * @hidden\n     * Indicate checking out is failed and the host should\n     * return a new cart in the next getCart call.\n     */\n    Error = 'Error',\n  }\n  /**\n   * @hidden\n   * Represents the parameters to update the cart items.\n   * @beta\n   */\n  export interface AddOrUpdateCartItemsParams {\n    /**\n     * @hidden\n     * The uuid of the cart to be updated, target on the cart\n     * being checked out  if cartId is not provided.\n     */\n    cartId?: string;\n    /**\n     * @hidden\n     * A list of cart items object, for each item,\n     * if item id exists in the cart, overwrite the item price and quantity,\n     * otherwise add new items to cart.\n     */\n    cartItems: CartItem[];\n  }\n  /**\n   * @hidden\n   * Represents the parameters to remove the cart items.\n   * @beta\n   */\n  export interface RemoveCartItemsParams {\n    /**\n     * @hidden\n     * The uuid of the cart to be updated, target on the cart\n     * being checked out if cartId is not provided.\n     */\n    cartId?: string;\n    /**\n     * @hidden\n     * A list of cart id, delete the cart item accordingly.\n     */\n    cartItemIds: string[];\n  }\n  /**\n   * @hidden\n   * Represents the parameters to update the cart status.\n   * @beta\n   */\n  export interface UpdateCartStatusParams {\n    /**\n     * @hidden\n     * The uuid of the cart to be updated, target on the cart\n     * being checked out if cartId is not provided.\n     */\n    cartId?: string;\n    /**\n     * @hidden\n     * Status of the cart.\n     */\n    cartStatus: CartStatus;\n    /**\n     * @hidden\n     * Extra info to the status.\n     */\n    statusInfo?: string;\n  }\n\n  /**\n   * @hidden\n   * Get the cart object owned by the host to checkout.\n   * @returns A promise of the cart object in the cartVersion.\n   * @beta\n   */\n  export function getCart(): Promise<Cart> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    return sendAndHandleSdkError(\n      getApiVersionTag(marketplaceTelemetryVersionNumber, ApiName.Marketplace_GetCart),\n      'marketplace.getCart',\n      cartVersion,\n    ).then(deserializeCart);\n  }\n  /**\n   * @hidden\n   * Add or update cart items in the cart owned by the host.\n   * @param addOrUpdateCartItemsParams Represents the parameters to update the cart items.\n   * @returns A promise of the updated cart object in the cartVersion.\n   * @beta\n   */\n  export function addOrUpdateCartItems(addOrUpdateCartItemsParams: AddOrUpdateCartItemsParams): Promise<Cart> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!addOrUpdateCartItemsParams) {\n      throw new Error('addOrUpdateCartItemsParams must be provided');\n    }\n    validateUuid(addOrUpdateCartItemsParams?.cartId);\n    validateCartItems(addOrUpdateCartItemsParams?.cartItems);\n    return sendAndHandleSdkError(\n      getApiVersionTag(marketplaceTelemetryVersionNumber, ApiName.Marketplace_AddOrUpdateCartItems),\n      'marketplace.addOrUpdateCartItems',\n      {\n        ...addOrUpdateCartItemsParams,\n        cartItems: serializeCartItems(addOrUpdateCartItemsParams.cartItems),\n        cartVersion,\n      },\n    ).then(deserializeCart);\n  }\n\n  /**\n   * @hidden\n   * Remove cart items from the cart owned by the host.\n   * @param removeCartItemsParams The parameters to remove the cart items.\n   * @returns A promise of the updated cart object in the cartVersion.\n   * @beta\n   */\n  export function removeCartItems(removeCartItemsParams: RemoveCartItemsParams): Promise<Cart> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!removeCartItemsParams) {\n      throw new Error('removeCartItemsParams must be provided');\n    }\n    validateUuid(removeCartItemsParams?.cartId);\n    if (!Array.isArray(removeCartItemsParams?.cartItemIds) || removeCartItemsParams?.cartItemIds.length === 0) {\n      throw new Error('cartItemIds must be a non-empty array');\n    }\n    return sendAndHandleSdkError(\n      getApiVersionTag(marketplaceTelemetryVersionNumber, ApiName.Marketplace_RemoveCardItems),\n      'marketplace.removeCartItems',\n      {\n        ...removeCartItemsParams,\n        cartVersion,\n      },\n    ).then(deserializeCart);\n  }\n  /**\n   * @hidden\n   * Update cart status in the cart owned by the host.\n   * @param updateCartStatusParams The parameters to update the cart status.\n   * @returns A promise of the updated cart object in the cartVersion.\n   * @beta\n   */\n  export function updateCartStatus(updateCartStatusParams: UpdateCartStatusParams): Promise<Cart> {\n    ensureInitialized(runtime, FrameContexts.content, FrameContexts.task);\n    if (!isSupported()) {\n      throw errorNotSupportedOnPlatform;\n    }\n    if (!updateCartStatusParams) {\n      throw new Error('updateCartStatusParams must be provided');\n    }\n    validateUuid(updateCartStatusParams?.cartId);\n    validateCartStatus(updateCartStatusParams?.cartStatus);\n    return sendAndHandleSdkError(\n      getApiVersionTag(marketplaceTelemetryVersionNumber, ApiName.Marketplace_UpdateCartStatus),\n      'marketplace.updateCartStatus',\n      {\n        ...updateCartStatusParams,\n        cartVersion,\n      },\n    ).then(deserializeCart);\n  }\n  /**\n   * @hidden\n   * Checks if the marketplace capability is supported by the host.\n   * @returns Boolean to represent whether the marketplace capability is supported.\n   * @throws Error if {@linkcode app.initialize} has not successfully completed.\n   * @beta\n   */\n  export function isSupported(): boolean {\n    return ensureInitialized(runtime) && runtime.supports.marketplace ? true : false;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","tripletToBase64","num","start","end","output","base64","ieee754","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","fromArrayBuffer","valueOf","b","fromObject","Symbol","toPrimitive","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","array","byteOffset","obj","isBuffer","copy","numberIsNaN","type","isArray","data","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","foo","e","typedArraySupport","console","error","Object","defineProperty","enumerable","get","species","configurable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","constructor","name","formatArgs","args","useColors","namespace","humanize","diff","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","v","JSON","stringify","message","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Date","ms","prev","coerce","unshift","format","formatter","selectColor","extend","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","names","map","skips","enable","RegExp","test","keys","forEach","key","hash","abs","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","floor","LN2","h","w","parse","exec","parseFloat","fmtShort","msAbs","round","fmtLong","plural","isPlural","options","long","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","t","mode","__esModule","then","ns","create","def","current","getOwnPropertyNames","definition","o","prop","hasOwnProperty","toStringTag","FileOpenPreference","ActionObjectType","SecondaryM365ContentIdName","ErrorCode","DevicePermission","Cohort","Persona","LegalAgeGroupClassification","EduType","ClipboardSupportedMimeType","HostClientType","HostName","FrameContexts","TeamType","UserTeamRole","DialogDimension","isSdkError","err","errorCode","ChannelType","TaskModuleDimension","errorNotSupportedOnPlatform","NOT_SUPPORTED_ON_PLATFORM","minAdaptiveCardVersion","teamsMinAdaptiveCardVersion","adaptiveCardSchemaVersion","majorVersion","minorVersion","errorInvalidCount","errorInvalidResponse","generateUUID","hexDigits","uuid","random","isValidUUID","getGenericOnCompleteHandler","errorMessage","success","reason","compareSDKVersions","v1","v2","v1parts","v2parts","isValidPart","every","generateGUID","freeze","callCallbackWithErrorOrResultFromPromiseAndReturnPromise","funcHelper","callback","p","result","catch","callCallbackWithSdkErrorFromPromiseAndReturnPromise","callCallbackWithErrorOrResultOrNullFromPromiseAndReturnPromise","runWithTimeout","action","timeoutInMs","timeoutError","Promise","resolve","reject","timeoutHandle","setTimeout","clearTimeout","createTeamsAppLink","params","url","URL","encodeURIComponent","appId","pageId","webUrl","searchParams","append","chatId","channelId","subPageId","subEntityId","isHostAdaptiveCardSchemaVersionUnsupported","hostAdaptiveCardSchemaVersion","isValidHttpsURL","protocol","base64ToBlob","mimeType","base64String","startsWith","byteCharacters","atob","Blob","getBase64StringFromBlob","blob","reader","FileReader","onloadend","onerror","readAsDataURL","ssrSafeWindow","inServerSideRenderingEnvironment","validateId","id","errorToThrow","hasScriptTags","isIdLengthValid","isOpaque","validateUrl","urlString","toLocaleLowerCase","fullyQualifyUrlString","fullOrRelativePath","link","createElement","href","input","source","charCode","validateUuid","UUID","teamsJsInstanceIdentifier","originalFormatArgsFunction","toISOString","topLevelLogger","getLogger","getApiVersionTag","apiVersionNumber","functionName","isFollowingApiVersionTagFormat","apiVersionTag","defaultSDKVersionForCompatCheck","nonFullScreenVideoModeAPISupportVersion","locationAPIsRequiredVersion","mediaAPISupportVersion","validOriginsFallback","validOrigins","validOriginsCdnEndpoint","userOriginUrlValidationRegExp","teamsDeepLinkProtocol","teamsDeepLinkHost","errorLibraryNotInitialized","errorRuntimeNotInitialized","errorRuntimeNotSupported","GlobalVars","initializeCalled","initializeCompleted","additionalValidOrigins","initializePromise","isFramelessWindow","frameContext","hostClientType","printCapabilityEnabled","runtimeLogger","latestRuntimeApiVersion","isLatestRuntimeVersion","runtime","apiVersion","_uninitializedRuntime","supports","isRuntimeInitialized","versionAndPlatformAgnosticTeamsRuntimeConfig","isNAAChannelRecommended","hostVersionsInfo","isLegacyTeams","appInstallDialog","appEntity","chat","conversations","dialog","card","bot","parentCommunication","update","interactive","logs","meetingRoom","menus","monetization","notifications","pages","config","backStack","fullTrust","remoteCamera","teams","teamsCore","video","sharedFrame","v1NonMobileHostClientTypes","desktop","web","rigel","surfaceHub","teamsRoomsWindows","teamsRoomsAndroid","teamsPhones","teamsDisplays","v1MobileHostClientTypes","android","ios","ipados","v1HostClientTypes","fastForwardRuntime","outdatedRuntime","upgradeChain","upgrade","versionToUpgradeFrom","upgradeToNextVersion","previousVersionRuntime","appNotification","_","newSupports","mapTeamsVersionToSupportedCapabilities","capability","appButton","tabs","stageView","hostClientTypes","location","people","sharing","joinedTeams","webStorage","generateBackCompatRuntimeConfigLogger","mergeRuntimeCapabilities","baselineRuntime","runtimeToMergeIntoBaseline","merged","generateVersionBasedTeamsRuntimeConfig","highestSupportedVersion","versionAgnosticRuntimeConfig","mapVersionToSupportedCapabilities","versionNumber","capabilityReqs","teamsBackCompatRuntimeConfig","applyRuntimeConfigLogger","applyRuntimeConfig","runtimeConfig","ffRuntimeConfig","version","internalLogger","ensureInitializeCalledLogger","ensureInitializedLogger","ensureInitializeCalled","ensureInitialized","expectedFrameContexts","isCurrentSDKVersionAtLeast","requiredVersion","clientSupportedSDKVersion","isHostClientMobile","throwExceptionIfMobileApiIsNotSupported","OLD_PLATFORM","processAdditionalValidOrigins","validMessageOrigins","combinedOriginUrls","filter","_origin","dedupUrls","_originUrl","isNullOrUndefined","validOriginsCache","validateOriginLogger","prefetchOriginsFromCDN","getValidOriginsListFromCDN","isValidOriginsCacheEmpty","fetch","response","ok","json","validOriginsCDN","isValidOriginsJSONValid","validOriginsJSON","validOrigin","validateHostAgainstPattern","pattern","host","suffix","validateOrigin","messageOrigin","validOriginsList","messageOriginHost","some","domainOrPattern","validateStringAsAppId","potentialAppId","isStringWithinAppIdLengthLimits","minimumValidAppIdLength","maximumValidAppIdLength","doesStringContainNonPrintableCharacters","char","AppId","appIdAsString","messageChannels","telemetry","dataLayer","telemetryPort","logger","isSupported","getTelemetryPort","requestPortFromParentWithVersion","_clearTelemetryPort","dataLayerPort","getDataLayerPort","_clearDataLayerPort","authenticationTelemetryVersionNumber_v1","authenticationTelemetryVersionNumber_v2","authentication","authHandlers","authWindowMonitor","authParams","DataResidency","authenticateHelper","authenticateParameters","fullyQualifiedURL","sendMessageToParentAsync","width","height","isExternal","fail","openAuthenticationWindow","getAuthTokenHelper","authTokenRequest","resources","claims","silent","tenantId","getUserHelper","closeAuthenticationWindow","stopAuthenticationWindowMonitor","Communication","childWindow","close","childOrigin","currentWindow","outerWidth","outerHeight","left","screenLeft","screenX","top","screenTop","screenY","open","startAuthenticationWindowMonitor","handleFailure","clearInterval","removeHandler","setInterval","closed","savedChildOrigin","sendMessageEventToChild","registerHandler","handleSuccess","initialize","registerAuthenticationHandlers","authenticate","isDifferentParamsInCall","authenticateParams","content","sidePanel","settings","remove","task","stage","meetingStage","successCallback","failureCallback","getAuthToken","getUser","userRequest","notifySuccess","_callbackUrl","sendMessageToParent","waitForMessageQueue","parentWindow","notifyFailure","dialogTelemetryVersionNumber","updateResizeHelper","dimensions","urlOpenHelper","urlDialogInfo","submitHandler","messageFromChildHandler","getDialogInfoFromUrlDialogInfo","botUrlOpenHelper","getDialogInfoFromBotUrlDialogInfo","urlSubmitHelper","appIds","storedMessages","handleDialogMessage","adaptiveCard","Small","title","fallbackUrl","submit","sendMessageToParentFromDialog","sendMessageToDialog","registerOnMessageFromParent","listener","reverse","pop","botUrlDialogInfo","dialogInfo","completionBotId","resize","isAdaptiveCardVersionSupported","getDialogInfoFromAdaptiveCardDialogInfo","adaptiveCardDialogInfo","getDialogInfoFromBotAdaptiveCardDialogInfo","botAdaptiveCardDialogInfo","menuTelemetryVersionNumber","DisplayMode","MenuListType","navBarMenuItemPressHandler","actionMenuItemPressHandler","viewConfigItemPressHandler","handleViewConfigItemPress","handleNavBarMenuItemPress","handleActionMenuItemPress","MenuItem","selected","setUpViews","viewConfig","handler","setNavBarMenu","items","showActionMenu","appTelemetryVersionNumber","initializationTimeoutInMs","appLogger","appInitializeHelper","initializeLogger","initializeHelper","notifyAppLoadedHelper","app","Messages","AppLoaded","notifyExpectedFailureHelper","expectedFailureRequest","ExpectedFailure","notifyFailureHelper","apiVersiontag","appInitializationFailedRequest","Failure","notifySuccessHelper","Success","initializeHelperLogger","initializeCommunication","context","clientType","givenRuntimeConfig","SyntaxError","registerOnThemeChangeHandlerHelper","openLinkHelper","deepLink","sendAndHandleStatusAndReason","transformLegacyContextToAppContext","legacyContext","actionInfo","locale","sessionId","appSessionId","theme","iconPositionVertical","appIconPosition","osLocaleInfo","parentMessageId","userClickTime","userFileOpenPreference","hostName","ringId","appLaunchId","page","entityId","isFullScreen","isMultiWindow","isBackgroundLoad","sourceOrigin","user","userObjectId","displayName","userDisplayName","isCallingAllowed","isPSTNCallingAllowed","licenseType","userLicenseType","loginHint","userPrincipalName","tenant","tid","teamsSku","tenantSKU","channel","channelName","relativeUrl","channelRelativeUrl","membershipType","channelType","defaultOneNoteSectionId","ownerGroupId","hostTeamGroupId","ownerTenantId","hostTeamTenantId","meeting","meetingId","sharepoint","team","teamId","internalId","teamName","teamType","groupId","templateId","teamTemplateId","isArchived","isTeamArchived","userRole","userTeamRole","sharePointSite","teamSiteUrl","teamSiteDomain","teamSitePath","mySitePath","mySiteDomain","teamSiteId","dialogParameters","FailedReason","ExpectedFailureReason","lifecycle","isInitialized","getFrameContext","scripts","getElementsByTagName","currentScriptSrc","scriptUsageWarning","logWhereTeamsJsIsBeingUsed","_initialize","hostWindow","_uninitialize","uninitializeCommunication","getContext","sendAndUnwrap","notifyAppLoaded","notifyExpectedFailure","registerOnThemeChangeHandler","openLink","registerBeforeSuspendOrTerminateHandler","registerOnResumeHandler","pagesTelemetryVersionNumber","navigateCrossDomainHelper","sendAndHandleStatusAndReasonWithDefaultError","backStackNavigateBackHelper","tabsNavigateToTabHelper","tabInstance","returnFocusHelper","navigateForward","getTabInstancesHelper","tabInstanceParameters","getMruTabInstancesHelper","shareDeepLinkHelper","deepLinkParameters","subPageLabel","subPageWebUrl","setCurrentFrameHelper","frameInfo","configSetValidityStateHelper","validityState","getConfigHelper","configSetConfigHelper","instanceConfig","isAppNavigationParametersObject","convertNavigateToAppParamsToAppNavigationParameters","convertAppNavigationParametersToNavigateToAppParams","EnterFocusType","ReturnFocusType","currentApp","setCurrentFrame","returnFocus","arg1","PreviousLandmark","GoToActivityFeed","NextLandmark","registerFocusEnterHandler","registerHandlerHelper","initializeWithFrameContext","getConfig","navigateCrossDomain","navigateToApp","shareDeepLink","registerFullScreenHandler","navigateToTab","getTabInstances","getMruTabInstances","saveHandler","registerOnSaveHandlerHelper","versionSpecificHelper","registerOnRemoveHandlerHelper","handleSave","saveEventType","SaveEventImpl","handleRemove","setValidityState","setConfig","registerOnSaveHandler","registerOnRemoveHandler","registerChangeConfigHandler","notified","ensureNotNotified","removeEventType","RemoveEventImpl","backButtonPressHandler","navigateBack","registerBackButtonHandlerHelper","handleBackButtonPress","registerBackButtonHandler","enterFullscreen","exitFullscreen","onClick","onHoverEnter","onHoverLeave","navigateTo","sendAndHandleSdkError","navigateToDefaultPage","handlersLogger","HandlersPrivate","initializeHandlers","handlers","handleThemeChange","handleLoad","handleBeforeUnload","uninitializeHandlers","themeChangeHandler","loadHandler","beforeUnloadHandler","beforeSuspendOrTerminateHandler","resumeHandler","callHandlerLogger","callHandler","sendMessage","doesHandlerExist","contexts","registrationHelper","loadContext","resumeContext","convertToResumeContext","contentUrl","readyToUnload","serializeMessageRequest","restOfMessage","uuidAsString","deserializeMessageRequest","deserializeMessageResponse","serializedResponse","restOfResponse","serializeMessageResponse","nestedAppAuthLogger","tryPolyfillWithNestedAppAuthBridgeLogger","tryPolyfillWithNestedAppAuthBridge","parsedClientSupportedSDKVersion","nestedAppAuth","extendedWindow","nestedAppAuthBridge","createNestedAppAuthBridge","createNestedAppAuthBridgeLogger","bridgeHandlers","onMessage","sendPostMessage","nestedAppAuthBridgeHandler","evt","addEventListener","eventName","postMessage","parsedMessage","messageType","removeEventListener","communicationLogger","CommunicationPrivate","messageListener","processIncomingMessage","parent","opener","topWindow","nativeInterface","onNativeMessage","handleIncomingMessageFromParent","parentOrigin","processAuthBridgeMessage","sendNestedAuthRequestToTopWindow","parentMessageQueue","childMessageQueue","nextMessageId","callbacks","clear","promiseCallbacks","portCallbacks","legacyMessageIdsToUuidMap","actionName","wasSuccessful","defaultError","waitForResponse","sendMessageToParentHelper","waitForPort","requestUuid","port","MessagePort","argsOrCallback","Function","request","topMessageQueue","Map","sendNestedAuthRequestToTopWindowLogger","targetWindow","createNestedAppAuthRequest","getMessageIdsAsLogString","func","sendRequestToTargetWindowHelper","sendRequestToTargetWindowHelperLogger","messageRequest","targetWindowName","getTargetName","framelessPostMessage","targetOrigin","getTargetOrigin","getTargetMessageQueue","sendMessageToParentHelperLogger","createMessageRequest","processIncomingMessageLogger","messageSource","originalEvent","origin","shouldProcessIncomingMessage","updateRelationships","handleIncomingMessageFromChild","processAuthBridgeMessageLogger","onMessageReceived","parsedData","topOrigin","flushMessageQueue","shouldProcessIncomingMessageLogger","messageOriginURL","isOriginValid","handleIncomingMessageFromParentLogger","retrieveMessageUUIDFromResponse","responseUUID","callbackUUID","retrieveMessageUUIDFromCallback","promiseCallbackUUID","portCallbackUUID","find","_value","removeMessageHandlers","callbackId","delete","isPartialResponse","promiseCallback","portCallback","ports","handleIncomingMessageFromChildLogger","called","sendMessageResponseToChild","areTopAndParentWindowsDistinct","flushMessageQueueLogger","targetMessageQueue","shift","messageQueueMonitor","createMessageResponse","customEvent","createMessageEvent","messageId","messageUuid","timestamp","now","NotificationTypes","ViewerActionTypes","UserSettingTypes","registerGetLogHandler","privateAPIsTelemetryVersionNumber","uploadCustomApp","manifestBlob","onComplete","sendCustomMessage","sendCustomEvent","registerCustomHandler","customHandler","registerUserSettingsChangeHandler","settingTypes","openFilePreview","filePreviewParameters","description","objectUrl","downloadUrl","webPreviewUrl","webEditUrl","baseUrl","editFile","viewerAction","fileOpenPreference","conversationId","sizeInBytes","conversationsTelemetryVersionNumber","copilot","openConversation","openConversationRequest","sendPromise","onStartConversation","onCloseConversation","closeConversation","getChatMembers","eligibility","appEligibilityInformation","getEligibilityInfo","externalAppAuthenticationTelemetryVersionNumber","externalAppAuthentication","OriginalRequestType","InvokeResponseType","InvokeErrorCode","validateOriginalRequestInfo","originalRequestInfo","requestType","ActionExecuteInvokeRequest","actionExecuteRequest","ActionExecuteInvokeRequestType","INTERNAL_ERROR","QueryMessageExtensionRequest","commandId","parameters","parameter","isActionExecuteResponse","actionResponse","responseType","ActionExecuteInvokeResponse","statusCode","isInvokeError","values","authenticateAndResendRequest","typeSafeAppId","authenticateWithSSO","authenticateWithSSOAndResendRequest","authenticateWithOauth2","titleId","oauthConfigId","oauthWindowParameters","authenticateWithPowerPlatformConnectorPlugins","signInUrl","externalAppAuthenticationForCEA","authenticateWithOauth","defaultExternalAppError","externalAppCardActions","ActionOpenUrlType","ActionOpenUrlErrorCode","processActionSubmit","actionSubmitPayload","processActionOpenUrl","fromElement","externalAppCardActionsForCEA","externalAppCommands","processActionCommand","extractedParameters","filesTelemetryVersionNumber","files","CloudStorageProvider","CloudStorageProviderType","SpecialDocumentLibraryType","DocumentLibraryAccessType","FileDownloadStatus","CloudStorageProviderFileAction","getSdkError","getCloudStorageFolders","addCloudStorageFolder","deleteCloudStorageFolder","folderToDelete","getCloudStorageFolderContents","folder","providerCode","isSubdirectory","openCloudStorageFile","file","getExternalProviders","excludeAddedProviders","copyMoveFiles","selectedFiles","destinationFolder","destinationProviderCode","isMove","getFileDownloads","openDownloadFolder","fileObjectId","addCloudStorageProvider","INVALID_ARGUMENTS","removeCloudStorageProvider","logoutRequest","addCloudStorageProviderFile","addNewFileRequest","renameCloudStorageProviderFile","renameFileRequest","deleteCloudStorageProviderFile","deleteFileRequest","itemList","downloadCloudStorageProviderFile","downloadFileRequest","uploadCloudStorageProviderFile","uploadFileRequest","registerCloudStorageProviderListChangeHandler","registerCloudStorageProviderContentChangeHandler","meetingRoomTelemetryVersionNumber","getPairedMeetingRoomInfo","sendCommandToPairedMeetingRoom","commandName","registerMeetingRoomCapabilitiesUpdateHandler","capabilities","registerMeetingRoomStatesUpdateHandler","states","otherAppStateChange","showNotification","showNotificationParameters","registerAppInstallationHandler","appInstallHandler","unregisterAppInstallationHandler","remoteCameraTelemetryVersionNumber","ControlCommand","ErrorReason","SessionTerminatedReason","getCapableParticipants","requestControl","participant","sendControlCommand","terminateSession","registerOnCapableParticipantsChangeHandler","registerOnErrorHandler","registerOnDeviceStateChangeHandler","registerOnSessionStatusChangeHandler","selectAppEntity","threadId","categories","teamsTelemetryVersionNumber","getTeamChannels","refreshSiteUrl","getUserJoinedTeams","teamInstanceParameters","oldPlatformError","getConfigSetting","VideoFrameTick","startedAtInMs","performance","setTimeoutCallbacks","intervalInMs","next","tick","timeoutIds","VideoPerformanceStatistics","distributionBinSize","reportStatisticsResult","sampleCount","distributionBins","Uint32Array","processStarts","effectId","frameWidth","frameHeight","effectParam","suitableForThisSession","reportAndResetSession","getStatistics","processEnds","durationInMillisecond","frameProcessingStartedAt","binIndex","currentSession","duration","resetCurrentSession","getNextTimeout","timeoutId","bind","maxSessionTimeoutInMs","initialSessionTimeoutInMs","videoPerformanceMonitorTelemetryVersionNumber","VideoPerformanceMonitor","reportPerformanceEvent","isFirstFrameProcessed","frameProcessTimeLimit","frameProcessingTimeCost","processedFrameCount","performanceStatistics","startMonitorSlowFrameProcessing","averageFrameProcessingTime","calculateFPSInterval","setFrameProcessTimeLimit","timeLimit","reportApplyingVideoEffect","applyingEffect","appliedEffect","reportVideoEffectChanged","reportStartFrameProcessing","reportFrameProcessed","reportGettingTextureStream","streamId","gettingTextureStreamStartedAt","currentStreamId","reportTextureStreamAcquired","timeTaken","videoEffectsTelemetryVersionNumber","videoEffects","videoPerformanceMonitor","VideoFrameFormat","EffectChangeType","EffectFailureReason","notifyVideoFrameProcessed","notifyError","mediaStream","registerForMediaStream","videoFrameHandler","doesSupportMediaStream","mediaStreamInfo","monitoredVideoFrameHandler","createMonitoredVideoFrameHandler","processMediaStream","videoFrameData","originalFrame","videoFrame","codedWidth","codedHeight","processedFrame","registerForVideoBuffer","videoBufferHandler","doesSupportSharedFrame","videoBufferData","normalizeVideoBufferData","newVideoBufferData","videoFrameBuffer","isTextureStreamAvailable","webview","getTextureStream","registerTextureStream","registerForVideoFrame","timeLimitInfo","notifySelectedVideoEffectChanged","effectChangeType","registerForVideoEffect","createEffectParameterChangeCallback","videoEffectsUtilTelemetryVersionNumber","generator","createProcessedStreamGeneratorWithoutSource","pipeVideoSourceToGenerator","getInputVideoTrack","DefaultTransformer","processMediaStreamWithMetadata","TransformerWithMetadata","chrome","tracks","getVideoTracks","MediaStreamTrackGenerator","kind","videoTrack","transformer","sink","MediaStreamTrackProcessor","track","readable","pipeThrough","TransformStream","pipeTo","transform","controller","frameProcessedByApp","VideoFrame","enqueue","OneTextureHeader","headerBuffer","ONE_TEXTURE_INPUT_ID","INVALID_HEADER_ERROR","UNSUPPORTED_LAYOUT_ERROR","headerDataView","oneTextureLayoutId","frameRowOffset","frameFormat","multiStreamHeaderRowOffset","multiStreamCount","OneTextureMetadata","metadataBuffer","streamCount","metadataMap","AUDIO_INFERENCE_RESULT_STREAM_ID","ATTRIBUTE_ID_MAP_STREAM_ID","metadataDataView","streamDataOffset","streamDataSize","streamData","audioInferenceResult","attributes","textDecoder","TextDecoder","count","nullTerminatorStartIndex","findIndex","attributeId","decode","metadata","shouldDiscardAudioInferenceResult","extractVideoFrameAndMetadata","texture","headerRect","copyTo","rect","header","metadataRect","visibleRect","discardAudioInferenceResult","validReason","InitializationFailure","videoEffectsExTelemetryVersionNumber","videoEffectsEx","frameProcessingTimeoutInMs","ErrorLevel","createFrameProcessingTimeout","frameProcessingTimer","Warn","receivedVideoFrame","clearProcessingTimeout","normalizedVideoBufferData","errorLevel","metadataInTexture","updatePersonalizedEffects","effects","notifyFatalError","Fatal","hostEntityTelemetryVersionNumber","hostEntity","validateEmailAddress","emailString","emailIsEmptyOrUndefined","atIndex","periodIndexAfterAt","AppTypes","tab","validateThreadId","validateTab","internalTabInstanceId","addAndConfigure","hostEntityIds","appTypes","getAll","reconfigure","rename","EmailAddress","teamsDeepLinkUsersUrlParameterName","createTeamsDeepLinkForChat","users","topic","usersSearchParameter","topicSearchParameter","messageSearchParameter","createTeamsDeepLinkForCall","targets","withVideo","withVideoSearchParameter","sourceSearchParameter","createTeamsDeepLinkForCalendar","attendees","startTime","endTime","subject","attendeeSearchParameter","attendee","startTimeSearchParameter","endTimeSearchParameter","subjectSearchParameter","contentSearchParameter","createTeamsDeepLinkForAppInstallDialog","openAppInstallDialog","openAPPInstallDialogParams","mediaTelemetryVersionNumber","mediaLogger","media","createFile","assembleAttachment","sequence","sort","item","decodeAttachment","attachment","decoded","chunk","byteNumbers","chunkSequence","throwExceptionIfMediaCallIsNotSupportedOnMobile","mediaInputs","isMediaCallForVideoAndImageInputs","isMediaCallForNonFullScreenVideoMode","isMediaCallForImageOutputFormats","isVideoControllerRegistered","mediaType","MediaType","Video","videoProps","videoController","validateSelectMediaInputs","maxMediaCount","Image","imageProps","imageOutputFormats","VideoAndImage","videoAndImageProps","isFullScreenMode","validateGetMediaInputs","FileFormat","ID","validateViewImagesInput","uriList","validateScanBarCodeInput","barCodeConfig","timeOutIntervalInSec","validatePeoplePickerInput","peoplePickerInputs","setSelected","openOrgWideSearchInChatOrChannel","singleSelect","MediaControllerEvent","CameraStartMode","Source","ImageUriType","ImageOutputFormats","File","isPermissionSupported","permissions","captureImage","hasPermission","Media","requestPermission","that","super","preview","getMedia","getMediaViaCallback","getMediaViaHandler","helper","mediaMimeType","localUriId","mediaResult","mediaChunk","assemble","MediaController","controllerCallback","notifyEventToHost","mediaEvent","getMediaType","mediaControllerEvent","stop","StopRecording","VideoController","notifyEventToApp","StartRecording","onRecordingStarted","selectMedia","invalidInput","localAttachments","mediaArray","viewImages","scanBarCode","barCodeTelemetryVersionNumber","barCode","openChatHelper","openChatRequest","members","openChat","openGroupChat","chatRequest","clipboard","base64StringContent","writeParams","geoLocationTelemetryVersionNumber","geoLocation","getAdaptiveCardSchemaVersion","getCurrentLocation","allowChooseLocation","showMap","GeoLocation","chooseLocation","showLocation","appWindowTelemetryVersionNumber","ChildAppWindow","ParentAppWindow","Instance","_instance","secondaryBrowser","getLocation","props","meetingTelemetryVersionNumber","MicStateChangeReason","MeetingReactionType","MeetingType","CallType","SharingProtocol","EventActionSource","appShareButton","startAppAudioHandling","requestAppAudioHandlingParams","isAppHandlingAudio","isHostAudioless","micState","newMicState","micMuteStateChangedCallback","setMicStateWithReason","isMicMuted","HostInitiated","AppDeclinedToChange","AppFailedToChange","selectedDevicesInHost","audioDeviceSelectionChangedCallback","stopAppAudioHandling","getIncomingClientAudioState","toggleIncomingClientAudio","getMeetingDetails","getMeetingDetailsVerbose","shouldGetVerboseDetails","details","GroupCall","OneOnOneCall","originalCallerInfo","getAuthenticationTokenForAnonymousUser","getLiveStreamState","requestStartLiveStreaming","streamUrl","streamKey","requestStopLiveStreaming","registerLiveStreamChangedHandler","shareAppContentToStage","appContentUrl","shareOptions","sharingProtocol","Collaborative","getAppContentStageSharingCapabilities","stopSharingAppContentToStage","getAppContentStageSharingState","registerSpeakingStateChangeHandler","registerRaiseHandStateChangedHandler","registerMeetingReactionReceivedHandler","joinMeeting","joinMeetingParams","joinWebUrl","serializedJoinMeetingParams","Other","setOptions","shareInformation","requestAppAudioHandling","updateMicState","AppInitiated","openPurchaseExperience","param1","param2","planInfo","calendar","openCalendarItem","openCalendarItemParams","itemId","composeMeeting","composeMeetingParams","mail","ComposeMailType","openMailItem","openMailItemParams","composeMail","composeMailParams","print","registerOnLoadHandlerHelper","registerBeforeUnloadHandlerHelper","enablePrintCapability","event","ctrlKey","metaKey","keyCode","cancelBubble","preventDefault","stopImmediatePropagation","registerOnLoadHandler","registerBeforeUnloadHandler","validateShowProfileRequest","showProfileRequest","modality","targetElementBoundingRect","triggerType","validatePersona","persona","identifiers","AadObjectId","Smtp","Upn","selectPeopleHelper","selectPeople","profile","showProfile","isValid","requestInternal","targetRectangle","searchTelemetryVersionNumber","search","onChangeHandlerName","onClosedHandlerName","onExecutedHandlerName","registerHandlers","onClosedHandler","onExecuteHandler","onChangeHandler","unregisterHandlers","closeSearch","shareWebContentHelper","shareWebContentRequest","SharingAPIMessages","shareWebContent","validateNonEmptyContent","shareRequest","validateTypeConsistency","validateContentForSupportedTypes","history","getContent","StageViewOpenMode","stageViewParams","visualMediaTelemetryVersionNumber","visualMedia","CameraRestriction","image","ensureSupported","ensureImageInputValid","imageInput","maxVisualMediaCount","ensureResponseValid","maxCount","captureImages","cameraImageInputs","retrieveImages","galleryImageInputs","getHostName","cachedHostName","isWebStorageClearedOnUserLogOut","CallModalities","startCall","startCallParams","requestedModalities","appInitializationTelemetryVersionNumber","appInitialization","Files3PLogger","thirdPartyCloudStorage","AttachmentListHelper","fileType","lastChunkVal","handleGetDragAndDropFilesCallbackRequest","fileResult","fileChunk","endOfFile","fileBlob","receivedFile","fileName","isLastFile","getDragAndDropFiles","dragAndDropInput","dragAndDropFileCallback","publicAPIsTelemetryVersionNumber","registerAppButtonClickHandler","registerAppButtonHoverEnterHandler","registerAppButtonHoverLeaveHandler","registerChangeSettingsHandler","tabInfo","subEntityLabel","subEntityWebUrl","executeDeepLink","completionHandler","setFrameContext","navigationTelemetryVersionNumber","settingsTelemetryVersionNumber","getSettings","setSettings","instanceSettings","tasksTelemetryVersionNumber","tasks","getUrlDialogInfoFromTaskInfo","taskInfo","getBotUrlDialogInfoFromTaskInfo","getDefaultSizeIfNotProvided","startTask","dialogSubmitHandler","sdkResponse","updateTask","extra","submitTask","interactiveTelemetryVersionNumber","liveShare","UserMeetingRole","ContainerState","LiveShareHost","getFluidTenantInfo","getFluidToken","containerId","getFluidContainerId","setFluidContainerId","getNtpTime","registerClientId","clientId","getClientRoles","getClientInfo","deserializeCart","cartData","cartItems","deserializeCartItems","cartItemsData","cartItem","imageURL","accessories","serializeCartItems","rest","validateCartItems","validateBasicCartItem","validateAccessoryItems","accessoryItems","accessoryItem","basicCartItem","validatePrice","price","validateQuantity","quantity","toFixed","validateCartStatus","cartStatus","marketplace","CartStatus","marketplaceTelemetryVersionNumber","Intent","cartVersion","getCart","addOrUpdateCartItems","addOrUpdateCartItemsParams","cartId","removeCartItems","removeCartItemsParams","cartItemIds","updateCartStatus","updateCartStatusParams"],"sourceRoot":""}