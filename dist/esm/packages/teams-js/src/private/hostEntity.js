import{sendMessageToParentAsync as r}from"../internal/communication.js";import{ensureInitialized as e}from"../internal/internalAPIs.js";import{getApiVersionTag as o}from"../internal/telemetry.js";import{ErrorCode as t,isSdkError as n}from"../public/interfaces.js";import{runtime as a}from"../public/runtime.js";const s="v2";var i;!function(i){(i.AppTypes||(i.AppTypes={})).edu="EDU",function(d){function u(){var r;return!!(e(a)&&i.isSupported()&&(null===(r=a.supports.hostEntity)||void 0===r?void 0:r.tab))}function E(r){if(!r||0==r.length)throw new Error(`Error code: ${t.INVALID_ARGUMENTS}, message: ThreadId cannot be null or empty`)}function m(r){if(!(null==r?void 0:r.internalTabInstanceId)||0===r.internalTabInstanceId.length)throw new Error(`Error code: ${t.INVALID_ARGUMENTS}, message: TabId cannot be null or empty`)}d.addAndConfigure=function(i,d){if(e(a),!u())throw new Error(`Error code: ${t.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);if(E(i.threadId),d&&0===d.length)throw new Error(`Error code: ${t.INVALID_ARGUMENTS}, message: App types cannot be an empty array`);return r(o(s,"hostEntity.tab.addAndConfigure"),"hostEntity.tab.addAndConfigure",[i,d]).then((([r])=>{var e;if(n(r))throw new Error(`Error code: ${r.errorCode}, message: ${null!==(e=r.message)&&void 0!==e?e:"None"}`);return r}))},d.getAll=function(i){if(e(a),!u())throw new Error(`Error code: ${t.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return E(i.threadId),r(o(s,"hostEntity.tab.getAll"),"hostEntity.tab.getAll",[i]).then((([r])=>{var e;if(n(r))throw new Error(`Error code: ${r.errorCode}, message: ${null!==(e=r.message)&&void 0!==e?e:"None"}`);return r}))},d.reconfigure=function(i,d){if(e(a),!u())throw new Error(`Error code: ${t.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return m(i),E(d.threadId),r(o(s,"hostEntity.tab.reconfigure"),"hostEntity.tab.reconfigure",[i,d]).then((([r])=>{var e;if(n(r))throw new Error(`Error code: ${r.errorCode}, message: ${null!==(e=r.message)&&void 0!==e?e:"None"}`);return r}))},d.rename=function(i,d){if(e(a),!u())throw new Error(`Error code: ${t.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return m(i),E(d.threadId),r(o(s,"hostEntity.tab.rename"),"hostEntity.tab.rename",[i,d]).then((([r])=>{var e;if(n(r))throw new Error(`Error code: ${r.errorCode}, message: ${null!==(e=r.message)&&void 0!==e?e:"None"}`);return r}))},d.remove=function(i,d){if(e(a),!u())throw new Error(`Error code: ${t.NOT_SUPPORTED_ON_PLATFORM}, message: Not supported on platform`);return E(d.threadId),m(i),r(o(s,"hostEntity.tab.remove"),"hostEntity.tab.remove",[i,d]).then((([r])=>{var e;if(n(r))throw new Error(`Error code: ${r.errorCode}, message: ${null!==(e=r.message)&&void 0!==e?e:"None"}`);return!0}))},d.isSupported=u}(i.tab||(i.tab={})),i.isSupported=function(){return!(!e(a)||!a.supports.hostEntity)}}(i||(i={}));export{i as hostEntity};
