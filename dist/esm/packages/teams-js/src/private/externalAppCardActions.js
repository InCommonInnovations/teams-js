import{sendMessageToParentAsync as r}from"../internal/communication.js";import{ensureInitialized as n}from"../internal/internalAPIs.js";import{getApiVersionTag as e}from"../internal/telemetry.js";import{FrameContexts as t,errorNotSupportedOnPlatform as o}from"../public/constants.js";import{runtime as i}from"../public/runtime.js";import{AppId as p}from"../public/appId.js";var c;!function(c){var s,A;function l(){return!(!n(i)||!i.supports.externalAppCardActions)}(s=c.ActionOpenUrlType||(c.ActionOpenUrlType={})).DeepLinkDialog="DeepLinkDialog",s.DeepLinkOther="DeepLinkOther",s.DeepLinkStageView="DeepLinkStageView",s.GenericUrl="GenericUrl",(A=c.ActionOpenUrlErrorCode||(c.ActionOpenUrlErrorCode={})).INTERNAL_ERROR="INTERNAL_ERROR",A.INVALID_LINK="INVALID_LINK",A.NOT_SUPPORTED="NOT_SUPPORTED",c.processActionSubmit=function(c,s){if(n(i,t.content),!l())throw o;const A=new p(c);return r(e("v2","externalAppCardActions.processActionSubmit"),"externalAppCardActions.processActionSubmit",[A.toString(),s]).then((([r,n])=>{if(!r)throw n}))},c.processActionOpenUrl=function(c,s,A){if(n(i,t.content),!l())throw o;const a=new p(c);return r(e("v2","externalAppCardActions.processActionOpenUrl"),"externalAppCardActions.processActionOpenUrl",[a.toString(),s.href,A]).then((([r,n])=>{if(r)throw r;return n}))},c.isSupported=l}(c||(c={}));export{c as externalAppCardActions};
