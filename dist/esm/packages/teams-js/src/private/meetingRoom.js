import{sendAndHandleSdkError as e}from"../internal/communication.js";import{registerHandler as o}from"../internal/handlers.js";import{ensureInitialized as t}from"../internal/internalAPIs.js";import{getApiVersionTag as n}from"../internal/telemetry.js";import{errorNotSupportedOnPlatform as i}from"../public/constants.js";import{runtime as r}from"../public/runtime.js";const m="v1";var a;!function(a){function g(){return!(!t(r)||!r.supports.meetingRoom)}a.getPairedMeetingRoomInfo=function(){return new Promise((o=>{if(t(r),!g())throw i;o(e(n(m,"meetingRoom.getPairedMeetingRoomInfo"),"meetingRoom.getPairedMeetingRoomInfo"))}))},a.sendCommandToPairedMeetingRoom=function(o){return new Promise((a=>{if(!o||0==o.length)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty");if(t(r),!g())throw i;a(e(n(m,"meetingRoom.sendCommandToPairedMeetingRoom"),"meetingRoom.sendCommandToPairedMeetingRoom",o))}))},a.registerMeetingRoomCapabilitiesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null");if(t(r),!g())throw i;o(n(m,"meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler"),"meetingRoom.meetingRoomCapabilitiesUpdate",(o=>{t(r),e(o)}))},a.registerMeetingRoomStatesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null");if(t(r),!g())throw i;o(n(m,"meetingRoom.registerMeetingRoomStatesUpdateHandler"),"meetingRoom.meetingRoomStatesUpdate",(o=>{t(r),e(o)}))},a.isSupported=g}(a||(a={}));export{a as meetingRoom};
