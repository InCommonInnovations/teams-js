import{sendMessageToParent as r,sendAndHandleStatusAndReason as e}from"../internal/communication.js";import{registerHandler as n,removeHandler as t}from"../internal/handlers.js";import{ensureInitialized as s}from"../internal/internalAPIs.js";import{getApiVersionTag as o}from"../internal/telemetry.js";import{FrameContexts as c,errorNotSupportedOnPlatform as a}from"./constants.js";import{runtime as i}from"./runtime.js";const h="v2";var u;!function(u){const l="search.queryChange",m="search.queryClose",f="search.queryExecute";function p(){return!(!s(i)||!i.supports.search)}u.registerHandlers=function(r,e,t){if(s(i,c.content),!p())throw a;n(o(h,"search.registerOnClosedHandler"),m,r),n(o(h,"search.registerOnExecutedHandler"),f,e),t&&n(o(h,"search.registerOnChangeHandler"),l,t)},u.unregisterHandlers=function(){if(s(i,c.content),!p())throw a;r(o(h,"search.unregisterHandlers"),"search.unregister"),t(l),t(m),t(f)},u.isSupported=p,u.closeSearch=function(){return new Promise((r=>{if(s(i,c.content),!p())throw new Error("Not supported");r(e(o(h,"search.closeSearch"),"search.closeSearch"))}))}}(u||(u={}));export{u as search};
