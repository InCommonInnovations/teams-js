import{sendAndHandleSdkError as o}from"../internal/communication.js";import{ensureInitialized as t}from"../internal/internalAPIs.js";import{getApiVersionTag as n}from"../internal/telemetry.js";import{FrameContexts as i,errorNotSupportedOnPlatform as r}from"./constants.js";import{DevicePermission as s,ErrorCode as e}from"./interfaces.js";import{runtime as a}from"./runtime.js";const c="v2";var p;!function(p){function m(){return!!(t(a)&&a.supports.geoLocation&&a.supports.permissions)}p.getCurrentLocation=function(){if(t(a,i.content,i.task),!m())throw r;return o(n(c,"geoLocation.getCurrentLocation"),"location.getLocation",{allowChooseLocation:!1,showMap:!1})},p.hasPermission=function(){if(t(a,i.content,i.task),!m())throw r;const e=s.GeoLocation;return new Promise((t=>{t(o(n(c,"geoLocation.hasPermission"),"permissions.has",e))}))},p.requestPermission=function(){if(t(a,i.content,i.task),!m())throw r;const e=s.GeoLocation;return new Promise((t=>{t(o(n(c,"geoLocation.requestPermission"),"permissions.request",e))}))},p.isSupported=m,function(s){function p(){return!!(t(a)&&a.supports.geoLocation&&a.supports.geoLocation.map&&a.supports.permissions)}s.chooseLocation=function(){if(t(a,i.content,i.task),!p())throw r;return o(n(c,"geoLocation.map.chooseLocation"),"location.getLocation",{allowChooseLocation:!0,showMap:!0})},s.showLocation=function(s){if(t(a,i.content,i.task),!p())throw r;if(!s)throw{errorCode:e.INVALID_ARGUMENTS};return o(n(c,"geoLocation.showLocation"),"location.showLocation",s)},s.isSupported=p}(p.map||(p.map={}))}(p||(p={}));export{p as geoLocation};
