import{sendAndHandleSdkError as e}from"../internal/communication.js";import{peoplePickerRequiredVersion as t}from"../internal/constants.js";import{ensureInitialized as o,isCurrentSDKVersionAtLeast as r}from"../internal/internalAPIs.js";import{validatePeoplePickerInput as n}from"../internal/mediaUtil.js";import{getApiVersionTag as i}from"../internal/telemetry.js";import{callCallbackWithErrorOrResultFromPromiseAndReturnPromise as p}from"../internal/utils.js";import{FrameContexts as s,errorNotSupportedOnPlatform as l}from"./constants.js";import{ErrorCode as m}from"./interfaces.js";import{runtime as f}from"./runtime.js";var c;!function(c){function a(o,i){return new Promise((p=>{if(!r(t))throw{errorCode:m.OLD_PLATFORM};if(!n(i))throw{errorCode:m.INVALID_ARGUMENTS};if(!u())throw l;p(e(o,"people.selectPeople",i))}))}function u(){return!(!o(f)||!f.supports.people)}c.selectPeople=function(e,t){let r,n;o(f,s.content,s.task,s.settings);let l="";return"function"==typeof e?([r,n]=[e,t],l=i("v1","people.selectPeople")):(n=e,l=i("v2","people.selectPeople")),p(a,r,l,n)},c.isSupported=u}(c||(c={}));export{c as people};
