import{sendAndHandleSdkError as r}from"../internal/communication.js";import{ensureInitialized as o}from"../internal/internalAPIs.js";import{validateScanBarCodeInput as e}from"../internal/mediaUtil.js";import{getApiVersionTag as n}from"../internal/telemetry.js";import{FrameContexts as t,errorNotSupportedOnPlatform as s}from"./constants.js";import{ErrorCode as i,DevicePermission as m}from"./interfaces.js";import{runtime as a}from"./runtime.js";const c="v2";var f;!function(f){function p(){return!!(o(a)&&a.supports.barCode&&a.supports.permissions)}f.scanBarCode=function(m){return new Promise((f=>{if(o(a,t.content,t.task),!p())throw s;if(!e(m))throw{errorCode:i.INVALID_ARGUMENTS};f(r(n(c,"barCode.scanBarCode"),"media.scanBarCode",m))}))},f.hasPermission=function(){if(o(a,t.content,t.task),!p())throw s;const e=m.Media;return new Promise((o=>{o(r(n(c,"barCode.hasPermission"),"permissions.has",e))}))},f.requestPermission=function(){if(o(a,t.content,t.task),!p())throw s;const e=m.Media;return new Promise((o=>{o(r(n(c,"barCode.requestPermission"),"permissions.request",e))}))},f.isSupported=p}(f||(f={}));export{f as barCode};
