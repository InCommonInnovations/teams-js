import{__awaiter as t}from"../../../../node_modules/tslib/tslib.es6.js";import{sendAndUnwrap as e}from"../internal/communication.js";import{GlobalVars as o}from"../internal/globalVars.js";import{ensureInitialized as r}from"../internal/internalAPIs.js";import{getApiVersionTag as i}from"../internal/telemetry.js";import{app as n}from"./app.js";import{errorNotSupportedOnPlatform as s,HostClientType as a,HostName as l}from"./constants.js";import{runtime as m}from"./runtime.js";var p;!function(p){function d(){return r(m)&&void 0!==m.supports.webStorage}p.isWebStorageClearedOnUserLogOut=function(){return t(this,void 0,void 0,(function*(){if(r(m),!d())throw s;return!(!m.isLegacyTeams||o.hostClientType!==a.android&&o.hostClientType!==a.ios&&o.hostClientType!==a.ipados||(yield function(){return t(this,void 0,void 0,(function*(){return null===u&&(u=(yield n.getContext()).app.host.name),u}))}())!==l.teams)||(yield e(i("v2","webStorage.isWebStorageClearedOnUserLogOut"),"webStorage.isWebStorageClearedOnUserLogOut"))}))},p.isSupported=d}(p||(p={}));let u=null;export{p as webStorage};
